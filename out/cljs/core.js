// Compiled by ClojureScript 0.0-2740 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2740";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6885__delegate = function (args){
return console.log.apply(console,(function (){var G__6884 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6884) : cljs.core.into_array.call(null,G__6884));
})());
};
var G__6885 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6886__i = 0, G__6886__a = new Array(arguments.length -  0);
while (G__6886__i < G__6886__a.length) {G__6886__a[G__6886__i] = arguments[G__6886__i + 0]; ++G__6886__i;}
  args = new cljs.core.IndexedSeq(G__6886__a,0);
} 
return G__6885__delegate.call(this,args);};
G__6885.cljs$lang$maxFixedArity = 0;
G__6885.cljs$lang$applyTo = (function (arglist__6887){
var args = cljs.core.seq(arglist__6887);
return G__6885__delegate(args);
});
G__6885.cljs$core$IFn$_invoke$arity$variadic = G__6885__delegate;
return G__6885;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__6889 = x;
return goog.isString(G__6889);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6891 = x__$1;
return goog.typeOf(G__6891);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3747__auto__ = ty;
if(cljs.core.truth_(and__3747__auto__)){
return ty.cljs$lang$type;
} else {
return and__3747__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6893 = obj;
return goog.typeOf(G__6893);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6895 = Symbol;
return goog.typeOf(G__6895);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4646__auto___6897 = len;
var i_6898 = (0);
while(true){
if((i_6898 < n__4646__auto___6897)){
(new_arr[i_6898] = (arr[i_6898]));

var G__6899 = (i_6898 + (1));
i_6898 = G__6899;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6900 = (i + (1));
i = G__6900;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__6909__delegate = function (array,i,idxs){
var G__6906 = aget;
var G__6907 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6908 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6906,G__6907,G__6908) : cljs.core.apply.call(null,G__6906,G__6907,G__6908));
};
var G__6909 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6910__i = 0, G__6910__a = new Array(arguments.length -  2);
while (G__6910__i < G__6910__a.length) {G__6910__a[G__6910__i] = arguments[G__6910__i + 2]; ++G__6910__i;}
  idxs = new cljs.core.IndexedSeq(G__6910__a,0);
} 
return G__6909__delegate.call(this,array,i,idxs);};
G__6909.cljs$lang$maxFixedArity = 2;
G__6909.cljs$lang$applyTo = (function (arglist__6911){
var array = cljs.core.first(arglist__6911);
arglist__6911 = cljs.core.next(arglist__6911);
var i = cljs.core.first(arglist__6911);
var idxs = cljs.core.rest(arglist__6911);
return G__6909__delegate(array,i,idxs);
});
G__6909.cljs$core$IFn$_invoke$arity$variadic = G__6909__delegate;
return G__6909;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__6912 = null;
if (arguments.length > 2) {
var G__6913__i = 0, G__6913__a = new Array(arguments.length -  2);
while (G__6913__i < G__6913__a.length) {G__6913__a[G__6913__i] = arguments[G__6913__i + 2]; ++G__6913__i;}
G__6912 = new cljs.core.IndexedSeq(G__6913__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__6922__delegate = function (array,idx,idx2,idxv){
var G__6918 = aset;
var G__6919 = (array[idx]);
var G__6920 = idx2;
var G__6921 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6918,G__6919,G__6920,G__6921) : cljs.core.apply.call(null,G__6918,G__6919,G__6920,G__6921));
};
var G__6922 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6923__i = 0, G__6923__a = new Array(arguments.length -  3);
while (G__6923__i < G__6923__a.length) {G__6923__a[G__6923__i] = arguments[G__6923__i + 3]; ++G__6923__i;}
  idxv = new cljs.core.IndexedSeq(G__6923__a,0);
} 
return G__6922__delegate.call(this,array,idx,idx2,idxv);};
G__6922.cljs$lang$maxFixedArity = 3;
G__6922.cljs$lang$applyTo = (function (arglist__6924){
var array = cljs.core.first(arglist__6924);
arglist__6924 = cljs.core.next(arglist__6924);
var idx = cljs.core.first(arglist__6924);
arglist__6924 = cljs.core.next(arglist__6924);
var idx2 = cljs.core.first(arglist__6924);
var idxv = cljs.core.rest(arglist__6924);
return G__6922__delegate(array,idx,idx2,idxv);
});
G__6922.cljs$core$IFn$_invoke$arity$variadic = G__6922__delegate;
return G__6922;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__6925 = null;
if (arguments.length > 3) {
var G__6926__i = 0, G__6926__a = new Array(arguments.length -  3);
while (G__6926__i < G__6926__a.length) {G__6926__a[G__6926__i] = arguments[G__6926__i + 3]; ++G__6926__i;}
G__6925 = new cljs.core.IndexedSeq(G__6926__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__6932 = (function (a,x){
a.push(x);

return a;
});
var G__6933 = [];
var G__6934 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6932,G__6933,G__6934) : cljs.core.reduce.call(null,G__6932,G__6933,G__6934));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6935__i = 0, G__6935__a = new Array(arguments.length -  2);
while (G__6935__i < G__6935__a.length) {G__6935__a[G__6935__i] = arguments[G__6935__i + 2]; ++G__6935__i;}
  args = new cljs.core.IndexedSeq(G__6935__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__6936){
var obj = cljs.core.first(arglist__6936);
arglist__6936 = cljs.core.next(arglist__6936);
var s = cljs.core.first(arglist__6936);
var args = cljs.core.rest(arglist__6936);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6938 = {};
return obj6938;
})();


cljs.core.IFn = (function (){var obj6940 = {};
return obj6940;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6986 = x__4403__auto__;
return goog.typeOf(G__6986);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6988 = x__4403__auto__;
return goog.typeOf(G__6988);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6990 = x__4403__auto__;
return goog.typeOf(G__6990);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6992 = x__4403__auto__;
return goog.typeOf(G__6992);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6994 = x__4403__auto__;
return goog.typeOf(G__6994);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6996 = x__4403__auto__;
return goog.typeOf(G__6996);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__6998 = x__4403__auto__;
return goog.typeOf(G__6998);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7000 = x__4403__auto__;
return goog.typeOf(G__7000);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7002 = x__4403__auto__;
return goog.typeOf(G__7002);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7004 = x__4403__auto__;
return goog.typeOf(G__7004);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7006 = x__4403__auto__;
return goog.typeOf(G__7006);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7008 = x__4403__auto__;
return goog.typeOf(G__7008);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7010 = x__4403__auto__;
return goog.typeOf(G__7010);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7012 = x__4403__auto__;
return goog.typeOf(G__7012);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7014 = x__4403__auto__;
return goog.typeOf(G__7014);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7016 = x__4403__auto__;
return goog.typeOf(G__7016);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7018 = x__4403__auto__;
return goog.typeOf(G__7018);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7020 = x__4403__auto__;
return goog.typeOf(G__7020);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7022 = x__4403__auto__;
return goog.typeOf(G__7022);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7024 = x__4403__auto__;
return goog.typeOf(G__7024);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7026 = x__4403__auto__;
return goog.typeOf(G__7026);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__7028 = x__4403__auto__;
return goog.typeOf(G__7028);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7030 = {};
return obj7030;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3747__auto__ = value;
if(and__3747__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3747__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4403__auto__ = (((value == null))?null:value);
return (function (){var or__3759__auto__ = (cljs.core._clone[(function (){var G__7034 = x__4403__auto__;
return goog.typeOf(G__7034);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clone["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7036 = {};
return obj7036;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._count[(function (){var G__7040 = x__4403__auto__;
return goog.typeOf(G__7040);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._count["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7042 = {};
return obj7042;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._empty[(function (){var G__7046 = x__4403__auto__;
return goog.typeOf(G__7046);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._empty["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7048 = {};
return obj7048;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._conj[(function (){var G__7052 = x__4403__auto__;
return goog.typeOf(G__7052);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7054 = {};
return obj7054;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__7060 = x__4403__auto__;
return goog.typeOf(G__7060);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__7062 = x__4403__auto__;
return goog.typeOf(G__7062);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj7064 = {};
return obj7064;
})();


cljs.core.ISeq = (function (){var obj7066 = {};
return obj7066;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._first[(function (){var G__7070 = x__4403__auto__;
return goog.typeOf(G__7070);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rest[(function (){var G__7074 = x__4403__auto__;
return goog.typeOf(G__7074);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7076 = {};
return obj7076;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._next[(function (){var G__7080 = x__4403__auto__;
return goog.typeOf(G__7080);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7082 = {};
return obj7082;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__7088 = x__4403__auto__;
return goog.typeOf(G__7088);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__7090 = x__4403__auto__;
return goog.typeOf(G__7090);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7092 = {};
return obj7092;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7096 = x__4403__auto__;
return goog.typeOf(G__7096);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc[(function (){var G__7100 = x__4403__auto__;
return goog.typeOf(G__7100);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7102 = {};
return obj7102;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc[(function (){var G__7106 = x__4403__auto__;
return goog.typeOf(G__7106);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7108 = {};
return obj7108;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._key[(function (){var G__7112 = x__4403__auto__;
return goog.typeOf(G__7112);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._val[(function (){var G__7116 = x__4403__auto__;
return goog.typeOf(G__7116);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._val["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7118 = {};
return obj7118;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin[(function (){var G__7122 = x__4403__auto__;
return goog.typeOf(G__7122);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7124 = {};
return obj7124;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._peek[(function (){var G__7128 = x__4403__auto__;
return goog.typeOf(G__7128);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._peek["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._pop[(function (){var G__7132 = x__4403__auto__;
return goog.typeOf(G__7132);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7134 = {};
return obj7134;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n[(function (){var G__7138 = x__4403__auto__;
return goog.typeOf(G__7138);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7140 = {};
return obj7140;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref[(function (){var G__7144 = x__4403__auto__;
return goog.typeOf(G__7144);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7146 = {};
return obj7146;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7150 = x__4403__auto__;
return goog.typeOf(G__7150);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7152 = {};
return obj7152;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._meta[(function (){var G__7156 = x__4403__auto__;
return goog.typeOf(G__7156);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7158 = {};
return obj7158;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._with_meta[(function (){var G__7162 = x__4403__auto__;
return goog.typeOf(G__7162);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7164 = {};
return obj7164;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__7170 = x__4403__auto__;
return goog.typeOf(G__7170);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__7172 = x__4403__auto__;
return goog.typeOf(G__7172);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7174 = {};
return obj7174;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._kv_reduce[(function (){var G__7178 = x__4403__auto__;
return goog.typeOf(G__7178);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7180 = {};
return obj7180;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._equiv[(function (){var G__7184 = x__4403__auto__;
return goog.typeOf(G__7184);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._equiv["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7186 = {};
return obj7186;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._hash[(function (){var G__7190 = x__4403__auto__;
return goog.typeOf(G__7190);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._hash["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7192 = {};
return obj7192;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._seq[(function (){var G__7196 = x__4403__auto__;
return goog.typeOf(G__7196);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7198 = {};
return obj7198;
})();


cljs.core.IList = (function (){var obj7200 = {};
return obj7200;
})();


cljs.core.IRecord = (function (){var obj7202 = {};
return obj7202;
})();


cljs.core.IReversible = (function (){var obj7204 = {};
return obj7204;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rseq[(function (){var G__7208 = x__4403__auto__;
return goog.typeOf(G__7208);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rseq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7210 = {};
return obj7210;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq[(function (){var G__7214 = x__4403__auto__;
return goog.typeOf(G__7214);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7218 = x__4403__auto__;
return goog.typeOf(G__7218);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._entry_key[(function (){var G__7222 = x__4403__auto__;
return goog.typeOf(G__7222);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._comparator[(function (){var G__7226 = x__4403__auto__;
return goog.typeOf(G__7226);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._comparator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7228 = {};
return obj7228;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._write[(function (){var G__7232 = x__4403__auto__;
return goog.typeOf(G__7232);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._write["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._flush[(function (){var G__7236 = x__4403__auto__;
return goog.typeOf(G__7236);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._flush["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7238 = {};
return obj7238;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._pr_writer[(function (){var G__7242 = x__4403__auto__;
return goog.typeOf(G__7242);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7244 = {};
return obj7244;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3747__auto__ = d;
if(and__3747__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4403__auto__ = (((d == null))?null:d);
return (function (){var or__3759__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7248 = x__4403__auto__;
return goog.typeOf(G__7248);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7250 = {};
return obj7250;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._notify_watches[(function (){var G__7254 = x__4403__auto__;
return goog.typeOf(G__7254);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._add_watch[(function (){var G__7258 = x__4403__auto__;
return goog.typeOf(G__7258);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._remove_watch[(function (){var G__7262 = x__4403__auto__;
return goog.typeOf(G__7262);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7264 = {};
return obj7264;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._as_transient[(function (){var G__7268 = x__4403__auto__;
return goog.typeOf(G__7268);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7270 = {};
return obj7270;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._conj_BANG_[(function (){var G__7274 = x__4403__auto__;
return goog.typeOf(G__7274);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7278 = x__4403__auto__;
return goog.typeOf(G__7278);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7280 = {};
return obj7280;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7284 = x__4403__auto__;
return goog.typeOf(G__7284);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7286 = {};
return obj7286;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7290 = x__4403__auto__;
return goog.typeOf(G__7290);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7292 = {};
return obj7292;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7296 = x__4403__auto__;
return goog.typeOf(G__7296);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._pop_BANG_[(function (){var G__7300 = x__4403__auto__;
return goog.typeOf(G__7300);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7302 = {};
return obj7302;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7306 = x__4403__auto__;
return goog.typeOf(G__7306);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7308 = {};
return obj7308;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._compare[(function (){var G__7312 = x__4403__auto__;
return goog.typeOf(G__7312);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._compare["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7314 = {};
return obj7314;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._drop_first[(function (){var G__7318 = x__4403__auto__;
return goog.typeOf(G__7318);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7320 = {};
return obj7320;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_first[(function (){var G__7324 = x__4403__auto__;
return goog.typeOf(G__7324);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_rest[(function (){var G__7328 = x__4403__auto__;
return goog.typeOf(G__7328);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7330 = {};
return obj7330;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_next[(function (){var G__7334 = x__4403__auto__;
return goog.typeOf(G__7334);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7336 = {};
return obj7336;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._name[(function (){var G__7340 = x__4403__auto__;
return goog.typeOf(G__7340);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._name["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._namespace[(function (){var G__7344 = x__4403__auto__;
return goog.typeOf(G__7344);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._namespace["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7346 = {};
return obj7346;
})();


cljs.core.IReset = (function (){var obj7348 = {};
return obj7348;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._reset_BANG_[(function (){var G__7352 = x__4403__auto__;
return goog.typeOf(G__7352);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7354 = {};
return obj7354;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__7364 = x__4403__auto__;
return goog.typeOf(G__7364);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__7366 = x__4403__auto__;
return goog.typeOf(G__7366);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__7368 = x__4403__auto__;
return goog.typeOf(G__7368);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__7370 = x__4403__auto__;
return goog.typeOf(G__7370);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj7372 = {};
return obj7372;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7376 = x__4403__auto__;
return goog.typeOf(G__7376);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj7378 = {};
return obj7378;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._iterator[(function (){var G__7382 = x__4403__auto__;
return goog.typeOf(G__7382);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._iterator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7385 = (4294967295);
var G__7386 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7385,G__7386) : Math.imul.call(null,G__7385,G__7386));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__7389 = a;
var G__7390 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7389,G__7390) : Math.imul.call(null,G__7389,G__7390));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7391 = (i + (2));
var G__7392 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7391;
h1 = G__7392;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7394 = {};
return obj7394;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7395 = (i + (1));
var G__7396 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7395;
hash = G__7396;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7400 = {};
return obj7400;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__7403 = o;
if(G__7403){
var bit__4433__auto__ = (G__7403.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4433__auto__) || (G__7403.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7404 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7404) : Math.floor.call(null,G__7404));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7411 = a.ns;
var G__7412 = b.ns;
return goog.array.defaultCompare(G__7411,G__7412);
})();
if(((0) === nsc)){
var G__7413 = a.name;
var G__7414 = b.name;
return goog.array.defaultCompare(G__7413,G__7414);
} else {
return nsc;
}
}
} else {
var G__7415 = a.name;
var G__7416 = b.name;
return goog.array.defaultCompare(G__7415,G__7416);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__7418 = null;
var G__7418__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__7418__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__7418 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7418__2.call(this,self__,coll);
case 3:
return G__7418__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7418.cljs$core$IFn$_invoke$arity$2 = G__7418__2;
G__7418.cljs$core$IFn$_invoke$arity$3 = G__7418__3;
return G__7418;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args7417){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7417)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__7466 = null;
var G__7466__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__7466__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__7466__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__7466__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__7466__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__7466__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__7466__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__7466__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__7466__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__7466__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__7466__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__7466__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__7466__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__7466__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__7466__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__7466__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__7466__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__7466__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__7466__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__7466__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__7466__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__7466__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7422 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7423 = a;
var G__7424 = b;
var G__7425 = c;
var G__7426 = d;
var G__7427 = e;
var G__7428 = f;
var G__7429 = g;
var G__7430 = h;
var G__7431 = i;
var G__7432 = j;
var G__7433 = k;
var G__7434 = l;
var G__7435 = m;
var G__7436 = n;
var G__7437 = o;
var G__7438 = p;
var G__7439 = q;
var G__7440 = r;
var G__7441 = s;
var G__7442 = t;
var G__7443 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440,G__7441,G__7442,G__7443) : cljs.core.apply.call(null,G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440,G__7441,G__7442,G__7443));
});
G__7466 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7466__1.call(this,self__);
case 2:
return G__7466__2.call(this,self__,a);
case 3:
return G__7466__3.call(this,self__,a,b);
case 4:
return G__7466__4.call(this,self__,a,b,c);
case 5:
return G__7466__5.call(this,self__,a,b,c,d);
case 6:
return G__7466__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7466__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7466__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7466__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7466__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7466__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7466__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7466__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7466__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7466__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7466__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7466__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7466__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7466__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7466__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7466__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7466__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7466.cljs$core$IFn$_invoke$arity$1 = G__7466__1;
G__7466.cljs$core$IFn$_invoke$arity$2 = G__7466__2;
G__7466.cljs$core$IFn$_invoke$arity$3 = G__7466__3;
G__7466.cljs$core$IFn$_invoke$arity$4 = G__7466__4;
G__7466.cljs$core$IFn$_invoke$arity$5 = G__7466__5;
G__7466.cljs$core$IFn$_invoke$arity$6 = G__7466__6;
G__7466.cljs$core$IFn$_invoke$arity$7 = G__7466__7;
G__7466.cljs$core$IFn$_invoke$arity$8 = G__7466__8;
G__7466.cljs$core$IFn$_invoke$arity$9 = G__7466__9;
G__7466.cljs$core$IFn$_invoke$arity$10 = G__7466__10;
G__7466.cljs$core$IFn$_invoke$arity$11 = G__7466__11;
G__7466.cljs$core$IFn$_invoke$arity$12 = G__7466__12;
G__7466.cljs$core$IFn$_invoke$arity$13 = G__7466__13;
G__7466.cljs$core$IFn$_invoke$arity$14 = G__7466__14;
G__7466.cljs$core$IFn$_invoke$arity$15 = G__7466__15;
G__7466.cljs$core$IFn$_invoke$arity$16 = G__7466__16;
G__7466.cljs$core$IFn$_invoke$arity$17 = G__7466__17;
G__7466.cljs$core$IFn$_invoke$arity$18 = G__7466__18;
G__7466.cljs$core$IFn$_invoke$arity$19 = G__7466__19;
G__7466.cljs$core$IFn$_invoke$arity$20 = G__7466__20;
G__7466.cljs$core$IFn$_invoke$arity$21 = G__7466__21;
G__7466.cljs$core$IFn$_invoke$arity$22 = G__7466__22;
return G__7466;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args7421){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7421)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7444 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7445 = a;
var G__7446 = b;
var G__7447 = c;
var G__7448 = d;
var G__7449 = e;
var G__7450 = f;
var G__7451 = g;
var G__7452 = h;
var G__7453 = i;
var G__7454 = j;
var G__7455 = k;
var G__7456 = l;
var G__7457 = m;
var G__7458 = n;
var G__7459 = o;
var G__7460 = p;
var G__7461 = q;
var G__7462 = r;
var G__7463 = s;
var G__7464 = t;
var G__7465 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460,G__7461,G__7462,G__7463,G__7464,G__7465) : cljs.core.apply.call(null,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460,G__7461,G__7462,G__7463,G__7464,G__7465));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__7468 = x;
if(G__7468){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__7468.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__7468.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7468);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7468);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__7470 = value;
if(G__7470){
var bit__4440__auto__ = (G__7470.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4440__auto__) || (G__7470.cljs$core$ICloneable$)){
return true;
} else {
if((!G__7470.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7470);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7472 = coll;
if(G__7472){
var bit__4433__auto__ = (G__7472.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4433__auto__) || (G__7472.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7474 = coll;
if(G__7474){
var bit__4433__auto__ = (G__7474.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__7474.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__7476 = coll;
if(G__7476){
var bit__4433__auto__ = (G__7476.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__7476.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7478 = coll;
if(G__7478){
var bit__4433__auto__ = (G__7478.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4433__auto__) || (G__7478.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__7483__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7484 = y;
var G__7485 = cljs.core.first(more);
var G__7486 = cljs.core.next(more);
x = G__7484;
y = G__7485;
more = G__7486;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7487__i = 0, G__7487__a = new Array(arguments.length -  2);
while (G__7487__i < G__7487__a.length) {G__7487__a[G__7487__i] = arguments[G__7487__i + 2]; ++G__7487__i;}
  more = new cljs.core.IndexedSeq(G__7487__a,0);
} 
return G__7483__delegate.call(this,x,y,more);};
G__7483.cljs$lang$maxFixedArity = 2;
G__7483.cljs$lang$applyTo = (function (arglist__7488){
var x = cljs.core.first(arglist__7488);
arglist__7488 = cljs.core.next(arglist__7488);
var y = cljs.core.first(arglist__7488);
var more = cljs.core.rest(arglist__7488);
return G__7483__delegate(x,y,more);
});
G__7483.cljs$core$IFn$_invoke$arity$variadic = G__7483__delegate;
return G__7483;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__7489 = null;
if (arguments.length > 2) {
var G__7490__i = 0, G__7490__a = new Array(arguments.length -  2);
while (G__7490__i < G__7490__a.length) {G__7490__a[G__7490__i] = arguments[G__7490__i + 2]; ++G__7490__i;}
G__7489 = new cljs.core.IndexedSeq(G__7490__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__7491 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7491) : cljs.core.es6_iterator_seq.call(null,G__7491));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7492 = (n + (1));
var G__7493 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7494 = cljs.core.next(coll__$1);
n = G__7492;
hash_code = G__7493;
coll__$1 = G__7494;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7495 = (n + (1));
var G__7496 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7497 = cljs.core.next(coll__$1);
n = G__7495;
hash_code = G__7496;
coll__$1 = G__7497;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__7498 = o;
return goog.getUid(G__7498);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__7500 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7500) : cljs.core.deref.call(null,G__7500));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7507 = val;
var G__7508 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7507,G__7508) : f.call(null,G__7507,G__7508));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7513 = nval;
var G__7514 = (n + (1));
val = G__7513;
n = G__7514;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7509 = val__$1;
var G__7510 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7509,G__7510) : f.call(null,G__7509,G__7510));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7515 = nval;
var G__7516 = (n + (1));
val__$1 = G__7515;
n = G__7516;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7511 = val__$1;
var G__7512 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7511,G__7512) : f.call(null,G__7511,G__7512));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7517 = nval;
var G__7518 = (n + (1));
val__$1 = G__7517;
n = G__7518;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7525 = val;
var G__7526 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7525,G__7526) : f.call(null,G__7525,G__7526));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7531 = nval;
var G__7532 = (n + (1));
val = G__7531;
n = G__7532;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7527 = val__$1;
var G__7528 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7527,G__7528) : f.call(null,G__7527,G__7528));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7533 = nval;
var G__7534 = (n + (1));
val__$1 = G__7533;
n = G__7534;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7529 = val__$1;
var G__7530 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7529,G__7530) : f.call(null,G__7529,G__7530));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7535 = nval;
var G__7536 = (n + (1));
val__$1 = G__7535;
n = G__7536;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__7538 = x;
if(G__7538){
var bit__4440__auto__ = (G__7538.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4440__auto__) || (G__7538.cljs$core$ICounted$)){
return true;
} else {
if((!G__7538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7538);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__7540 = x;
if(G__7540){
var bit__4440__auto__ = (G__7540.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4440__auto__) || (G__7540.cljs$core$IIndexed$)){
return true;
} else {
if((!G__7540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7540);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7541 = coll__$1;
var G__7542 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7541,G__7542) : cljs.core.equiv_sequential.call(null,G__7541,G__7542));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7543 = o;
var G__7544 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7543,G__7544) : cljs.core.cons.call(null,G__7543,G__7544));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7547 = coll__$1;
var G__7548 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7547,G__7548) : cljs.core.equiv_sequential.call(null,G__7547,G__7548));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__7549 = cljs.core.List.EMPTY;
var G__7550 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7549,G__7550) : cljs.core.with_meta.call(null,G__7549,G__7550));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__7551 = f;
var G__7552 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7551,G__7552) : cljs.core.seq_reduce.call(null,G__7551,G__7552));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__7553 = f;
var G__7554 = start;
var G__7555 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7553,G__7554,G__7555) : cljs.core.seq_reduce.call(null,G__7553,G__7554,G__7555));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7556 = o;
var G__7557 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7556,G__7557) : cljs.core.cons.call(null,G__7556,G__7557));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__7558 = sn;
s = G__7558;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__7563__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__7564 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__7565 = cljs.core.first(xs);
var G__7566 = cljs.core.next(xs);
coll = G__7564;
x = G__7565;
xs = G__7566;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__7563 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__7567__i = 0, G__7567__a = new Array(arguments.length -  2);
while (G__7567__i < G__7567__a.length) {G__7567__a[G__7567__i] = arguments[G__7567__i + 2]; ++G__7567__i;}
  xs = new cljs.core.IndexedSeq(G__7567__a,0);
} 
return G__7563__delegate.call(this,coll,x,xs);};
G__7563.cljs$lang$maxFixedArity = 2;
G__7563.cljs$lang$applyTo = (function (arglist__7568){
var coll = cljs.core.first(arglist__7568);
arglist__7568 = cljs.core.next(arglist__7568);
var x = cljs.core.first(arglist__7568);
var xs = cljs.core.rest(arglist__7568);
return G__7563__delegate(coll,x,xs);
});
G__7563.cljs$core$IFn$_invoke$arity$variadic = G__7563__delegate;
return G__7563;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__7569 = null;
if (arguments.length > 2) {
var G__7570__i = 0, G__7570__a = new Array(arguments.length -  2);
while (G__7570__i < G__7570__a.length) {G__7570__a[G__7570__i] = arguments[G__7570__i + 2]; ++G__7570__i;}
G__7569 = new cljs.core.IndexedSeq(G__7570__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__7569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__7571 = cljs.core.next(s);
var G__7572 = (acc + (1));
s = G__7571;
acc = G__7572;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__7574 = coll;
if(G__7574){
var bit__4433__auto__ = (G__7574.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4433__auto__) || (G__7574.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__7575 = cljs.core.next(coll);
var G__7576 = (n - (1));
coll = G__7575;
n = G__7576;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__7577 = cljs.core.next(coll);
var G__7578 = (n - (1));
var G__7579 = not_found;
coll = G__7577;
n = G__7578;
not_found = G__7579;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__7584 = coll;
if(G__7584){
var bit__4433__auto__ = (G__7584.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__7584.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7585 = coll;
if(G__7585){
var bit__4440__auto__ = (G__7585.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__7585.cljs$core$ISeq$)){
return true;
} else {
if((!G__7585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7585);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__7586 = coll;
if(G__7586){
var bit__4433__auto__ = (G__7586.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__7586.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7587 = coll;
if(G__7587){
var bit__4440__auto__ = (G__7587.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__7587.cljs$core$ISeq$)){
return true;
} else {
if((!G__7587.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7587);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7587);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__7588 = (n__$1 - (1));
var G__7589 = cljs.core.rest(xs);
n__$1 = G__7588;
xs = G__7589;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__7592 = o;
if(G__7592){
var bit__4433__auto__ = (G__7592.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__7592.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__7593 = o;
if(G__7593){
var bit__4433__auto__ = (G__7593.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__7593.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__7597__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__7598 = ret;
var G__7599 = cljs.core.first(kvs);
var G__7600 = cljs.core.second(kvs);
var G__7601 = cljs.core.nnext(kvs);
coll = G__7598;
k = G__7599;
v = G__7600;
kvs = G__7601;
continue;
} else {
return ret;
}
break;
}
};
var G__7597 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7602__i = 0, G__7602__a = new Array(arguments.length -  3);
while (G__7602__i < G__7602__a.length) {G__7602__a[G__7602__i] = arguments[G__7602__i + 3]; ++G__7602__i;}
  kvs = new cljs.core.IndexedSeq(G__7602__a,0);
} 
return G__7597__delegate.call(this,coll,k,v,kvs);};
G__7597.cljs$lang$maxFixedArity = 3;
G__7597.cljs$lang$applyTo = (function (arglist__7603){
var coll = cljs.core.first(arglist__7603);
arglist__7603 = cljs.core.next(arglist__7603);
var k = cljs.core.first(arglist__7603);
arglist__7603 = cljs.core.next(arglist__7603);
var v = cljs.core.first(arglist__7603);
var kvs = cljs.core.rest(arglist__7603);
return G__7597__delegate(coll,k,v,kvs);
});
G__7597.cljs$core$IFn$_invoke$arity$variadic = G__7597__delegate;
return G__7597;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__7604 = null;
if (arguments.length > 3) {
var G__7605__i = 0, G__7605__a = new Array(arguments.length -  3);
while (G__7605__i < G__7605__a.length) {G__7605__a[G__7605__i] = arguments[G__7605__i + 3]; ++G__7605__i;}
G__7604 = new cljs.core.IndexedSeq(G__7605__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__7608__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7609 = ret;
var G__7610 = cljs.core.first(ks);
var G__7611 = cljs.core.next(ks);
coll = G__7609;
k = G__7610;
ks = G__7611;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7608 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7612__i = 0, G__7612__a = new Array(arguments.length -  2);
while (G__7612__i < G__7612__a.length) {G__7612__a[G__7612__i] = arguments[G__7612__i + 2]; ++G__7612__i;}
  ks = new cljs.core.IndexedSeq(G__7612__a,0);
} 
return G__7608__delegate.call(this,coll,k,ks);};
G__7608.cljs$lang$maxFixedArity = 2;
G__7608.cljs$lang$applyTo = (function (arglist__7613){
var coll = cljs.core.first(arglist__7613);
arglist__7613 = cljs.core.next(arglist__7613);
var k = cljs.core.first(arglist__7613);
var ks = cljs.core.rest(arglist__7613);
return G__7608__delegate(coll,k,ks);
});
G__7608.cljs$core$IFn$_invoke$arity$variadic = G__7608__delegate;
return G__7608;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__7614 = null;
if (arguments.length > 2) {
var G__7615__i = 0, G__7615__a = new Array(arguments.length -  2);
while (G__7615__i < G__7615__a.length) {G__7615__a[G__7615__i] = arguments[G__7615__i + 2]; ++G__7615__i;}
G__7614 = new cljs.core.IndexedSeq(G__7615__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3759__auto__ = (function (){var G__7620 = f;
return goog.isFunction(G__7620);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__7621 = f;
if(G__7621){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto____$1 = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
return G__7621.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7621.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7621);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8087 = null;
var G__8087__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8087__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7623 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7623) : self__.afn.call(null,G__7623));
});
var G__8087__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7624 = a;
var G__7625 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7624,G__7625) : self__.afn.call(null,G__7624,G__7625));
});
var G__8087__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7626 = a;
var G__7627 = b;
var G__7628 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7626,G__7627,G__7628) : self__.afn.call(null,G__7626,G__7627,G__7628));
});
var G__8087__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7629 = a;
var G__7630 = b;
var G__7631 = c;
var G__7632 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7629,G__7630,G__7631,G__7632) : self__.afn.call(null,G__7629,G__7630,G__7631,G__7632));
});
var G__8087__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7633 = a;
var G__7634 = b;
var G__7635 = c;
var G__7636 = d;
var G__7637 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7633,G__7634,G__7635,G__7636,G__7637) : self__.afn.call(null,G__7633,G__7634,G__7635,G__7636,G__7637));
});
var G__8087__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7638 = a;
var G__7639 = b;
var G__7640 = c;
var G__7641 = d;
var G__7642 = e;
var G__7643 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7638,G__7639,G__7640,G__7641,G__7642,G__7643) : self__.afn.call(null,G__7638,G__7639,G__7640,G__7641,G__7642,G__7643));
});
var G__8087__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7644 = a;
var G__7645 = b;
var G__7646 = c;
var G__7647 = d;
var G__7648 = e;
var G__7649 = f;
var G__7650 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7644,G__7645,G__7646,G__7647,G__7648,G__7649,G__7650) : self__.afn.call(null,G__7644,G__7645,G__7646,G__7647,G__7648,G__7649,G__7650));
});
var G__8087__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7651 = a;
var G__7652 = b;
var G__7653 = c;
var G__7654 = d;
var G__7655 = e;
var G__7656 = f;
var G__7657 = g;
var G__7658 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7651,G__7652,G__7653,G__7654,G__7655,G__7656,G__7657,G__7658) : self__.afn.call(null,G__7651,G__7652,G__7653,G__7654,G__7655,G__7656,G__7657,G__7658));
});
var G__8087__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7659 = a;
var G__7660 = b;
var G__7661 = c;
var G__7662 = d;
var G__7663 = e;
var G__7664 = f;
var G__7665 = g;
var G__7666 = h;
var G__7667 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7659,G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667) : self__.afn.call(null,G__7659,G__7660,G__7661,G__7662,G__7663,G__7664,G__7665,G__7666,G__7667));
});
var G__8087__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7668 = a;
var G__7669 = b;
var G__7670 = c;
var G__7671 = d;
var G__7672 = e;
var G__7673 = f;
var G__7674 = g;
var G__7675 = h;
var G__7676 = i;
var G__7677 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7668,G__7669,G__7670,G__7671,G__7672,G__7673,G__7674,G__7675,G__7676,G__7677) : self__.afn.call(null,G__7668,G__7669,G__7670,G__7671,G__7672,G__7673,G__7674,G__7675,G__7676,G__7677));
});
var G__8087__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7678 = a;
var G__7679 = b;
var G__7680 = c;
var G__7681 = d;
var G__7682 = e;
var G__7683 = f;
var G__7684 = g;
var G__7685 = h;
var G__7686 = i;
var G__7687 = j;
var G__7688 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7678,G__7679,G__7680,G__7681,G__7682,G__7683,G__7684,G__7685,G__7686,G__7687,G__7688) : self__.afn.call(null,G__7678,G__7679,G__7680,G__7681,G__7682,G__7683,G__7684,G__7685,G__7686,G__7687,G__7688));
});
var G__8087__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7689 = a;
var G__7690 = b;
var G__7691 = c;
var G__7692 = d;
var G__7693 = e;
var G__7694 = f;
var G__7695 = g;
var G__7696 = h;
var G__7697 = i;
var G__7698 = j;
var G__7699 = k;
var G__7700 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7689,G__7690,G__7691,G__7692,G__7693,G__7694,G__7695,G__7696,G__7697,G__7698,G__7699,G__7700) : self__.afn.call(null,G__7689,G__7690,G__7691,G__7692,G__7693,G__7694,G__7695,G__7696,G__7697,G__7698,G__7699,G__7700));
});
var G__8087__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7701 = a;
var G__7702 = b;
var G__7703 = c;
var G__7704 = d;
var G__7705 = e;
var G__7706 = f;
var G__7707 = g;
var G__7708 = h;
var G__7709 = i;
var G__7710 = j;
var G__7711 = k;
var G__7712 = l;
var G__7713 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7701,G__7702,G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710,G__7711,G__7712,G__7713) : self__.afn.call(null,G__7701,G__7702,G__7703,G__7704,G__7705,G__7706,G__7707,G__7708,G__7709,G__7710,G__7711,G__7712,G__7713));
});
var G__8087__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7714 = a;
var G__7715 = b;
var G__7716 = c;
var G__7717 = d;
var G__7718 = e;
var G__7719 = f;
var G__7720 = g;
var G__7721 = h;
var G__7722 = i;
var G__7723 = j;
var G__7724 = k;
var G__7725 = l;
var G__7726 = m;
var G__7727 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7714,G__7715,G__7716,G__7717,G__7718,G__7719,G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727) : self__.afn.call(null,G__7714,G__7715,G__7716,G__7717,G__7718,G__7719,G__7720,G__7721,G__7722,G__7723,G__7724,G__7725,G__7726,G__7727));
});
var G__8087__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7728 = a;
var G__7729 = b;
var G__7730 = c;
var G__7731 = d;
var G__7732 = e;
var G__7733 = f;
var G__7734 = g;
var G__7735 = h;
var G__7736 = i;
var G__7737 = j;
var G__7738 = k;
var G__7739 = l;
var G__7740 = m;
var G__7741 = n;
var G__7742 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7728,G__7729,G__7730,G__7731,G__7732,G__7733,G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740,G__7741,G__7742) : self__.afn.call(null,G__7728,G__7729,G__7730,G__7731,G__7732,G__7733,G__7734,G__7735,G__7736,G__7737,G__7738,G__7739,G__7740,G__7741,G__7742));
});
var G__8087__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7743 = a;
var G__7744 = b;
var G__7745 = c;
var G__7746 = d;
var G__7747 = e;
var G__7748 = f;
var G__7749 = g;
var G__7750 = h;
var G__7751 = i;
var G__7752 = j;
var G__7753 = k;
var G__7754 = l;
var G__7755 = m;
var G__7756 = n;
var G__7757 = o;
var G__7758 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749,G__7750,G__7751,G__7752,G__7753,G__7754,G__7755,G__7756,G__7757,G__7758) : self__.afn.call(null,G__7743,G__7744,G__7745,G__7746,G__7747,G__7748,G__7749,G__7750,G__7751,G__7752,G__7753,G__7754,G__7755,G__7756,G__7757,G__7758));
});
var G__8087__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7759 = a;
var G__7760 = b;
var G__7761 = c;
var G__7762 = d;
var G__7763 = e;
var G__7764 = f;
var G__7765 = g;
var G__7766 = h;
var G__7767 = i;
var G__7768 = j;
var G__7769 = k;
var G__7770 = l;
var G__7771 = m;
var G__7772 = n;
var G__7773 = o;
var G__7774 = p;
var G__7775 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765,G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775) : self__.afn.call(null,G__7759,G__7760,G__7761,G__7762,G__7763,G__7764,G__7765,G__7766,G__7767,G__7768,G__7769,G__7770,G__7771,G__7772,G__7773,G__7774,G__7775));
});
var G__8087__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7776 = a;
var G__7777 = b;
var G__7778 = c;
var G__7779 = d;
var G__7780 = e;
var G__7781 = f;
var G__7782 = g;
var G__7783 = h;
var G__7784 = i;
var G__7785 = j;
var G__7786 = k;
var G__7787 = l;
var G__7788 = m;
var G__7789 = n;
var G__7790 = o;
var G__7791 = p;
var G__7792 = q;
var G__7793 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783,G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793) : self__.afn.call(null,G__7776,G__7777,G__7778,G__7779,G__7780,G__7781,G__7782,G__7783,G__7784,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790,G__7791,G__7792,G__7793));
});
var G__8087__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7794 = a;
var G__7795 = b;
var G__7796 = c;
var G__7797 = d;
var G__7798 = e;
var G__7799 = f;
var G__7800 = g;
var G__7801 = h;
var G__7802 = i;
var G__7803 = j;
var G__7804 = k;
var G__7805 = l;
var G__7806 = m;
var G__7807 = n;
var G__7808 = o;
var G__7809 = p;
var G__7810 = q;
var G__7811 = r;
var G__7812 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812) : self__.afn.call(null,G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812));
});
var G__8087__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7813 = a;
var G__7814 = b;
var G__7815 = c;
var G__7816 = d;
var G__7817 = e;
var G__7818 = f;
var G__7819 = g;
var G__7820 = h;
var G__7821 = i;
var G__7822 = j;
var G__7823 = k;
var G__7824 = l;
var G__7825 = m;
var G__7826 = n;
var G__7827 = o;
var G__7828 = p;
var G__7829 = q;
var G__7830 = r;
var G__7831 = s;
var G__7832 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832) : self__.afn.call(null,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832));
});
var G__8087__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7833 = self__.afn;
var G__7834 = a;
var G__7835 = b;
var G__7836 = c;
var G__7837 = d;
var G__7838 = e;
var G__7839 = f;
var G__7840 = g;
var G__7841 = h;
var G__7842 = i;
var G__7843 = j;
var G__7844 = k;
var G__7845 = l;
var G__7846 = m;
var G__7847 = n;
var G__7848 = o;
var G__7849 = p;
var G__7850 = q;
var G__7851 = r;
var G__7852 = s;
var G__7853 = t;
var G__7854 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854) : cljs.core.apply.call(null,G__7833,G__7834,G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854));
});
G__8087 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8087__1.call(this,self__);
case 2:
return G__8087__2.call(this,self__,a);
case 3:
return G__8087__3.call(this,self__,a,b);
case 4:
return G__8087__4.call(this,self__,a,b,c);
case 5:
return G__8087__5.call(this,self__,a,b,c,d);
case 6:
return G__8087__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8087__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8087__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8087__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8087__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8087__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8087__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8087__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8087__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8087__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8087__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8087__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8087__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8087__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8087__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8087__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8087__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8087.cljs$core$IFn$_invoke$arity$1 = G__8087__1;
G__8087.cljs$core$IFn$_invoke$arity$2 = G__8087__2;
G__8087.cljs$core$IFn$_invoke$arity$3 = G__8087__3;
G__8087.cljs$core$IFn$_invoke$arity$4 = G__8087__4;
G__8087.cljs$core$IFn$_invoke$arity$5 = G__8087__5;
G__8087.cljs$core$IFn$_invoke$arity$6 = G__8087__6;
G__8087.cljs$core$IFn$_invoke$arity$7 = G__8087__7;
G__8087.cljs$core$IFn$_invoke$arity$8 = G__8087__8;
G__8087.cljs$core$IFn$_invoke$arity$9 = G__8087__9;
G__8087.cljs$core$IFn$_invoke$arity$10 = G__8087__10;
G__8087.cljs$core$IFn$_invoke$arity$11 = G__8087__11;
G__8087.cljs$core$IFn$_invoke$arity$12 = G__8087__12;
G__8087.cljs$core$IFn$_invoke$arity$13 = G__8087__13;
G__8087.cljs$core$IFn$_invoke$arity$14 = G__8087__14;
G__8087.cljs$core$IFn$_invoke$arity$15 = G__8087__15;
G__8087.cljs$core$IFn$_invoke$arity$16 = G__8087__16;
G__8087.cljs$core$IFn$_invoke$arity$17 = G__8087__17;
G__8087.cljs$core$IFn$_invoke$arity$18 = G__8087__18;
G__8087.cljs$core$IFn$_invoke$arity$19 = G__8087__19;
G__8087.cljs$core$IFn$_invoke$arity$20 = G__8087__20;
G__8087.cljs$core$IFn$_invoke$arity$21 = G__8087__21;
G__8087.cljs$core$IFn$_invoke$arity$22 = G__8087__22;
return G__8087;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7622){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7622)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7855 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7855) : self__.afn.call(null,G__7855));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7856 = a;
var G__7857 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7856,G__7857) : self__.afn.call(null,G__7856,G__7857));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7858 = a;
var G__7859 = b;
var G__7860 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7858,G__7859,G__7860) : self__.afn.call(null,G__7858,G__7859,G__7860));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7861 = a;
var G__7862 = b;
var G__7863 = c;
var G__7864 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7861,G__7862,G__7863,G__7864) : self__.afn.call(null,G__7861,G__7862,G__7863,G__7864));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7865 = a;
var G__7866 = b;
var G__7867 = c;
var G__7868 = d;
var G__7869 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7865,G__7866,G__7867,G__7868,G__7869) : self__.afn.call(null,G__7865,G__7866,G__7867,G__7868,G__7869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7870 = a;
var G__7871 = b;
var G__7872 = c;
var G__7873 = d;
var G__7874 = e;
var G__7875 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7870,G__7871,G__7872,G__7873,G__7874,G__7875) : self__.afn.call(null,G__7870,G__7871,G__7872,G__7873,G__7874,G__7875));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7876 = a;
var G__7877 = b;
var G__7878 = c;
var G__7879 = d;
var G__7880 = e;
var G__7881 = f;
var G__7882 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882) : self__.afn.call(null,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7883 = a;
var G__7884 = b;
var G__7885 = c;
var G__7886 = d;
var G__7887 = e;
var G__7888 = f;
var G__7889 = g;
var G__7890 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890) : self__.afn.call(null,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7891 = a;
var G__7892 = b;
var G__7893 = c;
var G__7894 = d;
var G__7895 = e;
var G__7896 = f;
var G__7897 = g;
var G__7898 = h;
var G__7899 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899) : self__.afn.call(null,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7900 = a;
var G__7901 = b;
var G__7902 = c;
var G__7903 = d;
var G__7904 = e;
var G__7905 = f;
var G__7906 = g;
var G__7907 = h;
var G__7908 = i;
var G__7909 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909) : self__.afn.call(null,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7910 = a;
var G__7911 = b;
var G__7912 = c;
var G__7913 = d;
var G__7914 = e;
var G__7915 = f;
var G__7916 = g;
var G__7917 = h;
var G__7918 = i;
var G__7919 = j;
var G__7920 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920) : self__.afn.call(null,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7921 = a;
var G__7922 = b;
var G__7923 = c;
var G__7924 = d;
var G__7925 = e;
var G__7926 = f;
var G__7927 = g;
var G__7928 = h;
var G__7929 = i;
var G__7930 = j;
var G__7931 = k;
var G__7932 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932) : self__.afn.call(null,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7933 = a;
var G__7934 = b;
var G__7935 = c;
var G__7936 = d;
var G__7937 = e;
var G__7938 = f;
var G__7939 = g;
var G__7940 = h;
var G__7941 = i;
var G__7942 = j;
var G__7943 = k;
var G__7944 = l;
var G__7945 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944,G__7945) : self__.afn.call(null,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944,G__7945));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7946 = a;
var G__7947 = b;
var G__7948 = c;
var G__7949 = d;
var G__7950 = e;
var G__7951 = f;
var G__7952 = g;
var G__7953 = h;
var G__7954 = i;
var G__7955 = j;
var G__7956 = k;
var G__7957 = l;
var G__7958 = m;
var G__7959 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959) : self__.afn.call(null,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7960 = a;
var G__7961 = b;
var G__7962 = c;
var G__7963 = d;
var G__7964 = e;
var G__7965 = f;
var G__7966 = g;
var G__7967 = h;
var G__7968 = i;
var G__7969 = j;
var G__7970 = k;
var G__7971 = l;
var G__7972 = m;
var G__7973 = n;
var G__7974 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974) : self__.afn.call(null,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7975 = a;
var G__7976 = b;
var G__7977 = c;
var G__7978 = d;
var G__7979 = e;
var G__7980 = f;
var G__7981 = g;
var G__7982 = h;
var G__7983 = i;
var G__7984 = j;
var G__7985 = k;
var G__7986 = l;
var G__7987 = m;
var G__7988 = n;
var G__7989 = o;
var G__7990 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990) : self__.afn.call(null,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7991 = a;
var G__7992 = b;
var G__7993 = c;
var G__7994 = d;
var G__7995 = e;
var G__7996 = f;
var G__7997 = g;
var G__7998 = h;
var G__7999 = i;
var G__8000 = j;
var G__8001 = k;
var G__8002 = l;
var G__8003 = m;
var G__8004 = n;
var G__8005 = o;
var G__8006 = p;
var G__8007 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007) : self__.afn.call(null,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005,G__8006,G__8007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8008 = a;
var G__8009 = b;
var G__8010 = c;
var G__8011 = d;
var G__8012 = e;
var G__8013 = f;
var G__8014 = g;
var G__8015 = h;
var G__8016 = i;
var G__8017 = j;
var G__8018 = k;
var G__8019 = l;
var G__8020 = m;
var G__8021 = n;
var G__8022 = o;
var G__8023 = p;
var G__8024 = q;
var G__8025 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025) : self__.afn.call(null,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8026 = a;
var G__8027 = b;
var G__8028 = c;
var G__8029 = d;
var G__8030 = e;
var G__8031 = f;
var G__8032 = g;
var G__8033 = h;
var G__8034 = i;
var G__8035 = j;
var G__8036 = k;
var G__8037 = l;
var G__8038 = m;
var G__8039 = n;
var G__8040 = o;
var G__8041 = p;
var G__8042 = q;
var G__8043 = r;
var G__8044 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044) : self__.afn.call(null,G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8045 = a;
var G__8046 = b;
var G__8047 = c;
var G__8048 = d;
var G__8049 = e;
var G__8050 = f;
var G__8051 = g;
var G__8052 = h;
var G__8053 = i;
var G__8054 = j;
var G__8055 = k;
var G__8056 = l;
var G__8057 = m;
var G__8058 = n;
var G__8059 = o;
var G__8060 = p;
var G__8061 = q;
var G__8062 = r;
var G__8063 = s;
var G__8064 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064) : self__.afn.call(null,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8065 = self__.afn;
var G__8066 = a;
var G__8067 = b;
var G__8068 = c;
var G__8069 = d;
var G__8070 = e;
var G__8071 = f;
var G__8072 = g;
var G__8073 = h;
var G__8074 = i;
var G__8075 = j;
var G__8076 = k;
var G__8077 = l;
var G__8078 = m;
var G__8079 = n;
var G__8080 = o;
var G__8081 = p;
var G__8082 = q;
var G__8083 = r;
var G__8084 = s;
var G__8085 = t;
var G__8086 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8065,G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086) : cljs.core.apply.call(null,G__8065,G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8091 = o;
if(G__8091){
var bit__4440__auto__ = (G__8091.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4440__auto__) || (G__8091.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8091.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8091);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3747__auto__ = !((o == null));
if(and__3747__auto__){
var G__8095 = o;
if(G__8095){
var bit__4440__auto__ = (G__8095.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__8095.cljs$core$IMeta$)){
return true;
} else {
if((!G__8095.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8095);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8095);
}
} else {
return and__3747__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__8098__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8099 = ret;
var G__8100 = cljs.core.first(ks);
var G__8101 = cljs.core.next(ks);
coll = G__8099;
k = G__8100;
ks = G__8101;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8098 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8102__i = 0, G__8102__a = new Array(arguments.length -  2);
while (G__8102__i < G__8102__a.length) {G__8102__a[G__8102__i] = arguments[G__8102__i + 2]; ++G__8102__i;}
  ks = new cljs.core.IndexedSeq(G__8102__a,0);
} 
return G__8098__delegate.call(this,coll,k,ks);};
G__8098.cljs$lang$maxFixedArity = 2;
G__8098.cljs$lang$applyTo = (function (arglist__8103){
var coll = cljs.core.first(arglist__8103);
arglist__8103 = cljs.core.next(arglist__8103);
var k = cljs.core.first(arglist__8103);
var ks = cljs.core.rest(arglist__8103);
return G__8098__delegate(coll,k,ks);
});
G__8098.cljs$core$IFn$_invoke$arity$variadic = G__8098__delegate;
return G__8098;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__8104 = null;
if (arguments.length > 2) {
var G__8105__i = 0, G__8105__a = new Array(arguments.length -  2);
while (G__8105__i < G__8105__a.length) {G__8105__a[G__8105__i] = arguments[G__8105__i + 2]; ++G__8105__i;}
G__8104 = new cljs.core.IndexedSeq(G__8105__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8107 = x;
if(G__8107){
var bit__4440__auto__ = (G__8107.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4440__auto__) || (G__8107.cljs$core$ICollection$)){
return true;
} else {
if((!G__8107.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8107);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8107);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8109 = x;
if(G__8109){
var bit__4440__auto__ = (G__8109.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4440__auto__) || (G__8109.cljs$core$ISet$)){
return true;
} else {
if((!G__8109.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8109);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8109);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__8111 = x;
if(G__8111){
var bit__4440__auto__ = (G__8111.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4440__auto__) || (G__8111.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8111.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8111);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8111);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__8113 = x;
if(G__8113){
var bit__4440__auto__ = (G__8113.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4440__auto__) || (G__8113.cljs$core$ISequential$)){
return true;
} else {
if((!G__8113.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8113);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8113);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__8115 = x;
if(G__8115){
var bit__4440__auto__ = (G__8115.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4440__auto__) || (G__8115.cljs$core$ISorted$)){
return true;
} else {
if((!G__8115.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8115);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8115);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__8117 = x;
if(G__8117){
var bit__4440__auto__ = (G__8117.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4440__auto__) || (G__8117.cljs$core$IReduce$)){
return true;
} else {
if((!G__8117.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8117);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8117);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8119 = x;
if(G__8119){
var bit__4440__auto__ = (G__8119.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4440__auto__) || (G__8119.cljs$core$IMap$)){
return true;
} else {
if((!G__8119.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8119);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8119);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__8121 = x;
if(G__8121){
var bit__4440__auto__ = (G__8121.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4440__auto__) || (G__8121.cljs$core$IVector$)){
return true;
} else {
if((!G__8121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8121);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__8123 = x;
if(G__8123){
var bit__4433__auto__ = (G__8123.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4433__auto__) || (G__8123.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj8129 = {};
return obj8129;
});
var js_obj__1 = (function() { 
var G__8132__delegate = function (keyvals){
var G__8130 = goog.object.create;
var G__8131 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8130,G__8131) : cljs.core.apply.call(null,G__8130,G__8131));
};
var G__8132 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8133__i = 0, G__8133__a = new Array(arguments.length -  0);
while (G__8133__i < G__8133__a.length) {G__8133__a[G__8133__i] = arguments[G__8133__i + 0]; ++G__8133__i;}
  keyvals = new cljs.core.IndexedSeq(G__8133__a,0);
} 
return G__8132__delegate.call(this,keyvals);};
G__8132.cljs$lang$maxFixedArity = 0;
G__8132.cljs$lang$applyTo = (function (arglist__8134){
var keyvals = cljs.core.seq(arglist__8134);
return G__8132__delegate(keyvals);
});
G__8132.cljs$core$IFn$_invoke$arity$variadic = G__8132__delegate;
return G__8132;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__8135 = null;
if (arguments.length > 0) {
var G__8136__i = 0, G__8136__a = new Array(arguments.length -  0);
while (G__8136__i < G__8136__a.length) {G__8136__a[G__8136__i] = arguments[G__8136__i + 0]; ++G__8136__i;}
G__8135 = new cljs.core.IndexedSeq(G__8136__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__8139_8141 = obj;
var G__8140_8142 = ((function (G__8139_8141,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8139_8141,keys))
;
goog.object.forEach(G__8139_8141,G__8140_8142);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8143 = (i__$1 + (1));
var G__8144 = (j__$1 + (1));
var G__8145 = (len__$1 - (1));
i__$1 = G__8143;
j__$1 = G__8144;
len__$1 = G__8145;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8146 = (i__$1 - (1));
var G__8147 = (j__$1 - (1));
var G__8148 = (len__$1 - (1));
i__$1 = G__8146;
j__$1 = G__8147;
len__$1 = G__8148;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8150 = {};
return obj8150;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8152 = s;
if(G__8152){
var bit__4440__auto__ = (G__8152.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__8152.cljs$core$ISeq$)){
return true;
} else {
if((!G__8152.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8152);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__8154 = s;
if(G__8154){
var bit__4440__auto__ = (G__8154.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4440__auto__) || (G__8154.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8154.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8154);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8154);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3759__auto__ = cljs.core.fn_QMARK_(f);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__8158 = f;
if(G__8158){
var bit__4440__auto__ = (G__8158.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4440__auto__) || (G__8158.cljs$core$IFn$)){
return true;
} else {
if((!G__8158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8158);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8171 = n;
return isNaN(G__8171);
})())) && (!((n === Infinity))) && (((function (){var G__8172 = n;
return parseFloat(G__8172);
})() === (function (){var G__8173 = n;
var G__8174 = (10);
return parseInt(G__8173,G__8174);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__8175__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8176 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8177 = etc;
s = G__8176;
xs = G__8177;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8178__i = 0, G__8178__a = new Array(arguments.length -  2);
while (G__8178__i < G__8178__a.length) {G__8178__a[G__8178__i] = arguments[G__8178__i + 2]; ++G__8178__i;}
  more = new cljs.core.IndexedSeq(G__8178__a,0);
} 
return G__8175__delegate.call(this,x,y,more);};
G__8175.cljs$lang$maxFixedArity = 2;
G__8175.cljs$lang$applyTo = (function (arglist__8179){
var x = cljs.core.first(arglist__8179);
arglist__8179 = cljs.core.next(arglist__8179);
var y = cljs.core.first(arglist__8179);
var more = cljs.core.rest(arglist__8179);
return G__8175__delegate(x,y,more);
});
G__8175.cljs$core$IFn$_invoke$arity$variadic = G__8175__delegate;
return G__8175;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8180 = null;
if (arguments.length > 2) {
var G__8181__i = 0, G__8181__a = new Array(arguments.length -  2);
while (G__8181__i < G__8181__a.length) {G__8181__a[G__8181__i] = arguments[G__8181__i + 2]; ++G__8181__i;}
G__8180 = new cljs.core.IndexedSeq(G__8181__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8185 = x;
if(G__8185){
var bit__4433__auto__ = (G__8185.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4433__auto__) || (G__8185.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8186 = x;
var G__8187 = y;
return goog.array.defaultCompare(G__8186,G__8187);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8192 = xs;
var G__8193 = ys;
var G__8194 = len;
var G__8195 = (n + (1));
xs = G__8192;
ys = G__8193;
len = G__8194;
n = G__8195;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8200 = x;
var G__8201 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8200,G__8201) : f.call(null,G__8200,G__8201));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8202 = y;
var G__8203 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8202,G__8203) : f.call(null,G__8202,G__8203));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8209 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8209) : cljs.core.to_array.call(null,G__8209));
})();
var G__8210_8212 = a;
var G__8211_8213 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8210_8212,G__8211_8213);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8219 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8219) : keyfn.call(null,G__8219));
})(),(function (){var G__8220 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8220) : keyfn.call(null,G__8220));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8226 = f;
var G__8227 = cljs.core.first(s);
var G__8228 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8226,G__8227,G__8228) : cljs.core.reduce.call(null,G__8226,G__8227,G__8228));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8229 = val__$1;
var G__8230 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8229,G__8230) : f.call(null,G__8229,G__8230));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8231 = nval;
var G__8232 = cljs.core.next(coll__$1);
val__$1 = G__8231;
coll__$1 = G__8232;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8236 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8236) : cljs.core.to_array.call(null,G__8236));
})();
var G__8237_8239 = a;
goog.array.shuffle(G__8237_8239);

var G__8238 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8238) : cljs.core.vec.call(null,G__8238));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8242 = coll;
if(G__8242){
var bit__4433__auto__ = (G__8242.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__8242.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8243 = coll;
if(G__8243){
var bit__4433__auto__ = (G__8243.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__8243.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8252 = null;
var G__8252__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8252__1 = (function (x){
var G__8249 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8249) : cf.call(null,G__8249));
});
var G__8252__2 = (function (x,y){
var G__8250 = x;
var G__8251 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8250,G__8251) : f.call(null,G__8250,G__8251));
});
G__8252 = function(x,y){
switch(arguments.length){
case 0:
return G__8252__0.call(this);
case 1:
return G__8252__1.call(this,x);
case 2:
return G__8252__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8252.cljs$core$IFn$_invoke$arity$0 = G__8252__0;
G__8252.cljs$core$IFn$_invoke$arity$1 = G__8252__1;
G__8252.cljs$core$IFn$_invoke$arity$2 = G__8252__2;
return G__8252;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8259 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8259) : xform.call(null,G__8259));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8260 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8260) : f__$1.call(null,G__8260));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8261__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8261 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8262__i = 0, G__8262__a = new Array(arguments.length -  2);
while (G__8262__i < G__8262__a.length) {G__8262__a[G__8262__i] = arguments[G__8262__i + 2]; ++G__8262__i;}
  more = new cljs.core.IndexedSeq(G__8262__a,0);
} 
return G__8261__delegate.call(this,x,y,more);};
G__8261.cljs$lang$maxFixedArity = 2;
G__8261.cljs$lang$applyTo = (function (arglist__8263){
var x = cljs.core.first(arglist__8263);
arglist__8263 = cljs.core.next(arglist__8263);
var y = cljs.core.first(arglist__8263);
var more = cljs.core.rest(arglist__8263);
return G__8261__delegate(x,y,more);
});
G__8261.cljs$core$IFn$_invoke$arity$variadic = G__8261__delegate;
return G__8261;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8264 = null;
if (arguments.length > 2) {
var G__8265__i = 0, G__8265__a = new Array(arguments.length -  2);
while (G__8265__i < G__8265__a.length) {G__8265__a[G__8265__i] = arguments[G__8265__i + 2]; ++G__8265__i;}
G__8264 = new cljs.core.IndexedSeq(G__8265__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8266__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8266 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8267__i = 0, G__8267__a = new Array(arguments.length -  2);
while (G__8267__i < G__8267__a.length) {G__8267__a[G__8267__i] = arguments[G__8267__i + 2]; ++G__8267__i;}
  more = new cljs.core.IndexedSeq(G__8267__a,0);
} 
return G__8266__delegate.call(this,x,y,more);};
G__8266.cljs$lang$maxFixedArity = 2;
G__8266.cljs$lang$applyTo = (function (arglist__8268){
var x = cljs.core.first(arglist__8268);
arglist__8268 = cljs.core.next(arglist__8268);
var y = cljs.core.first(arglist__8268);
var more = cljs.core.rest(arglist__8268);
return G__8266__delegate(x,y,more);
});
G__8266.cljs$core$IFn$_invoke$arity$variadic = G__8266__delegate;
return G__8266;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8269 = null;
if (arguments.length > 2) {
var G__8270__i = 0, G__8270__a = new Array(arguments.length -  2);
while (G__8270__i < G__8270__a.length) {G__8270__a[G__8270__i] = arguments[G__8270__i + 2]; ++G__8270__i;}
G__8269 = new cljs.core.IndexedSeq(G__8270__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8271__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8271 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8272__i = 0, G__8272__a = new Array(arguments.length -  2);
while (G__8272__i < G__8272__a.length) {G__8272__a[G__8272__i] = arguments[G__8272__i + 2]; ++G__8272__i;}
  more = new cljs.core.IndexedSeq(G__8272__a,0);
} 
return G__8271__delegate.call(this,x,y,more);};
G__8271.cljs$lang$maxFixedArity = 2;
G__8271.cljs$lang$applyTo = (function (arglist__8273){
var x = cljs.core.first(arglist__8273);
arglist__8273 = cljs.core.next(arglist__8273);
var y = cljs.core.first(arglist__8273);
var more = cljs.core.rest(arglist__8273);
return G__8271__delegate(x,y,more);
});
G__8271.cljs$core$IFn$_invoke$arity$variadic = G__8271__delegate;
return G__8271;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8274 = null;
if (arguments.length > 2) {
var G__8275__i = 0, G__8275__a = new Array(arguments.length -  2);
while (G__8275__i < G__8275__a.length) {G__8275__a[G__8275__i] = arguments[G__8275__i + 2]; ++G__8275__i;}
G__8274 = new cljs.core.IndexedSeq(G__8275__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8281__i = 0, G__8281__a = new Array(arguments.length -  2);
while (G__8281__i < G__8281__a.length) {G__8281__a[G__8281__i] = arguments[G__8281__i + 2]; ++G__8281__i;}
  more = new cljs.core.IndexedSeq(G__8281__a,0);
} 
return G__8280__delegate.call(this,x,y,more);};
G__8280.cljs$lang$maxFixedArity = 2;
G__8280.cljs$lang$applyTo = (function (arglist__8282){
var x = cljs.core.first(arglist__8282);
arglist__8282 = cljs.core.next(arglist__8282);
var y = cljs.core.first(arglist__8282);
var more = cljs.core.rest(arglist__8282);
return G__8280__delegate(x,y,more);
});
G__8280.cljs$core$IFn$_invoke$arity$variadic = G__8280__delegate;
return G__8280;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8283 = null;
if (arguments.length > 2) {
var G__8284__i = 0, G__8284__a = new Array(arguments.length -  2);
while (G__8284__i < G__8284__a.length) {G__8284__a[G__8284__i] = arguments[G__8284__i + 2]; ++G__8284__i;}
G__8283 = new cljs.core.IndexedSeq(G__8284__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8285__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8286 = y;
var G__8287 = cljs.core.first(more);
var G__8288 = cljs.core.next(more);
x = G__8286;
y = G__8287;
more = G__8288;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8285 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8289__i = 0, G__8289__a = new Array(arguments.length -  2);
while (G__8289__i < G__8289__a.length) {G__8289__a[G__8289__i] = arguments[G__8289__i + 2]; ++G__8289__i;}
  more = new cljs.core.IndexedSeq(G__8289__a,0);
} 
return G__8285__delegate.call(this,x,y,more);};
G__8285.cljs$lang$maxFixedArity = 2;
G__8285.cljs$lang$applyTo = (function (arglist__8290){
var x = cljs.core.first(arglist__8290);
arglist__8290 = cljs.core.next(arglist__8290);
var y = cljs.core.first(arglist__8290);
var more = cljs.core.rest(arglist__8290);
return G__8285__delegate(x,y,more);
});
G__8285.cljs$core$IFn$_invoke$arity$variadic = G__8285__delegate;
return G__8285;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8291 = null;
if (arguments.length > 2) {
var G__8292__i = 0, G__8292__a = new Array(arguments.length -  2);
while (G__8292__i < G__8292__a.length) {G__8292__a[G__8292__i] = arguments[G__8292__i + 2]; ++G__8292__i;}
G__8291 = new cljs.core.IndexedSeq(G__8292__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8293__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8294 = y;
var G__8295 = cljs.core.first(more);
var G__8296 = cljs.core.next(more);
x = G__8294;
y = G__8295;
more = G__8296;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8293 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8297__i = 0, G__8297__a = new Array(arguments.length -  2);
while (G__8297__i < G__8297__a.length) {G__8297__a[G__8297__i] = arguments[G__8297__i + 2]; ++G__8297__i;}
  more = new cljs.core.IndexedSeq(G__8297__a,0);
} 
return G__8293__delegate.call(this,x,y,more);};
G__8293.cljs$lang$maxFixedArity = 2;
G__8293.cljs$lang$applyTo = (function (arglist__8298){
var x = cljs.core.first(arglist__8298);
arglist__8298 = cljs.core.next(arglist__8298);
var y = cljs.core.first(arglist__8298);
var more = cljs.core.rest(arglist__8298);
return G__8293__delegate(x,y,more);
});
G__8293.cljs$core$IFn$_invoke$arity$variadic = G__8293__delegate;
return G__8293;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__8299 = null;
if (arguments.length > 2) {
var G__8300__i = 0, G__8300__a = new Array(arguments.length -  2);
while (G__8300__i < G__8300__a.length) {G__8300__a[G__8300__i] = arguments[G__8300__i + 2]; ++G__8300__i;}
G__8299 = new cljs.core.IndexedSeq(G__8300__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__8301__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8302 = y;
var G__8303 = cljs.core.first(more);
var G__8304 = cljs.core.next(more);
x = G__8302;
y = G__8303;
more = G__8304;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8305__i = 0, G__8305__a = new Array(arguments.length -  2);
while (G__8305__i < G__8305__a.length) {G__8305__a[G__8305__i] = arguments[G__8305__i + 2]; ++G__8305__i;}
  more = new cljs.core.IndexedSeq(G__8305__a,0);
} 
return G__8301__delegate.call(this,x,y,more);};
G__8301.cljs$lang$maxFixedArity = 2;
G__8301.cljs$lang$applyTo = (function (arglist__8306){
var x = cljs.core.first(arglist__8306);
arglist__8306 = cljs.core.next(arglist__8306);
var y = cljs.core.first(arglist__8306);
var more = cljs.core.rest(arglist__8306);
return G__8301__delegate(x,y,more);
});
G__8301.cljs$core$IFn$_invoke$arity$variadic = G__8301__delegate;
return G__8301;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__8307 = null;
if (arguments.length > 2) {
var G__8308__i = 0, G__8308__a = new Array(arguments.length -  2);
while (G__8308__i < G__8308__a.length) {G__8308__a[G__8308__i] = arguments[G__8308__i + 2]; ++G__8308__i;}
G__8307 = new cljs.core.IndexedSeq(G__8308__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__8309__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8310 = y;
var G__8311 = cljs.core.first(more);
var G__8312 = cljs.core.next(more);
x = G__8310;
y = G__8311;
more = G__8312;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8309 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8313__i = 0, G__8313__a = new Array(arguments.length -  2);
while (G__8313__i < G__8313__a.length) {G__8313__a[G__8313__i] = arguments[G__8313__i + 2]; ++G__8313__i;}
  more = new cljs.core.IndexedSeq(G__8313__a,0);
} 
return G__8309__delegate.call(this,x,y,more);};
G__8309.cljs$lang$maxFixedArity = 2;
G__8309.cljs$lang$applyTo = (function (arglist__8314){
var x = cljs.core.first(arglist__8314);
arglist__8314 = cljs.core.next(arglist__8314);
var y = cljs.core.first(arglist__8314);
var more = cljs.core.rest(arglist__8314);
return G__8309__delegate(x,y,more);
});
G__8309.cljs$core$IFn$_invoke$arity$variadic = G__8309__delegate;
return G__8309;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__8315 = null;
if (arguments.length > 2) {
var G__8316__i = 0, G__8316__a = new Array(arguments.length -  2);
while (G__8316__i < G__8316__a.length) {G__8316__a[G__8316__i] = arguments[G__8316__i + 2]; ++G__8316__i;}
G__8315 = new cljs.core.IndexedSeq(G__8316__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
});
var max__3 = (function() { 
var G__8317__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})(),more);
};
var G__8317 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8318__i = 0, G__8318__a = new Array(arguments.length -  2);
while (G__8318__i < G__8318__a.length) {G__8318__a[G__8318__i] = arguments[G__8318__i + 2]; ++G__8318__i;}
  more = new cljs.core.IndexedSeq(G__8318__a,0);
} 
return G__8317__delegate.call(this,x,y,more);};
G__8317.cljs$lang$maxFixedArity = 2;
G__8317.cljs$lang$applyTo = (function (arglist__8319){
var x = cljs.core.first(arglist__8319);
arglist__8319 = cljs.core.next(arglist__8319);
var y = cljs.core.first(arglist__8319);
var more = cljs.core.rest(arglist__8319);
return G__8317__delegate(x,y,more);
});
G__8317.cljs$core$IFn$_invoke$arity$variadic = G__8317__delegate;
return G__8317;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__8320 = null;
if (arguments.length > 2) {
var G__8321__i = 0, G__8321__a = new Array(arguments.length -  2);
while (G__8321__i < G__8321__a.length) {G__8321__a[G__8321__i] = arguments[G__8321__i + 2]; ++G__8321__i;}
G__8320 = new cljs.core.IndexedSeq(G__8321__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
});
var min__3 = (function() { 
var G__8322__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
})(),more);
};
var G__8322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8323__i = 0, G__8323__a = new Array(arguments.length -  2);
while (G__8323__i < G__8323__a.length) {G__8323__a[G__8323__i] = arguments[G__8323__i + 2]; ++G__8323__i;}
  more = new cljs.core.IndexedSeq(G__8323__a,0);
} 
return G__8322__delegate.call(this,x,y,more);};
G__8322.cljs$lang$maxFixedArity = 2;
G__8322.cljs$lang$applyTo = (function (arglist__8324){
var x = cljs.core.first(arglist__8324);
arglist__8324 = cljs.core.next(arglist__8324);
var y = cljs.core.first(arglist__8324);
var more = cljs.core.rest(arglist__8324);
return G__8322__delegate(x,y,more);
});
G__8322.cljs$core$IFn$_invoke$arity$variadic = G__8322__delegate;
return G__8322;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__8325 = null;
if (arguments.length > 2) {
var G__8326__i = 0, G__8326__a = new Array(arguments.length -  2);
while (G__8326__i < G__8326__a.length) {G__8326__a[G__8326__i] = arguments[G__8326__i + 2]; ++G__8326__i;}
G__8325 = new cljs.core.IndexedSeq(G__8326__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__8327__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__8327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8328__i = 0, G__8328__a = new Array(arguments.length -  2);
while (G__8328__i < G__8328__a.length) {G__8328__a[G__8328__i] = arguments[G__8328__i + 2]; ++G__8328__i;}
  more = new cljs.core.IndexedSeq(G__8328__a,0);
} 
return G__8327__delegate.call(this,x,y,more);};
G__8327.cljs$lang$maxFixedArity = 2;
G__8327.cljs$lang$applyTo = (function (arglist__8329){
var x = cljs.core.first(arglist__8329);
arglist__8329 = cljs.core.next(arglist__8329);
var y = cljs.core.first(arglist__8329);
var more = cljs.core.rest(arglist__8329);
return G__8327__delegate(x,y,more);
});
G__8327.cljs$core$IFn$_invoke$arity$variadic = G__8327__delegate;
return G__8327;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__8330 = null;
if (arguments.length > 2) {
var G__8331__i = 0, G__8331__a = new Array(arguments.length -  2);
while (G__8331__i < G__8331__a.length) {G__8331__a[G__8331__i] = arguments[G__8331__i + 2]; ++G__8331__i;}
G__8330 = new cljs.core.IndexedSeq(G__8331__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__8332__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__8332 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8333__i = 0, G__8333__a = new Array(arguments.length -  2);
while (G__8333__i < G__8333__a.length) {G__8333__a[G__8333__i] = arguments[G__8333__i + 2]; ++G__8333__i;}
  more = new cljs.core.IndexedSeq(G__8333__a,0);
} 
return G__8332__delegate.call(this,x,y,more);};
G__8332.cljs$lang$maxFixedArity = 2;
G__8332.cljs$lang$applyTo = (function (arglist__8334){
var x = cljs.core.first(arglist__8334);
arglist__8334 = cljs.core.next(arglist__8334);
var y = cljs.core.first(arglist__8334);
var more = cljs.core.rest(arglist__8334);
return G__8332__delegate(x,y,more);
});
G__8332.cljs$core$IFn$_invoke$arity$variadic = G__8332__delegate;
return G__8332;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__8335 = null;
if (arguments.length > 2) {
var G__8336__i = 0, G__8336__a = new Array(arguments.length -  2);
while (G__8336__i < G__8336__a.length) {G__8336__a[G__8336__i] = arguments[G__8336__i + 2]; ++G__8336__i;}
G__8335 = new cljs.core.IndexedSeq(G__8336__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__8341__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8341 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8342__i = 0, G__8342__a = new Array(arguments.length -  2);
while (G__8342__i < G__8342__a.length) {G__8342__a[G__8342__i] = arguments[G__8342__i + 2]; ++G__8342__i;}
  more = new cljs.core.IndexedSeq(G__8342__a,0);
} 
return G__8341__delegate.call(this,x,y,more);};
G__8341.cljs$lang$maxFixedArity = 2;
G__8341.cljs$lang$applyTo = (function (arglist__8343){
var x = cljs.core.first(arglist__8343);
arglist__8343 = cljs.core.next(arglist__8343);
var y = cljs.core.first(arglist__8343);
var more = cljs.core.rest(arglist__8343);
return G__8341__delegate(x,y,more);
});
G__8341.cljs$core$IFn$_invoke$arity$variadic = G__8341__delegate;
return G__8341;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__8344 = null;
if (arguments.length > 2) {
var G__8345__i = 0, G__8345__a = new Array(arguments.length -  2);
while (G__8345__i < G__8345__a.length) {G__8345__a[G__8345__i] = arguments[G__8345__i + 2]; ++G__8345__i;}
G__8344 = new cljs.core.IndexedSeq(G__8345__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__8346__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__8346 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8347__i = 0, G__8347__a = new Array(arguments.length -  2);
while (G__8347__i < G__8347__a.length) {G__8347__a[G__8347__i] = arguments[G__8347__i + 2]; ++G__8347__i;}
  more = new cljs.core.IndexedSeq(G__8347__a,0);
} 
return G__8346__delegate.call(this,x,y,more);};
G__8346.cljs$lang$maxFixedArity = 2;
G__8346.cljs$lang$applyTo = (function (arglist__8348){
var x = cljs.core.first(arglist__8348);
arglist__8348 = cljs.core.next(arglist__8348);
var y = cljs.core.first(arglist__8348);
var more = cljs.core.rest(arglist__8348);
return G__8346__delegate(x,y,more);
});
G__8346.cljs$core$IFn$_invoke$arity$variadic = G__8346__delegate;
return G__8346;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__8349 = null;
if (arguments.length > 2) {
var G__8350__i = 0, G__8350__a = new Array(arguments.length -  2);
while (G__8350__i < G__8350__a.length) {G__8350__a[G__8350__i] = arguments[G__8350__i + 2]; ++G__8350__i;}
G__8349 = new cljs.core.IndexedSeq(G__8350__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__8351__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__8351 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8352__i = 0, G__8352__a = new Array(arguments.length -  2);
while (G__8352__i < G__8352__a.length) {G__8352__a[G__8352__i] = arguments[G__8352__i + 2]; ++G__8352__i;}
  more = new cljs.core.IndexedSeq(G__8352__a,0);
} 
return G__8351__delegate.call(this,x,y,more);};
G__8351.cljs$lang$maxFixedArity = 2;
G__8351.cljs$lang$applyTo = (function (arglist__8353){
var x = cljs.core.first(arglist__8353);
arglist__8353 = cljs.core.next(arglist__8353);
var y = cljs.core.first(arglist__8353);
var more = cljs.core.rest(arglist__8353);
return G__8351__delegate(x,y,more);
});
G__8351.cljs$core$IFn$_invoke$arity$variadic = G__8351__delegate;
return G__8351;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__8354 = null;
if (arguments.length > 2) {
var G__8355__i = 0, G__8355__a = new Array(arguments.length -  2);
while (G__8355__i < G__8355__a.length) {G__8355__a[G__8355__i] = arguments[G__8355__i + 2]; ++G__8355__i;}
G__8354 = new cljs.core.IndexedSeq(G__8355__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__8358 = x;
var G__8359 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8358,G__8359) : cljs.core.mod.call(null,G__8358,G__8359));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__8360__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__8360 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8361__i = 0, G__8361__a = new Array(arguments.length -  2);
while (G__8361__i < G__8361__a.length) {G__8361__a[G__8361__i] = arguments[G__8361__i + 2]; ++G__8361__i;}
  more = new cljs.core.IndexedSeq(G__8361__a,0);
} 
return G__8360__delegate.call(this,x,y,more);};
G__8360.cljs$lang$maxFixedArity = 2;
G__8360.cljs$lang$applyTo = (function (arglist__8362){
var x = cljs.core.first(arglist__8362);
arglist__8362 = cljs.core.next(arglist__8362);
var y = cljs.core.first(arglist__8362);
var more = cljs.core.rest(arglist__8362);
return G__8360__delegate(x,y,more);
});
G__8360.cljs$core$IFn$_invoke$arity$variadic = G__8360__delegate;
return G__8360;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__8363 = null;
if (arguments.length > 2) {
var G__8364__i = 0, G__8364__a = new Array(arguments.length -  2);
while (G__8364__i < G__8364__a.length) {G__8364__a[G__8364__i] = arguments[G__8364__i + 2]; ++G__8364__i;}
G__8363 = new cljs.core.IndexedSeq(G__8364__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__8365__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__8365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8366__i = 0, G__8366__a = new Array(arguments.length -  2);
while (G__8366__i < G__8366__a.length) {G__8366__a[G__8366__i] = arguments[G__8366__i + 2]; ++G__8366__i;}
  more = new cljs.core.IndexedSeq(G__8366__a,0);
} 
return G__8365__delegate.call(this,x,y,more);};
G__8365.cljs$lang$maxFixedArity = 2;
G__8365.cljs$lang$applyTo = (function (arglist__8367){
var x = cljs.core.first(arglist__8367);
arglist__8367 = cljs.core.next(arglist__8367);
var y = cljs.core.first(arglist__8367);
var more = cljs.core.rest(arglist__8367);
return G__8365__delegate(x,y,more);
});
G__8365.cljs$core$IFn$_invoke$arity$variadic = G__8365__delegate;
return G__8365;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__8368 = null;
if (arguments.length > 2) {
var G__8369__i = 0, G__8369__a = new Array(arguments.length -  2);
while (G__8369__i < G__8369__a.length) {G__8369__a[G__8369__i] = arguments[G__8369__i + 2]; ++G__8369__i;}
G__8368 = new cljs.core.IndexedSeq(G__8369__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__8372 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8372) : Math.floor.call(null,G__8372));
} else {
var G__8373 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8373) : Math.ceil.call(null,G__8373));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__8374__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__8374 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8375__i = 0, G__8375__a = new Array(arguments.length -  2);
while (G__8375__i < G__8375__a.length) {G__8375__a[G__8375__i] = arguments[G__8375__i + 2]; ++G__8375__i;}
  more = new cljs.core.IndexedSeq(G__8375__a,0);
} 
return G__8374__delegate.call(this,x,y,more);};
G__8374.cljs$lang$maxFixedArity = 2;
G__8374.cljs$lang$applyTo = (function (arglist__8376){
var x = cljs.core.first(arglist__8376);
arglist__8376 = cljs.core.next(arglist__8376);
var y = cljs.core.first(arglist__8376);
var more = cljs.core.rest(arglist__8376);
return G__8374__delegate(x,y,more);
});
G__8374.cljs$core$IFn$_invoke$arity$variadic = G__8374__delegate;
return G__8374;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__8377 = null;
if (arguments.length > 2) {
var G__8378__i = 0, G__8378__a = new Array(arguments.length -  2);
while (G__8378__i < G__8378__a.length) {G__8378__a[G__8378__i] = arguments[G__8378__i + 2]; ++G__8378__i;}
G__8377 = new cljs.core.IndexedSeq(G__8378__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__8379__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__8379 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8380__i = 0, G__8380__a = new Array(arguments.length -  2);
while (G__8380__i < G__8380__a.length) {G__8380__a[G__8380__i] = arguments[G__8380__i + 2]; ++G__8380__i;}
  more = new cljs.core.IndexedSeq(G__8380__a,0);
} 
return G__8379__delegate.call(this,x,y,more);};
G__8379.cljs$lang$maxFixedArity = 2;
G__8379.cljs$lang$applyTo = (function (arglist__8381){
var x = cljs.core.first(arglist__8381);
arglist__8381 = cljs.core.next(arglist__8381);
var y = cljs.core.first(arglist__8381);
var more = cljs.core.rest(arglist__8381);
return G__8379__delegate(x,y,more);
});
G__8379.cljs$core$IFn$_invoke$arity$variadic = G__8379__delegate;
return G__8379;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__8382 = null;
if (arguments.length > 2) {
var G__8383__i = 0, G__8383__a = new Array(arguments.length -  2);
while (G__8383__i < G__8383__a.length) {G__8383__a[G__8383__i] = arguments[G__8383__i + 2]; ++G__8383__i;}
G__8382 = new cljs.core.IndexedSeq(G__8383__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__8384__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__8384 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8385__i = 0, G__8385__a = new Array(arguments.length -  2);
while (G__8385__i < G__8385__a.length) {G__8385__a[G__8385__i] = arguments[G__8385__i + 2]; ++G__8385__i;}
  more = new cljs.core.IndexedSeq(G__8385__a,0);
} 
return G__8384__delegate.call(this,x,y,more);};
G__8384.cljs$lang$maxFixedArity = 2;
G__8384.cljs$lang$applyTo = (function (arglist__8386){
var x = cljs.core.first(arglist__8386);
arglist__8386 = cljs.core.next(arglist__8386);
var y = cljs.core.first(arglist__8386);
var more = cljs.core.rest(arglist__8386);
return G__8384__delegate(x,y,more);
});
G__8384.cljs$core$IFn$_invoke$arity$variadic = G__8384__delegate;
return G__8384;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__8387 = null;
if (arguments.length > 2) {
var G__8388__i = 0, G__8388__a = new Array(arguments.length -  2);
while (G__8388__i < G__8388__a.length) {G__8388__a[G__8388__i] = arguments[G__8388__i + 2]; ++G__8388__i;}
G__8387 = new cljs.core.IndexedSeq(G__8388__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__8389__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__8389 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8390__i = 0, G__8390__a = new Array(arguments.length -  2);
while (G__8390__i < G__8390__a.length) {G__8390__a[G__8390__i] = arguments[G__8390__i + 2]; ++G__8390__i;}
  more = new cljs.core.IndexedSeq(G__8390__a,0);
} 
return G__8389__delegate.call(this,x,y,more);};
G__8389.cljs$lang$maxFixedArity = 2;
G__8389.cljs$lang$applyTo = (function (arglist__8391){
var x = cljs.core.first(arglist__8391);
arglist__8391 = cljs.core.next(arglist__8391);
var y = cljs.core.first(arglist__8391);
var more = cljs.core.rest(arglist__8391);
return G__8389__delegate(x,y,more);
});
G__8389.cljs$core$IFn$_invoke$arity$variadic = G__8389__delegate;
return G__8389;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__8392 = null;
if (arguments.length > 2) {
var G__8393__i = 0, G__8393__a = new Array(arguments.length -  2);
while (G__8393__i < G__8393__a.length) {G__8393__a[G__8393__i] = arguments[G__8393__i + 2]; ++G__8393__i;}
G__8392 = new cljs.core.IndexedSeq(G__8393__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__8398__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8399 = y;
var G__8400 = cljs.core.first(more);
var G__8401 = cljs.core.next(more);
x = G__8399;
y = G__8400;
more = G__8401;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8402__i = 0, G__8402__a = new Array(arguments.length -  2);
while (G__8402__i < G__8402__a.length) {G__8402__a[G__8402__i] = arguments[G__8402__i + 2]; ++G__8402__i;}
  more = new cljs.core.IndexedSeq(G__8402__a,0);
} 
return G__8398__delegate.call(this,x,y,more);};
G__8398.cljs$lang$maxFixedArity = 2;
G__8398.cljs$lang$applyTo = (function (arglist__8403){
var x = cljs.core.first(arglist__8403);
arglist__8403 = cljs.core.next(arglist__8403);
var y = cljs.core.first(arglist__8403);
var more = cljs.core.rest(arglist__8403);
return G__8398__delegate(x,y,more);
});
G__8398.cljs$core$IFn$_invoke$arity$variadic = G__8398__delegate;
return G__8398;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__8404 = null;
if (arguments.length > 2) {
var G__8405__i = 0, G__8405__a = new Array(arguments.length -  2);
while (G__8405__i < G__8405__a.length) {G__8405__a[G__8405__i] = arguments[G__8405__i + 2]; ++G__8405__i;}
G__8404 = new cljs.core.IndexedSeq(G__8405__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__8406 = (n__$1 - (1));
var G__8407 = cljs.core.next(xs);
n__$1 = G__8406;
xs = G__8407;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__8411 = x;
return goog.string.buildString(G__8411);
}
});
var str__2 = (function() { 
var G__8412__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__8413 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__8414 = cljs.core.next(more);
sb = G__8413;
more = G__8414;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__8412 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__8415__i = 0, G__8415__a = new Array(arguments.length -  1);
while (G__8415__i < G__8415__a.length) {G__8415__a[G__8415__i] = arguments[G__8415__i + 1]; ++G__8415__i;}
  ys = new cljs.core.IndexedSeq(G__8415__a,0);
} 
return G__8412__delegate.call(this,x,ys);};
G__8412.cljs$lang$maxFixedArity = 1;
G__8412.cljs$lang$applyTo = (function (arglist__8416){
var x = cljs.core.first(arglist__8416);
var ys = cljs.core.rest(arglist__8416);
return G__8412__delegate(x,ys);
});
G__8412.cljs$core$IFn$_invoke$arity$variadic = G__8412__delegate;
return G__8412;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__8417 = null;
if (arguments.length > 1) {
var G__8418__i = 0, G__8418__a = new Array(arguments.length -  1);
while (G__8418__i < G__8418__a.length) {G__8418__a[G__8418__i] = arguments[G__8418__i + 1]; ++G__8418__i;}
G__8417 = new cljs.core.IndexedSeq(G__8418__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__8419 = cljs.core.next(xs);
var G__8420 = cljs.core.next(ys);
xs = G__8419;
ys = G__8420;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__8421 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__8422 = cljs.core.next(s);
res = G__8421;
s = G__8422;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__8427 = ((h + (cljs.core.hash((function (){var G__8425 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8425) : cljs.core.key.call(null,G__8425));
})()) ^ cljs.core.hash((function (){var G__8426 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8426) : cljs.core.val.call(null,G__8426));
})()))) % (4503599627370496));
var G__8428 = cljs.core.next(s);
h = G__8427;
s = G__8428;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__8429 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__8430 = cljs.core.next(s__$1);
h = G__8429;
s__$1 = G__8430;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__8441_8451 = cljs.core.seq(fn_map);
var chunk__8442_8452 = null;
var count__8443_8453 = (0);
var i__8444_8454 = (0);
while(true){
if((i__8444_8454 < count__8443_8453)){
var vec__8445_8455 = chunk__8442_8452.cljs$core$IIndexed$_nth$arity$2(null,i__8444_8454);
var key_name_8456 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8445_8455,(0),null);
var f_8457 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8445_8455,(1),null);
var str_name_8458 = (function (){var G__8446 = key_name_8456;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8446) : cljs.core.name.call(null,G__8446));
})();
(obj[str_name_8458] = f_8457);

var G__8459 = seq__8441_8451;
var G__8460 = chunk__8442_8452;
var G__8461 = count__8443_8453;
var G__8462 = (i__8444_8454 + (1));
seq__8441_8451 = G__8459;
chunk__8442_8452 = G__8460;
count__8443_8453 = G__8461;
i__8444_8454 = G__8462;
continue;
} else {
var temp__4126__auto___8463 = cljs.core.seq(seq__8441_8451);
if(temp__4126__auto___8463){
var seq__8441_8464__$1 = temp__4126__auto___8463;
if(cljs.core.chunked_seq_QMARK_(seq__8441_8464__$1)){
var c__4546__auto___8465 = (function (){var G__8447 = seq__8441_8464__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8447) : cljs.core.chunk_first.call(null,G__8447));
})();
var G__8466 = (function (){var G__8448 = seq__8441_8464__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8448) : cljs.core.chunk_rest.call(null,G__8448));
})();
var G__8467 = c__4546__auto___8465;
var G__8468 = cljs.core.count(c__4546__auto___8465);
var G__8469 = (0);
seq__8441_8451 = G__8466;
chunk__8442_8452 = G__8467;
count__8443_8453 = G__8468;
i__8444_8454 = G__8469;
continue;
} else {
var vec__8449_8470 = cljs.core.first(seq__8441_8464__$1);
var key_name_8471 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8449_8470,(0),null);
var f_8472 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8449_8470,(1),null);
var str_name_8473 = (function (){var G__8450 = key_name_8471;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8450) : cljs.core.name.call(null,G__8450));
})();
(obj[str_name_8473] = f_8472);

var G__8474 = cljs.core.next(seq__8441_8464__$1);
var G__8475 = null;
var G__8476 = (0);
var G__8477 = (0);
seq__8441_8451 = G__8474;
chunk__8442_8452 = G__8475;
count__8443_8453 = G__8476;
i__8444_8454 = G__8477;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__8479 = coll;
if(G__8479){
var bit__4440__auto__ = (G__8479.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4440__auto__) || (G__8479.cljs$core$IReversible$)){
return true;
} else {
if((!G__8479.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8479);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8479);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__8480 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__8480;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__8481 = (i - (1));
var G__8482 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__8481;
r = G__8482;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__8483__i = 0, G__8483__a = new Array(arguments.length -  0);
while (G__8483__i < G__8483__a.length) {G__8483__a[G__8483__i] = arguments[G__8483__i + 0]; ++G__8483__i;}
  xs = new cljs.core.IndexedSeq(G__8483__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__8484){
var xs = cljs.core.seq(arglist__8484);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3759__auto__ = (coll == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__8488 = coll;
if(G__8488){
var bit__4433__auto__ = (G__8488.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__8488.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__8490 = x;
if(G__8490){
var bit__4440__auto__ = (G__8490.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4440__auto__) || (G__8490.cljs$core$IList$)){
return true;
} else {
if((!G__8490.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8490);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8490);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8497 = a.ns;
var G__8498 = b.ns;
return goog.array.defaultCompare(G__8497,G__8498);
})();
if(((0) === nsc)){
var G__8499 = a.name;
var G__8500 = b.name;
return goog.array.defaultCompare(G__8499,G__8500);
} else {
return nsc;
}
}
} else {
var G__8501 = a.name;
var G__8502 = b.name;
return goog.array.defaultCompare(G__8501,G__8502);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__8504 = null;
var G__8504__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__8504__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__8504 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8504__2.call(this,self__,coll);
case 3:
return G__8504__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8504.cljs$core$IFn$_invoke$arity$2 = G__8504__2;
G__8504.cljs$core$IFn$_invoke$arity$3 = G__8504__3;
return G__8504;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args8503){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8503)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__8506 = x;
if(G__8506){
var bit__4433__auto__ = (G__8506.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__8506.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__8508 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8508) : cljs.core.name.call(null,G__8508));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__8509 = ls.sval();
ls = G__8509;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__8511 = s;
if(G__8511){
var bit__4433__auto__ = (G__8511.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4433__auto__) || (G__8511.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__8512 = cljs.core.next(s__$1);
s__$1 = G__8512;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_8513 = (0);
var xs_8514 = cljs.core.seq(coll);
while(true){
if(xs_8514){
(ret[i_8513] = cljs.core.to_array(cljs.core.first(xs_8514)));

var G__8515 = (i_8513 + (1));
var G__8516 = cljs.core.next(xs_8514);
i_8513 = G__8515;
xs_8514 = G__8516;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8519 = (i + (1));
var G__8520 = cljs.core.next(s__$1);
i = G__8519;
s__$1 = G__8520;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___8521 = size;
var i_8522 = (0);
while(true){
if((i_8522 < n__4646__auto___8521)){
(a[i_8522] = init_val_or_seq);

var G__8523 = (i_8522 + (1));
i_8522 = G__8523;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8526 = (i + (1));
var G__8527 = cljs.core.next(s__$1);
i = G__8526;
s__$1 = G__8527;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___8528 = size;
var i_8529 = (0);
while(true){
if((i_8529 < n__4646__auto___8528)){
(a[i_8529] = init_val_or_seq);

var G__8530 = (i_8529 + (1));
i_8529 = G__8530;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8533 = (i + (1));
var G__8534 = cljs.core.next(s__$1);
i = G__8533;
s__$1 = G__8534;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___8535 = size;
var i_8536 = (0);
while(true){
if((i_8536 < n__4646__auto___8535)){
(a[i_8536] = init_val_or_seq);

var G__8537 = (i_8536 + (1));
i_8536 = G__8537;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8540 = (i + (1));
var G__8541 = cljs.core.next(s__$1);
i = G__8540;
s__$1 = G__8541;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___8542 = size;
var i_8543 = (0);
while(true){
if((i_8543 < n__4646__auto___8542)){
(a[i_8543] = init_val_or_seq);

var G__8544 = (i_8543 + (1));
i_8543 = G__8544;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__8545 = cljs.core.next(s__$1);
var G__8546 = (i - (1));
var G__8547 = (sum + (1));
s__$1 = G__8545;
i = G__8546;
sum = G__8547;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__8567__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__8567 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8568__i = 0, G__8568__a = new Array(arguments.length -  2);
while (G__8568__i < G__8568__a.length) {G__8568__a[G__8568__i] = arguments[G__8568__i + 2]; ++G__8568__i;}
  zs = new cljs.core.IndexedSeq(G__8568__a,0);
} 
return G__8567__delegate.call(this,x,y,zs);};
G__8567.cljs$lang$maxFixedArity = 2;
G__8567.cljs$lang$applyTo = (function (arglist__8569){
var x = cljs.core.first(arglist__8569);
arglist__8569 = cljs.core.next(arglist__8569);
var y = cljs.core.first(arglist__8569);
var zs = cljs.core.rest(arglist__8569);
return G__8567__delegate(x,y,zs);
});
G__8567.cljs$core$IFn$_invoke$arity$variadic = G__8567__delegate;
return G__8567;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__8570 = null;
if (arguments.length > 2) {
var G__8571__i = 0, G__8571__a = new Array(arguments.length -  2);
while (G__8571__i < G__8571__a.length) {G__8571__a[G__8571__i] = arguments[G__8571__i + 2]; ++G__8571__i;}
G__8570 = new cljs.core.IndexedSeq(G__8571__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__8572__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__8572 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__8573__i = 0, G__8573__a = new Array(arguments.length -  4);
while (G__8573__i < G__8573__a.length) {G__8573__a[G__8573__i] = arguments[G__8573__i + 4]; ++G__8573__i;}
  more = new cljs.core.IndexedSeq(G__8573__a,0);
} 
return G__8572__delegate.call(this,a,b,c,d,more);};
G__8572.cljs$lang$maxFixedArity = 4;
G__8572.cljs$lang$applyTo = (function (arglist__8574){
var a = cljs.core.first(arglist__8574);
arglist__8574 = cljs.core.next(arglist__8574);
var b = cljs.core.first(arglist__8574);
arglist__8574 = cljs.core.next(arglist__8574);
var c = cljs.core.first(arglist__8574);
arglist__8574 = cljs.core.next(arglist__8574);
var d = cljs.core.first(arglist__8574);
var more = cljs.core.rest(arglist__8574);
return G__8572__delegate(a,b,c,d,more);
});
G__8572.cljs$core$IFn$_invoke$arity$variadic = G__8572__delegate;
return G__8572;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__8575 = null;
if (arguments.length > 4) {
var G__8576__i = 0, G__8576__a = new Array(arguments.length -  4);
while (G__8576__i < G__8576__a.length) {G__8576__a[G__8576__i] = arguments[G__8576__i + 4]; ++G__8576__i;}
G__8575 = new cljs.core.IndexedSeq(G__8576__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__8575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__8577__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8578 = ntcoll;
var G__8579 = cljs.core.first(vals);
var G__8580 = cljs.core.next(vals);
tcoll = G__8578;
val = G__8579;
vals = G__8580;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8577 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8581__i = 0, G__8581__a = new Array(arguments.length -  2);
while (G__8581__i < G__8581__a.length) {G__8581__a[G__8581__i] = arguments[G__8581__i + 2]; ++G__8581__i;}
  vals = new cljs.core.IndexedSeq(G__8581__a,0);
} 
return G__8577__delegate.call(this,tcoll,val,vals);};
G__8577.cljs$lang$maxFixedArity = 2;
G__8577.cljs$lang$applyTo = (function (arglist__8582){
var tcoll = cljs.core.first(arglist__8582);
arglist__8582 = cljs.core.next(arglist__8582);
var val = cljs.core.first(arglist__8582);
var vals = cljs.core.rest(arglist__8582);
return G__8577__delegate(tcoll,val,vals);
});
G__8577.cljs$core$IFn$_invoke$arity$variadic = G__8577__delegate;
return G__8577;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__8583 = null;
if (arguments.length > 2) {
var G__8584__i = 0, G__8584__a = new Array(arguments.length -  2);
while (G__8584__i < G__8584__a.length) {G__8584__a[G__8584__i] = arguments[G__8584__i + 2]; ++G__8584__i;}
G__8583 = new cljs.core.IndexedSeq(G__8584__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__8585__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__8586 = ntcoll;
var G__8587 = cljs.core.first(kvs);
var G__8588 = cljs.core.second(kvs);
var G__8589 = cljs.core.nnext(kvs);
tcoll = G__8586;
key = G__8587;
val = G__8588;
kvs = G__8589;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8585 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8590__i = 0, G__8590__a = new Array(arguments.length -  3);
while (G__8590__i < G__8590__a.length) {G__8590__a[G__8590__i] = arguments[G__8590__i + 3]; ++G__8590__i;}
  kvs = new cljs.core.IndexedSeq(G__8590__a,0);
} 
return G__8585__delegate.call(this,tcoll,key,val,kvs);};
G__8585.cljs$lang$maxFixedArity = 3;
G__8585.cljs$lang$applyTo = (function (arglist__8591){
var tcoll = cljs.core.first(arglist__8591);
arglist__8591 = cljs.core.next(arglist__8591);
var key = cljs.core.first(arglist__8591);
arglist__8591 = cljs.core.next(arglist__8591);
var val = cljs.core.first(arglist__8591);
var kvs = cljs.core.rest(arglist__8591);
return G__8585__delegate(tcoll,key,val,kvs);
});
G__8585.cljs$core$IFn$_invoke$arity$variadic = G__8585__delegate;
return G__8585;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__8592 = null;
if (arguments.length > 3) {
var G__8593__i = 0, G__8593__a = new Array(arguments.length -  3);
while (G__8593__i < G__8593__a.length) {G__8593__a[G__8593__i] = arguments[G__8593__i + 3]; ++G__8593__i;}
G__8592 = new cljs.core.IndexedSeq(G__8593__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__8592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__8594__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__8595 = ntcoll;
var G__8596 = cljs.core.first(ks);
var G__8597 = cljs.core.next(ks);
tcoll = G__8595;
key = G__8596;
ks = G__8597;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8594 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8598__i = 0, G__8598__a = new Array(arguments.length -  2);
while (G__8598__i < G__8598__a.length) {G__8598__a[G__8598__i] = arguments[G__8598__i + 2]; ++G__8598__i;}
  ks = new cljs.core.IndexedSeq(G__8598__a,0);
} 
return G__8594__delegate.call(this,tcoll,key,ks);};
G__8594.cljs$lang$maxFixedArity = 2;
G__8594.cljs$lang$applyTo = (function (arglist__8599){
var tcoll = cljs.core.first(arglist__8599);
arglist__8599 = cljs.core.next(arglist__8599);
var key = cljs.core.first(arglist__8599);
var ks = cljs.core.rest(arglist__8599);
return G__8594__delegate(tcoll,key,ks);
});
G__8594.cljs$core$IFn$_invoke$arity$variadic = G__8594__delegate;
return G__8594;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__8600 = null;
if (arguments.length > 2) {
var G__8601__i = 0, G__8601__a = new Array(arguments.length -  2);
while (G__8601__i < G__8601__a.length) {G__8601__a[G__8601__i] = arguments[G__8601__i + 2]; ++G__8601__i;}
G__8600 = new cljs.core.IndexedSeq(G__8601__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__8600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__8602__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8603 = ntcoll;
var G__8604 = cljs.core.first(vals);
var G__8605 = cljs.core.next(vals);
tcoll = G__8603;
val = G__8604;
vals = G__8605;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8602 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8606__i = 0, G__8606__a = new Array(arguments.length -  2);
while (G__8606__i < G__8606__a.length) {G__8606__a[G__8606__i] = arguments[G__8606__i + 2]; ++G__8606__i;}
  vals = new cljs.core.IndexedSeq(G__8606__a,0);
} 
return G__8602__delegate.call(this,tcoll,val,vals);};
G__8602.cljs$lang$maxFixedArity = 2;
G__8602.cljs$lang$applyTo = (function (arglist__8607){
var tcoll = cljs.core.first(arglist__8607);
arglist__8607 = cljs.core.next(arglist__8607);
var val = cljs.core.first(arglist__8607);
var vals = cljs.core.rest(arglist__8607);
return G__8602__delegate(tcoll,val,vals);
});
G__8602.cljs$core$IFn$_invoke$arity$variadic = G__8602__delegate;
return G__8602;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__8608 = null;
if (arguments.length > 2) {
var G__8609__i = 0, G__8609__a = new Array(arguments.length -  2);
while (G__8609__i < G__8609__a.length) {G__8609__a[G__8609__i] = arguments[G__8609__i + 2]; ++G__8609__i;}
G__8608 = new cljs.core.IndexedSeq(G__8609__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4690 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4690);
} else {
var G__8820 = a4690;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8820) : f.call(null,G__8820));
}
} else {
var b4691 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4690,b4691);
} else {
var G__8821 = a4690;
var G__8822 = b4691;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8821,G__8822) : f.call(null,G__8821,G__8822));
}
} else {
var c4692 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4690,b4691,c4692);
} else {
var G__8823 = a4690;
var G__8824 = b4691;
var G__8825 = c4692;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8823,G__8824,G__8825) : f.call(null,G__8823,G__8824,G__8825));
}
} else {
var d4693 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4690,b4691,c4692,d4693);
} else {
var G__8826 = a4690;
var G__8827 = b4691;
var G__8828 = c4692;
var G__8829 = d4693;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8826,G__8827,G__8828,G__8829) : f.call(null,G__8826,G__8827,G__8828,G__8829));
}
} else {
var e4694 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4690,b4691,c4692,d4693,e4694);
} else {
var G__8830 = a4690;
var G__8831 = b4691;
var G__8832 = c4692;
var G__8833 = d4693;
var G__8834 = e4694;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8830,G__8831,G__8832,G__8833,G__8834) : f.call(null,G__8830,G__8831,G__8832,G__8833,G__8834));
}
} else {
var f4695 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4690,b4691,c4692,d4693,e4694,f4695);
} else {
var G__8835 = a4690;
var G__8836 = b4691;
var G__8837 = c4692;
var G__8838 = d4693;
var G__8839 = e4694;
var G__8840 = f4695;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8835,G__8836,G__8837,G__8838,G__8839,G__8840) : f.call(null,G__8835,G__8836,G__8837,G__8838,G__8839,G__8840));
}
} else {
var g4696 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4690,b4691,c4692,d4693,e4694,f4695,g4696);
} else {
var G__8841 = a4690;
var G__8842 = b4691;
var G__8843 = c4692;
var G__8844 = d4693;
var G__8845 = e4694;
var G__8846 = f4695;
var G__8847 = g4696;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8841,G__8842,G__8843,G__8844,G__8845,G__8846,G__8847) : f.call(null,G__8841,G__8842,G__8843,G__8844,G__8845,G__8846,G__8847));
}
} else {
var h4697 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697);
} else {
var G__8848 = a4690;
var G__8849 = b4691;
var G__8850 = c4692;
var G__8851 = d4693;
var G__8852 = e4694;
var G__8853 = f4695;
var G__8854 = g4696;
var G__8855 = h4697;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8848,G__8849,G__8850,G__8851,G__8852,G__8853,G__8854,G__8855) : f.call(null,G__8848,G__8849,G__8850,G__8851,G__8852,G__8853,G__8854,G__8855));
}
} else {
var i4698 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698);
} else {
var G__8856 = a4690;
var G__8857 = b4691;
var G__8858 = c4692;
var G__8859 = d4693;
var G__8860 = e4694;
var G__8861 = f4695;
var G__8862 = g4696;
var G__8863 = h4697;
var G__8864 = i4698;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8856,G__8857,G__8858,G__8859,G__8860,G__8861,G__8862,G__8863,G__8864) : f.call(null,G__8856,G__8857,G__8858,G__8859,G__8860,G__8861,G__8862,G__8863,G__8864));
}
} else {
var j4699 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699);
} else {
var G__8865 = a4690;
var G__8866 = b4691;
var G__8867 = c4692;
var G__8868 = d4693;
var G__8869 = e4694;
var G__8870 = f4695;
var G__8871 = g4696;
var G__8872 = h4697;
var G__8873 = i4698;
var G__8874 = j4699;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8865,G__8866,G__8867,G__8868,G__8869,G__8870,G__8871,G__8872,G__8873,G__8874) : f.call(null,G__8865,G__8866,G__8867,G__8868,G__8869,G__8870,G__8871,G__8872,G__8873,G__8874));
}
} else {
var k4700 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700);
} else {
var G__8875 = a4690;
var G__8876 = b4691;
var G__8877 = c4692;
var G__8878 = d4693;
var G__8879 = e4694;
var G__8880 = f4695;
var G__8881 = g4696;
var G__8882 = h4697;
var G__8883 = i4698;
var G__8884 = j4699;
var G__8885 = k4700;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8875,G__8876,G__8877,G__8878,G__8879,G__8880,G__8881,G__8882,G__8883,G__8884,G__8885) : f.call(null,G__8875,G__8876,G__8877,G__8878,G__8879,G__8880,G__8881,G__8882,G__8883,G__8884,G__8885));
}
} else {
var l4701 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701);
} else {
var G__8886 = a4690;
var G__8887 = b4691;
var G__8888 = c4692;
var G__8889 = d4693;
var G__8890 = e4694;
var G__8891 = f4695;
var G__8892 = g4696;
var G__8893 = h4697;
var G__8894 = i4698;
var G__8895 = j4699;
var G__8896 = k4700;
var G__8897 = l4701;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8886,G__8887,G__8888,G__8889,G__8890,G__8891,G__8892,G__8893,G__8894,G__8895,G__8896,G__8897) : f.call(null,G__8886,G__8887,G__8888,G__8889,G__8890,G__8891,G__8892,G__8893,G__8894,G__8895,G__8896,G__8897));
}
} else {
var m4702 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702);
} else {
var G__8898 = a4690;
var G__8899 = b4691;
var G__8900 = c4692;
var G__8901 = d4693;
var G__8902 = e4694;
var G__8903 = f4695;
var G__8904 = g4696;
var G__8905 = h4697;
var G__8906 = i4698;
var G__8907 = j4699;
var G__8908 = k4700;
var G__8909 = l4701;
var G__8910 = m4702;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8898,G__8899,G__8900,G__8901,G__8902,G__8903,G__8904,G__8905,G__8906,G__8907,G__8908,G__8909,G__8910) : f.call(null,G__8898,G__8899,G__8900,G__8901,G__8902,G__8903,G__8904,G__8905,G__8906,G__8907,G__8908,G__8909,G__8910));
}
} else {
var n4703 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703);
} else {
var G__8911 = a4690;
var G__8912 = b4691;
var G__8913 = c4692;
var G__8914 = d4693;
var G__8915 = e4694;
var G__8916 = f4695;
var G__8917 = g4696;
var G__8918 = h4697;
var G__8919 = i4698;
var G__8920 = j4699;
var G__8921 = k4700;
var G__8922 = l4701;
var G__8923 = m4702;
var G__8924 = n4703;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8911,G__8912,G__8913,G__8914,G__8915,G__8916,G__8917,G__8918,G__8919,G__8920,G__8921,G__8922,G__8923,G__8924) : f.call(null,G__8911,G__8912,G__8913,G__8914,G__8915,G__8916,G__8917,G__8918,G__8919,G__8920,G__8921,G__8922,G__8923,G__8924));
}
} else {
var o4704 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704);
} else {
var G__8925 = a4690;
var G__8926 = b4691;
var G__8927 = c4692;
var G__8928 = d4693;
var G__8929 = e4694;
var G__8930 = f4695;
var G__8931 = g4696;
var G__8932 = h4697;
var G__8933 = i4698;
var G__8934 = j4699;
var G__8935 = k4700;
var G__8936 = l4701;
var G__8937 = m4702;
var G__8938 = n4703;
var G__8939 = o4704;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8925,G__8926,G__8927,G__8928,G__8929,G__8930,G__8931,G__8932,G__8933,G__8934,G__8935,G__8936,G__8937,G__8938,G__8939) : f.call(null,G__8925,G__8926,G__8927,G__8928,G__8929,G__8930,G__8931,G__8932,G__8933,G__8934,G__8935,G__8936,G__8937,G__8938,G__8939));
}
} else {
var p4705 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705);
} else {
var G__8940 = a4690;
var G__8941 = b4691;
var G__8942 = c4692;
var G__8943 = d4693;
var G__8944 = e4694;
var G__8945 = f4695;
var G__8946 = g4696;
var G__8947 = h4697;
var G__8948 = i4698;
var G__8949 = j4699;
var G__8950 = k4700;
var G__8951 = l4701;
var G__8952 = m4702;
var G__8953 = n4703;
var G__8954 = o4704;
var G__8955 = p4705;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8940,G__8941,G__8942,G__8943,G__8944,G__8945,G__8946,G__8947,G__8948,G__8949,G__8950,G__8951,G__8952,G__8953,G__8954,G__8955) : f.call(null,G__8940,G__8941,G__8942,G__8943,G__8944,G__8945,G__8946,G__8947,G__8948,G__8949,G__8950,G__8951,G__8952,G__8953,G__8954,G__8955));
}
} else {
var q4706 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706);
} else {
var G__8956 = a4690;
var G__8957 = b4691;
var G__8958 = c4692;
var G__8959 = d4693;
var G__8960 = e4694;
var G__8961 = f4695;
var G__8962 = g4696;
var G__8963 = h4697;
var G__8964 = i4698;
var G__8965 = j4699;
var G__8966 = k4700;
var G__8967 = l4701;
var G__8968 = m4702;
var G__8969 = n4703;
var G__8970 = o4704;
var G__8971 = p4705;
var G__8972 = q4706;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8956,G__8957,G__8958,G__8959,G__8960,G__8961,G__8962,G__8963,G__8964,G__8965,G__8966,G__8967,G__8968,G__8969,G__8970,G__8971,G__8972) : f.call(null,G__8956,G__8957,G__8958,G__8959,G__8960,G__8961,G__8962,G__8963,G__8964,G__8965,G__8966,G__8967,G__8968,G__8969,G__8970,G__8971,G__8972));
}
} else {
var r4707 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707);
} else {
var G__8973 = a4690;
var G__8974 = b4691;
var G__8975 = c4692;
var G__8976 = d4693;
var G__8977 = e4694;
var G__8978 = f4695;
var G__8979 = g4696;
var G__8980 = h4697;
var G__8981 = i4698;
var G__8982 = j4699;
var G__8983 = k4700;
var G__8984 = l4701;
var G__8985 = m4702;
var G__8986 = n4703;
var G__8987 = o4704;
var G__8988 = p4705;
var G__8989 = q4706;
var G__8990 = r4707;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8973,G__8974,G__8975,G__8976,G__8977,G__8978,G__8979,G__8980,G__8981,G__8982,G__8983,G__8984,G__8985,G__8986,G__8987,G__8988,G__8989,G__8990) : f.call(null,G__8973,G__8974,G__8975,G__8976,G__8977,G__8978,G__8979,G__8980,G__8981,G__8982,G__8983,G__8984,G__8985,G__8986,G__8987,G__8988,G__8989,G__8990));
}
} else {
var s4708 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708);
} else {
var G__8991 = a4690;
var G__8992 = b4691;
var G__8993 = c4692;
var G__8994 = d4693;
var G__8995 = e4694;
var G__8996 = f4695;
var G__8997 = g4696;
var G__8998 = h4697;
var G__8999 = i4698;
var G__9000 = j4699;
var G__9001 = k4700;
var G__9002 = l4701;
var G__9003 = m4702;
var G__9004 = n4703;
var G__9005 = o4704;
var G__9006 = p4705;
var G__9007 = q4706;
var G__9008 = r4707;
var G__9009 = s4708;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8991,G__8992,G__8993,G__8994,G__8995,G__8996,G__8997,G__8998,G__8999,G__9000,G__9001,G__9002,G__9003,G__9004,G__9005,G__9006,G__9007,G__9008,G__9009) : f.call(null,G__8991,G__8992,G__8993,G__8994,G__8995,G__8996,G__8997,G__8998,G__8999,G__9000,G__9001,G__9002,G__9003,G__9004,G__9005,G__9006,G__9007,G__9008,G__9009));
}
} else {
var t4709 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708,t4709);
} else {
var G__9010 = a4690;
var G__9011 = b4691;
var G__9012 = c4692;
var G__9013 = d4693;
var G__9014 = e4694;
var G__9015 = f4695;
var G__9016 = g4696;
var G__9017 = h4697;
var G__9018 = i4698;
var G__9019 = j4699;
var G__9020 = k4700;
var G__9021 = l4701;
var G__9022 = m4702;
var G__9023 = n4703;
var G__9024 = o4704;
var G__9025 = p4705;
var G__9026 = q4706;
var G__9027 = r4707;
var G__9028 = s4708;
var G__9029 = t4709;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9010,G__9011,G__9012,G__9013,G__9014,G__9015,G__9016,G__9017,G__9018,G__9019,G__9020,G__9021,G__9022,G__9023,G__9024,G__9025,G__9026,G__9027,G__9028,G__9029) : f.call(null,G__9010,G__9011,G__9012,G__9013,G__9014,G__9015,G__9016,G__9017,G__9018,G__9019,G__9020,G__9021,G__9022,G__9023,G__9024,G__9025,G__9026,G__9027,G__9028,G__9029));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__9030__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9030 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9031__i = 0, G__9031__a = new Array(arguments.length -  5);
while (G__9031__i < G__9031__a.length) {G__9031__a[G__9031__i] = arguments[G__9031__i + 5]; ++G__9031__i;}
  args = new cljs.core.IndexedSeq(G__9031__a,0);
} 
return G__9030__delegate.call(this,f,a,b,c,d,args);};
G__9030.cljs$lang$maxFixedArity = 5;
G__9030.cljs$lang$applyTo = (function (arglist__9032){
var f = cljs.core.first(arglist__9032);
arglist__9032 = cljs.core.next(arglist__9032);
var a = cljs.core.first(arglist__9032);
arglist__9032 = cljs.core.next(arglist__9032);
var b = cljs.core.first(arglist__9032);
arglist__9032 = cljs.core.next(arglist__9032);
var c = cljs.core.first(arglist__9032);
arglist__9032 = cljs.core.next(arglist__9032);
var d = cljs.core.first(arglist__9032);
var args = cljs.core.rest(arglist__9032);
return G__9030__delegate(f,a,b,c,d,args);
});
G__9030.cljs$core$IFn$_invoke$arity$variadic = G__9030__delegate;
return G__9030;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__9033 = null;
if (arguments.length > 5) {
var G__9034__i = 0, G__9034__a = new Array(arguments.length -  5);
while (G__9034__i < G__9034__a.length) {G__9034__a[G__9034__i] = arguments[G__9034__i + 5]; ++G__9034__i;}
G__9033 = new cljs.core.IndexedSeq(G__9034__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9050 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9050) : f.call(null,G__9050));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9051 = cljs.core.meta(obj);
var G__9052 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9051,G__9052) : f.call(null,G__9051,G__9052));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9053 = cljs.core.meta(obj);
var G__9054 = a;
var G__9055 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9053,G__9054,G__9055) : f.call(null,G__9053,G__9054,G__9055));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9056 = cljs.core.meta(obj);
var G__9057 = a;
var G__9058 = b;
var G__9059 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9056,G__9057,G__9058,G__9059) : f.call(null,G__9056,G__9057,G__9058,G__9059));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9060 = cljs.core.meta(obj);
var G__9061 = a;
var G__9062 = b;
var G__9063 = c;
var G__9064 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9060,G__9061,G__9062,G__9063,G__9064) : f.call(null,G__9060,G__9061,G__9062,G__9063,G__9064));
})());
});
var vary_meta__7 = (function() { 
var G__9065__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9065 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9066__i = 0, G__9066__a = new Array(arguments.length -  6);
while (G__9066__i < G__9066__a.length) {G__9066__a[G__9066__i] = arguments[G__9066__i + 6]; ++G__9066__i;}
  args = new cljs.core.IndexedSeq(G__9066__a,0);
} 
return G__9065__delegate.call(this,obj,f,a,b,c,d,args);};
G__9065.cljs$lang$maxFixedArity = 6;
G__9065.cljs$lang$applyTo = (function (arglist__9067){
var obj = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var f = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var a = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var b = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var c = cljs.core.first(arglist__9067);
arglist__9067 = cljs.core.next(arglist__9067);
var d = cljs.core.first(arglist__9067);
var args = cljs.core.rest(arglist__9067);
return G__9065__delegate(obj,f,a,b,c,d,args);
});
G__9065.cljs$core$IFn$_invoke$arity$variadic = G__9065__delegate;
return G__9065;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9068 = null;
if (arguments.length > 6) {
var G__9069__i = 0, G__9069__a = new Array(arguments.length -  6);
while (G__9069__i < G__9069__a.length) {G__9069__a[G__9069__i] = arguments[G__9069__i + 6]; ++G__9069__i;}
G__9068 = new cljs.core.IndexedSeq(G__9069__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__9070__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9070 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9071__i = 0, G__9071__a = new Array(arguments.length -  2);
while (G__9071__i < G__9071__a.length) {G__9071__a[G__9071__i] = arguments[G__9071__i + 2]; ++G__9071__i;}
  more = new cljs.core.IndexedSeq(G__9071__a,0);
} 
return G__9070__delegate.call(this,x,y,more);};
G__9070.cljs$lang$maxFixedArity = 2;
G__9070.cljs$lang$applyTo = (function (arglist__9072){
var x = cljs.core.first(arglist__9072);
arglist__9072 = cljs.core.next(arglist__9072);
var y = cljs.core.first(arglist__9072);
var more = cljs.core.rest(arglist__9072);
return G__9070__delegate(x,y,more);
});
G__9070.cljs$core$IFn$_invoke$arity$variadic = G__9070__delegate;
return G__9070;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__9073 = null;
if (arguments.length > 2) {
var G__9074__i = 0, G__9074__a = new Array(arguments.length -  2);
while (G__9074__i < G__9074__a.length) {G__9074__a[G__9074__i] = arguments[G__9074__i + 2]; ++G__9074__i;}
G__9073 = new cljs.core.IndexedSeq(G__9074__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t9078 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9078 = (function (nil_iter,meta9079){
this.nil_iter = nil_iter;
this.meta9079 = meta9079;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9078.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9078.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9078.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9078.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9080){
var self__ = this;
var _9080__$1 = this;
return self__.meta9079;
});

cljs.core.t9078.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9080,meta9079__$1){
var self__ = this;
var _9080__$1 = this;
return (new cljs.core.t9078(self__.nil_iter,meta9079__$1));
});

cljs.core.t9078.cljs$lang$type = true;

cljs.core.t9078.cljs$lang$ctorStr = "cljs.core/t9078";

cljs.core.t9078.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/t9078");
});

cljs.core.__GT_t9078 = (function __GT_t9078(nil_iter__$1,meta9079){
return (new cljs.core.t9078(nil_iter__$1,meta9079));
});

}

return (new cljs.core.t9078(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/travis/build/jdmarble/dailyprogrammer/target/site/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return self__.iter.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9081 = lt;
var G__9082 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9081,G__9082) : self__.xform.call(null,G__9081,G__9082));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9083 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9083) : self__.xform.call(null,G__9083));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9085 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9085) : xform.call(null,G__9085));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9087 = cljs.core.next(iters__$1);
iters__$1 = G__9087;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4646__auto___9088 = self__.iters.length;
var i_9089 = (0);
while(true){
if((i_9089 < n__4646__auto___9088)){
(self__.nexts[i_9089] = (self__.iters[i_9089]).next());

var G__9090 = (i_9089 + (1));
i_9089 = G__9090;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return this$.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9086 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9086) : self__.xform.call(null,G__9086));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9095 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9095) : xform.call(null,G__9095));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9096_9100 = cljs.core.seq(colls);
var chunk__9097_9101 = null;
var count__9098_9102 = (0);
var i__9099_9103 = (0);
while(true){
if((i__9099_9103 < count__9098_9102)){
var coll_9104 = chunk__9097_9101.cljs$core$IIndexed$_nth$arity$2(null,i__9099_9103);
iters.push(cljs.core.iter(coll_9104));

var G__9105 = seq__9096_9100;
var G__9106 = chunk__9097_9101;
var G__9107 = count__9098_9102;
var G__9108 = (i__9099_9103 + (1));
seq__9096_9100 = G__9105;
chunk__9097_9101 = G__9106;
count__9098_9102 = G__9107;
i__9099_9103 = G__9108;
continue;
} else {
var temp__4126__auto___9109 = cljs.core.seq(seq__9096_9100);
if(temp__4126__auto___9109){
var seq__9096_9110__$1 = temp__4126__auto___9109;
if(cljs.core.chunked_seq_QMARK_(seq__9096_9110__$1)){
var c__4546__auto___9111 = cljs.core.chunk_first(seq__9096_9110__$1);
var G__9112 = cljs.core.chunk_rest(seq__9096_9110__$1);
var G__9113 = c__4546__auto___9111;
var G__9114 = cljs.core.count(c__4546__auto___9111);
var G__9115 = (0);
seq__9096_9100 = G__9112;
chunk__9097_9101 = G__9113;
count__9098_9102 = G__9114;
i__9099_9103 = G__9115;
continue;
} else {
var coll_9116 = cljs.core.first(seq__9096_9110__$1);
iters.push(cljs.core.iter(coll_9116));

var G__9117 = cljs.core.next(seq__9096_9110__$1);
var G__9118 = null;
var G__9119 = (0);
var G__9120 = (0);
seq__9096_9100 = G__9117;
chunk__9097_9101 = G__9118;
count__9098_9102 = G__9119;
i__9099_9103 = G__9120;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3759__auto__ = cljs.core.seq(coll);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__9121__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9121 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9122__i = 0, G__9122__a = new Array(arguments.length -  2);
while (G__9122__i < G__9122__a.length) {G__9122__a[G__9122__i] = arguments[G__9122__i + 2]; ++G__9122__i;}
  colls = new cljs.core.IndexedSeq(G__9122__a,0);
} 
return G__9121__delegate.call(this,xform,coll,colls);};
G__9121.cljs$lang$maxFixedArity = 2;
G__9121.cljs$lang$applyTo = (function (arglist__9123){
var xform = cljs.core.first(arglist__9123);
arglist__9123 = cljs.core.next(arglist__9123);
var coll = cljs.core.first(arglist__9123);
var colls = cljs.core.rest(arglist__9123);
return G__9121__delegate(xform,coll,colls);
});
G__9121.cljs$core$IFn$_invoke$arity$variadic = G__9121__delegate;
return G__9121;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__9124 = null;
if (arguments.length > 2) {
var G__9125__i = 0, G__9125__a = new Array(arguments.length -  2);
while (G__9125__i < G__9125__a.length) {G__9125__a[G__9125__i] = arguments[G__9125__i + 2]; ++G__9125__i;}
G__9124 = new cljs.core.IndexedSeq(G__9125__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9127 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9127) : pred.call(null,G__9127));
})())){
var G__9128 = pred;
var G__9129 = cljs.core.next(coll);
pred = G__9128;
coll = G__9129;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3759__auto__ = (function (){var G__9133 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9133) : pred.call(null,G__9133));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__9134 = pred;
var G__9135 = cljs.core.next(coll);
pred = G__9134;
coll = G__9135;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__9142 = null;
var G__9142__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9142__1 = (function (x){
return cljs.core.not((function (){var G__9139 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9139) : f.call(null,G__9139));
})());
});
var G__9142__2 = (function (x,y){
return cljs.core.not((function (){var G__9140 = x;
var G__9141 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9140,G__9141) : f.call(null,G__9140,G__9141));
})());
});
var G__9142__3 = (function() { 
var G__9143__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9143 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9144__i = 0, G__9144__a = new Array(arguments.length -  2);
while (G__9144__i < G__9144__a.length) {G__9144__a[G__9144__i] = arguments[G__9144__i + 2]; ++G__9144__i;}
  zs = new cljs.core.IndexedSeq(G__9144__a,0);
} 
return G__9143__delegate.call(this,x,y,zs);};
G__9143.cljs$lang$maxFixedArity = 2;
G__9143.cljs$lang$applyTo = (function (arglist__9145){
var x = cljs.core.first(arglist__9145);
arglist__9145 = cljs.core.next(arglist__9145);
var y = cljs.core.first(arglist__9145);
var zs = cljs.core.rest(arglist__9145);
return G__9143__delegate(x,y,zs);
});
G__9143.cljs$core$IFn$_invoke$arity$variadic = G__9143__delegate;
return G__9143;
})()
;
G__9142 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9142__0.call(this);
case 1:
return G__9142__1.call(this,x);
case 2:
return G__9142__2.call(this,x,y);
default:
var G__9146 = null;
if (arguments.length > 2) {
var G__9147__i = 0, G__9147__a = new Array(arguments.length -  2);
while (G__9147__i < G__9147__a.length) {G__9147__a[G__9147__i] = arguments[G__9147__i + 2]; ++G__9147__i;}
G__9146 = new cljs.core.IndexedSeq(G__9147__a,0);
}
return G__9142__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9142.cljs$lang$maxFixedArity = 2;
G__9142.cljs$lang$applyTo = G__9142__3.cljs$lang$applyTo;
G__9142.cljs$core$IFn$_invoke$arity$0 = G__9142__0;
G__9142.cljs$core$IFn$_invoke$arity$1 = G__9142__1;
G__9142.cljs$core$IFn$_invoke$arity$2 = G__9142__2;
G__9142.cljs$core$IFn$_invoke$arity$variadic = G__9142__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9142;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__9148__delegate = function (args){
return x;
};
var G__9148 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9149__i = 0, G__9149__a = new Array(arguments.length -  0);
while (G__9149__i < G__9149__a.length) {G__9149__a[G__9149__i] = arguments[G__9149__i + 0]; ++G__9149__i;}
  args = new cljs.core.IndexedSeq(G__9149__a,0);
} 
return G__9148__delegate.call(this,args);};
G__9148.cljs$lang$maxFixedArity = 0;
G__9148.cljs$lang$applyTo = (function (arglist__9150){
var args = cljs.core.seq(arglist__9150);
return G__9148__delegate(args);
});
G__9148.cljs$core$IFn$_invoke$arity$variadic = G__9148__delegate;
return G__9148;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9205 = null;
var G__9205__0 = (function (){
var G__9178 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9178) : f.call(null,G__9178));
});
var G__9205__1 = (function (x){
var G__9179 = (function (){var G__9180 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9180) : g.call(null,G__9180));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9179) : f.call(null,G__9179));
});
var G__9205__2 = (function (x,y){
var G__9181 = (function (){var G__9182 = x;
var G__9183 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9182,G__9183) : g.call(null,G__9182,G__9183));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9181) : f.call(null,G__9181));
});
var G__9205__3 = (function (x,y,z){
var G__9184 = (function (){var G__9185 = x;
var G__9186 = y;
var G__9187 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9185,G__9186,G__9187) : g.call(null,G__9185,G__9186,G__9187));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9184) : f.call(null,G__9184));
});
var G__9205__4 = (function() { 
var G__9206__delegate = function (x,y,z,args){
var G__9188 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9188) : f.call(null,G__9188));
};
var G__9206 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9207__i = 0, G__9207__a = new Array(arguments.length -  3);
while (G__9207__i < G__9207__a.length) {G__9207__a[G__9207__i] = arguments[G__9207__i + 3]; ++G__9207__i;}
  args = new cljs.core.IndexedSeq(G__9207__a,0);
} 
return G__9206__delegate.call(this,x,y,z,args);};
G__9206.cljs$lang$maxFixedArity = 3;
G__9206.cljs$lang$applyTo = (function (arglist__9208){
var x = cljs.core.first(arglist__9208);
arglist__9208 = cljs.core.next(arglist__9208);
var y = cljs.core.first(arglist__9208);
arglist__9208 = cljs.core.next(arglist__9208);
var z = cljs.core.first(arglist__9208);
var args = cljs.core.rest(arglist__9208);
return G__9206__delegate(x,y,z,args);
});
G__9206.cljs$core$IFn$_invoke$arity$variadic = G__9206__delegate;
return G__9206;
})()
;
G__9205 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9205__0.call(this);
case 1:
return G__9205__1.call(this,x);
case 2:
return G__9205__2.call(this,x,y);
case 3:
return G__9205__3.call(this,x,y,z);
default:
var G__9209 = null;
if (arguments.length > 3) {
var G__9210__i = 0, G__9210__a = new Array(arguments.length -  3);
while (G__9210__i < G__9210__a.length) {G__9210__a[G__9210__i] = arguments[G__9210__i + 3]; ++G__9210__i;}
G__9209 = new cljs.core.IndexedSeq(G__9210__a,0);
}
return G__9205__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9205.cljs$lang$maxFixedArity = 3;
G__9205.cljs$lang$applyTo = G__9205__4.cljs$lang$applyTo;
G__9205.cljs$core$IFn$_invoke$arity$0 = G__9205__0;
G__9205.cljs$core$IFn$_invoke$arity$1 = G__9205__1;
G__9205.cljs$core$IFn$_invoke$arity$2 = G__9205__2;
G__9205.cljs$core$IFn$_invoke$arity$3 = G__9205__3;
G__9205.cljs$core$IFn$_invoke$arity$variadic = G__9205__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9205;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9211 = null;
var G__9211__0 = (function (){
var G__9189 = (function (){var G__9190 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9190) : g.call(null,G__9190));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9189) : f.call(null,G__9189));
});
var G__9211__1 = (function (x){
var G__9191 = (function (){var G__9192 = (function (){var G__9193 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9193) : h.call(null,G__9193));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9192) : g.call(null,G__9192));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9191) : f.call(null,G__9191));
});
var G__9211__2 = (function (x,y){
var G__9194 = (function (){var G__9195 = (function (){var G__9196 = x;
var G__9197 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9196,G__9197) : h.call(null,G__9196,G__9197));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9195) : g.call(null,G__9195));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9194) : f.call(null,G__9194));
});
var G__9211__3 = (function (x,y,z){
var G__9198 = (function (){var G__9199 = (function (){var G__9200 = x;
var G__9201 = y;
var G__9202 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9200,G__9201,G__9202) : h.call(null,G__9200,G__9201,G__9202));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9199) : g.call(null,G__9199));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9198) : f.call(null,G__9198));
});
var G__9211__4 = (function() { 
var G__9212__delegate = function (x,y,z,args){
var G__9203 = (function (){var G__9204 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9204) : g.call(null,G__9204));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9203) : f.call(null,G__9203));
};
var G__9212 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9213__i = 0, G__9213__a = new Array(arguments.length -  3);
while (G__9213__i < G__9213__a.length) {G__9213__a[G__9213__i] = arguments[G__9213__i + 3]; ++G__9213__i;}
  args = new cljs.core.IndexedSeq(G__9213__a,0);
} 
return G__9212__delegate.call(this,x,y,z,args);};
G__9212.cljs$lang$maxFixedArity = 3;
G__9212.cljs$lang$applyTo = (function (arglist__9214){
var x = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var y = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var z = cljs.core.first(arglist__9214);
var args = cljs.core.rest(arglist__9214);
return G__9212__delegate(x,y,z,args);
});
G__9212.cljs$core$IFn$_invoke$arity$variadic = G__9212__delegate;
return G__9212;
})()
;
G__9211 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9211__0.call(this);
case 1:
return G__9211__1.call(this,x);
case 2:
return G__9211__2.call(this,x,y);
case 3:
return G__9211__3.call(this,x,y,z);
default:
var G__9215 = null;
if (arguments.length > 3) {
var G__9216__i = 0, G__9216__a = new Array(arguments.length -  3);
while (G__9216__i < G__9216__a.length) {G__9216__a[G__9216__i] = arguments[G__9216__i + 3]; ++G__9216__i;}
G__9215 = new cljs.core.IndexedSeq(G__9216__a,0);
}
return G__9211__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9211.cljs$lang$maxFixedArity = 3;
G__9211.cljs$lang$applyTo = G__9211__4.cljs$lang$applyTo;
G__9211.cljs$core$IFn$_invoke$arity$0 = G__9211__0;
G__9211.cljs$core$IFn$_invoke$arity$1 = G__9211__1;
G__9211.cljs$core$IFn$_invoke$arity$2 = G__9211__2;
G__9211.cljs$core$IFn$_invoke$arity$3 = G__9211__3;
G__9211.cljs$core$IFn$_invoke$arity$variadic = G__9211__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9211;
})()
});
var comp__4 = (function() { 
var G__9217__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9218__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9219 = cljs.core.first(fs__$2).call(null,ret);
var G__9220 = cljs.core.next(fs__$2);
ret = G__9219;
fs__$2 = G__9220;
continue;
} else {
return ret;
}
break;
}
};
var G__9218 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9221__i = 0, G__9221__a = new Array(arguments.length -  0);
while (G__9221__i < G__9221__a.length) {G__9221__a[G__9221__i] = arguments[G__9221__i + 0]; ++G__9221__i;}
  args = new cljs.core.IndexedSeq(G__9221__a,0);
} 
return G__9218__delegate.call(this,args);};
G__9218.cljs$lang$maxFixedArity = 0;
G__9218.cljs$lang$applyTo = (function (arglist__9222){
var args = cljs.core.seq(arglist__9222);
return G__9218__delegate(args);
});
G__9218.cljs$core$IFn$_invoke$arity$variadic = G__9218__delegate;
return G__9218;
})()
;
;})(fs__$1))
};
var G__9217 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9223__i = 0, G__9223__a = new Array(arguments.length -  3);
while (G__9223__i < G__9223__a.length) {G__9223__a[G__9223__i] = arguments[G__9223__i + 3]; ++G__9223__i;}
  fs = new cljs.core.IndexedSeq(G__9223__a,0);
} 
return G__9217__delegate.call(this,f1,f2,f3,fs);};
G__9217.cljs$lang$maxFixedArity = 3;
G__9217.cljs$lang$applyTo = (function (arglist__9224){
var f1 = cljs.core.first(arglist__9224);
arglist__9224 = cljs.core.next(arglist__9224);
var f2 = cljs.core.first(arglist__9224);
arglist__9224 = cljs.core.next(arglist__9224);
var f3 = cljs.core.first(arglist__9224);
var fs = cljs.core.rest(arglist__9224);
return G__9217__delegate(f1,f2,f3,fs);
});
G__9217.cljs$core$IFn$_invoke$arity$variadic = G__9217__delegate;
return G__9217;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9225 = null;
if (arguments.length > 3) {
var G__9226__i = 0, G__9226__a = new Array(arguments.length -  3);
while (G__9226__i < G__9226__a.length) {G__9226__a[G__9226__i] = arguments[G__9226__i + 3]; ++G__9226__i;}
G__9225 = new cljs.core.IndexedSeq(G__9226__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9311 = null;
var G__9311__0 = (function (){
var G__9269 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9269) : f.call(null,G__9269));
});
var G__9311__1 = (function (x){
var G__9270 = arg1;
var G__9271 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9270,G__9271) : f.call(null,G__9270,G__9271));
});
var G__9311__2 = (function (x,y){
var G__9272 = arg1;
var G__9273 = x;
var G__9274 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9272,G__9273,G__9274) : f.call(null,G__9272,G__9273,G__9274));
});
var G__9311__3 = (function (x,y,z){
var G__9275 = arg1;
var G__9276 = x;
var G__9277 = y;
var G__9278 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9275,G__9276,G__9277,G__9278) : f.call(null,G__9275,G__9276,G__9277,G__9278));
});
var G__9311__4 = (function() { 
var G__9312__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9312 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9313__i = 0, G__9313__a = new Array(arguments.length -  3);
while (G__9313__i < G__9313__a.length) {G__9313__a[G__9313__i] = arguments[G__9313__i + 3]; ++G__9313__i;}
  args = new cljs.core.IndexedSeq(G__9313__a,0);
} 
return G__9312__delegate.call(this,x,y,z,args);};
G__9312.cljs$lang$maxFixedArity = 3;
G__9312.cljs$lang$applyTo = (function (arglist__9314){
var x = cljs.core.first(arglist__9314);
arglist__9314 = cljs.core.next(arglist__9314);
var y = cljs.core.first(arglist__9314);
arglist__9314 = cljs.core.next(arglist__9314);
var z = cljs.core.first(arglist__9314);
var args = cljs.core.rest(arglist__9314);
return G__9312__delegate(x,y,z,args);
});
G__9312.cljs$core$IFn$_invoke$arity$variadic = G__9312__delegate;
return G__9312;
})()
;
G__9311 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9311__0.call(this);
case 1:
return G__9311__1.call(this,x);
case 2:
return G__9311__2.call(this,x,y);
case 3:
return G__9311__3.call(this,x,y,z);
default:
var G__9315 = null;
if (arguments.length > 3) {
var G__9316__i = 0, G__9316__a = new Array(arguments.length -  3);
while (G__9316__i < G__9316__a.length) {G__9316__a[G__9316__i] = arguments[G__9316__i + 3]; ++G__9316__i;}
G__9315 = new cljs.core.IndexedSeq(G__9316__a,0);
}
return G__9311__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9311.cljs$lang$maxFixedArity = 3;
G__9311.cljs$lang$applyTo = G__9311__4.cljs$lang$applyTo;
G__9311.cljs$core$IFn$_invoke$arity$0 = G__9311__0;
G__9311.cljs$core$IFn$_invoke$arity$1 = G__9311__1;
G__9311.cljs$core$IFn$_invoke$arity$2 = G__9311__2;
G__9311.cljs$core$IFn$_invoke$arity$3 = G__9311__3;
G__9311.cljs$core$IFn$_invoke$arity$variadic = G__9311__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9311;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9317 = null;
var G__9317__0 = (function (){
var G__9279 = arg1;
var G__9280 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9279,G__9280) : f.call(null,G__9279,G__9280));
});
var G__9317__1 = (function (x){
var G__9281 = arg1;
var G__9282 = arg2;
var G__9283 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9281,G__9282,G__9283) : f.call(null,G__9281,G__9282,G__9283));
});
var G__9317__2 = (function (x,y){
var G__9284 = arg1;
var G__9285 = arg2;
var G__9286 = x;
var G__9287 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9284,G__9285,G__9286,G__9287) : f.call(null,G__9284,G__9285,G__9286,G__9287));
});
var G__9317__3 = (function (x,y,z){
var G__9288 = arg1;
var G__9289 = arg2;
var G__9290 = x;
var G__9291 = y;
var G__9292 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9288,G__9289,G__9290,G__9291,G__9292) : f.call(null,G__9288,G__9289,G__9290,G__9291,G__9292));
});
var G__9317__4 = (function() { 
var G__9318__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9318 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9319__i = 0, G__9319__a = new Array(arguments.length -  3);
while (G__9319__i < G__9319__a.length) {G__9319__a[G__9319__i] = arguments[G__9319__i + 3]; ++G__9319__i;}
  args = new cljs.core.IndexedSeq(G__9319__a,0);
} 
return G__9318__delegate.call(this,x,y,z,args);};
G__9318.cljs$lang$maxFixedArity = 3;
G__9318.cljs$lang$applyTo = (function (arglist__9320){
var x = cljs.core.first(arglist__9320);
arglist__9320 = cljs.core.next(arglist__9320);
var y = cljs.core.first(arglist__9320);
arglist__9320 = cljs.core.next(arglist__9320);
var z = cljs.core.first(arglist__9320);
var args = cljs.core.rest(arglist__9320);
return G__9318__delegate(x,y,z,args);
});
G__9318.cljs$core$IFn$_invoke$arity$variadic = G__9318__delegate;
return G__9318;
})()
;
G__9317 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9317__0.call(this);
case 1:
return G__9317__1.call(this,x);
case 2:
return G__9317__2.call(this,x,y);
case 3:
return G__9317__3.call(this,x,y,z);
default:
var G__9321 = null;
if (arguments.length > 3) {
var G__9322__i = 0, G__9322__a = new Array(arguments.length -  3);
while (G__9322__i < G__9322__a.length) {G__9322__a[G__9322__i] = arguments[G__9322__i + 3]; ++G__9322__i;}
G__9321 = new cljs.core.IndexedSeq(G__9322__a,0);
}
return G__9317__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9317.cljs$lang$maxFixedArity = 3;
G__9317.cljs$lang$applyTo = G__9317__4.cljs$lang$applyTo;
G__9317.cljs$core$IFn$_invoke$arity$0 = G__9317__0;
G__9317.cljs$core$IFn$_invoke$arity$1 = G__9317__1;
G__9317.cljs$core$IFn$_invoke$arity$2 = G__9317__2;
G__9317.cljs$core$IFn$_invoke$arity$3 = G__9317__3;
G__9317.cljs$core$IFn$_invoke$arity$variadic = G__9317__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9317;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9323 = null;
var G__9323__0 = (function (){
var G__9293 = arg1;
var G__9294 = arg2;
var G__9295 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9293,G__9294,G__9295) : f.call(null,G__9293,G__9294,G__9295));
});
var G__9323__1 = (function (x){
var G__9296 = arg1;
var G__9297 = arg2;
var G__9298 = arg3;
var G__9299 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9296,G__9297,G__9298,G__9299) : f.call(null,G__9296,G__9297,G__9298,G__9299));
});
var G__9323__2 = (function (x,y){
var G__9300 = arg1;
var G__9301 = arg2;
var G__9302 = arg3;
var G__9303 = x;
var G__9304 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9300,G__9301,G__9302,G__9303,G__9304) : f.call(null,G__9300,G__9301,G__9302,G__9303,G__9304));
});
var G__9323__3 = (function (x,y,z){
var G__9305 = arg1;
var G__9306 = arg2;
var G__9307 = arg3;
var G__9308 = x;
var G__9309 = y;
var G__9310 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9305,G__9306,G__9307,G__9308,G__9309,G__9310) : f.call(null,G__9305,G__9306,G__9307,G__9308,G__9309,G__9310));
});
var G__9323__4 = (function() { 
var G__9324__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9324 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9325__i = 0, G__9325__a = new Array(arguments.length -  3);
while (G__9325__i < G__9325__a.length) {G__9325__a[G__9325__i] = arguments[G__9325__i + 3]; ++G__9325__i;}
  args = new cljs.core.IndexedSeq(G__9325__a,0);
} 
return G__9324__delegate.call(this,x,y,z,args);};
G__9324.cljs$lang$maxFixedArity = 3;
G__9324.cljs$lang$applyTo = (function (arglist__9326){
var x = cljs.core.first(arglist__9326);
arglist__9326 = cljs.core.next(arglist__9326);
var y = cljs.core.first(arglist__9326);
arglist__9326 = cljs.core.next(arglist__9326);
var z = cljs.core.first(arglist__9326);
var args = cljs.core.rest(arglist__9326);
return G__9324__delegate(x,y,z,args);
});
G__9324.cljs$core$IFn$_invoke$arity$variadic = G__9324__delegate;
return G__9324;
})()
;
G__9323 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9323__0.call(this);
case 1:
return G__9323__1.call(this,x);
case 2:
return G__9323__2.call(this,x,y);
case 3:
return G__9323__3.call(this,x,y,z);
default:
var G__9327 = null;
if (arguments.length > 3) {
var G__9328__i = 0, G__9328__a = new Array(arguments.length -  3);
while (G__9328__i < G__9328__a.length) {G__9328__a[G__9328__i] = arguments[G__9328__i + 3]; ++G__9328__i;}
G__9327 = new cljs.core.IndexedSeq(G__9328__a,0);
}
return G__9323__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9323.cljs$lang$maxFixedArity = 3;
G__9323.cljs$lang$applyTo = G__9323__4.cljs$lang$applyTo;
G__9323.cljs$core$IFn$_invoke$arity$0 = G__9323__0;
G__9323.cljs$core$IFn$_invoke$arity$1 = G__9323__1;
G__9323.cljs$core$IFn$_invoke$arity$2 = G__9323__2;
G__9323.cljs$core$IFn$_invoke$arity$3 = G__9323__3;
G__9323.cljs$core$IFn$_invoke$arity$variadic = G__9323__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9323;
})()
});
var partial__5 = (function() { 
var G__9329__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9330__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9330 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9331__i = 0, G__9331__a = new Array(arguments.length -  0);
while (G__9331__i < G__9331__a.length) {G__9331__a[G__9331__i] = arguments[G__9331__i + 0]; ++G__9331__i;}
  args = new cljs.core.IndexedSeq(G__9331__a,0);
} 
return G__9330__delegate.call(this,args);};
G__9330.cljs$lang$maxFixedArity = 0;
G__9330.cljs$lang$applyTo = (function (arglist__9332){
var args = cljs.core.seq(arglist__9332);
return G__9330__delegate(args);
});
G__9330.cljs$core$IFn$_invoke$arity$variadic = G__9330__delegate;
return G__9330;
})()
;
};
var G__9329 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9333__i = 0, G__9333__a = new Array(arguments.length -  4);
while (G__9333__i < G__9333__a.length) {G__9333__a[G__9333__i] = arguments[G__9333__i + 4]; ++G__9333__i;}
  more = new cljs.core.IndexedSeq(G__9333__a,0);
} 
return G__9329__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9329.cljs$lang$maxFixedArity = 4;
G__9329.cljs$lang$applyTo = (function (arglist__9334){
var f = cljs.core.first(arglist__9334);
arglist__9334 = cljs.core.next(arglist__9334);
var arg1 = cljs.core.first(arglist__9334);
arglist__9334 = cljs.core.next(arglist__9334);
var arg2 = cljs.core.first(arglist__9334);
arglist__9334 = cljs.core.next(arglist__9334);
var arg3 = cljs.core.first(arglist__9334);
var more = cljs.core.rest(arglist__9334);
return G__9329__delegate(f,arg1,arg2,arg3,more);
});
G__9329.cljs$core$IFn$_invoke$arity$variadic = G__9329__delegate;
return G__9329;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9335 = null;
if (arguments.length > 4) {
var G__9336__i = 0, G__9336__a = new Array(arguments.length -  4);
while (G__9336__i < G__9336__a.length) {G__9336__a[G__9336__i] = arguments[G__9336__i + 4]; ++G__9336__i;}
G__9335 = new cljs.core.IndexedSeq(G__9336__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__9369 = null;
var G__9369__1 = (function (a){
var G__9353 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9353) : f.call(null,G__9353));
});
var G__9369__2 = (function (a,b){
var G__9354 = (((a == null))?x:a);
var G__9355 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9354,G__9355) : f.call(null,G__9354,G__9355));
});
var G__9369__3 = (function (a,b,c){
var G__9356 = (((a == null))?x:a);
var G__9357 = b;
var G__9358 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9356,G__9357,G__9358) : f.call(null,G__9356,G__9357,G__9358));
});
var G__9369__4 = (function() { 
var G__9370__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9370 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9371__i = 0, G__9371__a = new Array(arguments.length -  3);
while (G__9371__i < G__9371__a.length) {G__9371__a[G__9371__i] = arguments[G__9371__i + 3]; ++G__9371__i;}
  ds = new cljs.core.IndexedSeq(G__9371__a,0);
} 
return G__9370__delegate.call(this,a,b,c,ds);};
G__9370.cljs$lang$maxFixedArity = 3;
G__9370.cljs$lang$applyTo = (function (arglist__9372){
var a = cljs.core.first(arglist__9372);
arglist__9372 = cljs.core.next(arglist__9372);
var b = cljs.core.first(arglist__9372);
arglist__9372 = cljs.core.next(arglist__9372);
var c = cljs.core.first(arglist__9372);
var ds = cljs.core.rest(arglist__9372);
return G__9370__delegate(a,b,c,ds);
});
G__9370.cljs$core$IFn$_invoke$arity$variadic = G__9370__delegate;
return G__9370;
})()
;
G__9369 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9369__1.call(this,a);
case 2:
return G__9369__2.call(this,a,b);
case 3:
return G__9369__3.call(this,a,b,c);
default:
var G__9373 = null;
if (arguments.length > 3) {
var G__9374__i = 0, G__9374__a = new Array(arguments.length -  3);
while (G__9374__i < G__9374__a.length) {G__9374__a[G__9374__i] = arguments[G__9374__i + 3]; ++G__9374__i;}
G__9373 = new cljs.core.IndexedSeq(G__9374__a,0);
}
return G__9369__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9369.cljs$lang$maxFixedArity = 3;
G__9369.cljs$lang$applyTo = G__9369__4.cljs$lang$applyTo;
G__9369.cljs$core$IFn$_invoke$arity$1 = G__9369__1;
G__9369.cljs$core$IFn$_invoke$arity$2 = G__9369__2;
G__9369.cljs$core$IFn$_invoke$arity$3 = G__9369__3;
G__9369.cljs$core$IFn$_invoke$arity$variadic = G__9369__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9369;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__9375 = null;
var G__9375__2 = (function (a,b){
var G__9359 = (((a == null))?x:a);
var G__9360 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9359,G__9360) : f.call(null,G__9359,G__9360));
});
var G__9375__3 = (function (a,b,c){
var G__9361 = (((a == null))?x:a);
var G__9362 = (((b == null))?y:b);
var G__9363 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9361,G__9362,G__9363) : f.call(null,G__9361,G__9362,G__9363));
});
var G__9375__4 = (function() { 
var G__9376__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9376 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9377__i = 0, G__9377__a = new Array(arguments.length -  3);
while (G__9377__i < G__9377__a.length) {G__9377__a[G__9377__i] = arguments[G__9377__i + 3]; ++G__9377__i;}
  ds = new cljs.core.IndexedSeq(G__9377__a,0);
} 
return G__9376__delegate.call(this,a,b,c,ds);};
G__9376.cljs$lang$maxFixedArity = 3;
G__9376.cljs$lang$applyTo = (function (arglist__9378){
var a = cljs.core.first(arglist__9378);
arglist__9378 = cljs.core.next(arglist__9378);
var b = cljs.core.first(arglist__9378);
arglist__9378 = cljs.core.next(arglist__9378);
var c = cljs.core.first(arglist__9378);
var ds = cljs.core.rest(arglist__9378);
return G__9376__delegate(a,b,c,ds);
});
G__9376.cljs$core$IFn$_invoke$arity$variadic = G__9376__delegate;
return G__9376;
})()
;
G__9375 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9375__2.call(this,a,b);
case 3:
return G__9375__3.call(this,a,b,c);
default:
var G__9379 = null;
if (arguments.length > 3) {
var G__9380__i = 0, G__9380__a = new Array(arguments.length -  3);
while (G__9380__i < G__9380__a.length) {G__9380__a[G__9380__i] = arguments[G__9380__i + 3]; ++G__9380__i;}
G__9379 = new cljs.core.IndexedSeq(G__9380__a,0);
}
return G__9375__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9375.cljs$lang$maxFixedArity = 3;
G__9375.cljs$lang$applyTo = G__9375__4.cljs$lang$applyTo;
G__9375.cljs$core$IFn$_invoke$arity$2 = G__9375__2;
G__9375.cljs$core$IFn$_invoke$arity$3 = G__9375__3;
G__9375.cljs$core$IFn$_invoke$arity$variadic = G__9375__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9375;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__9381 = null;
var G__9381__2 = (function (a,b){
var G__9364 = (((a == null))?x:a);
var G__9365 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9364,G__9365) : f.call(null,G__9364,G__9365));
});
var G__9381__3 = (function (a,b,c){
var G__9366 = (((a == null))?x:a);
var G__9367 = (((b == null))?y:b);
var G__9368 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9366,G__9367,G__9368) : f.call(null,G__9366,G__9367,G__9368));
});
var G__9381__4 = (function() { 
var G__9382__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9382 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9383__i = 0, G__9383__a = new Array(arguments.length -  3);
while (G__9383__i < G__9383__a.length) {G__9383__a[G__9383__i] = arguments[G__9383__i + 3]; ++G__9383__i;}
  ds = new cljs.core.IndexedSeq(G__9383__a,0);
} 
return G__9382__delegate.call(this,a,b,c,ds);};
G__9382.cljs$lang$maxFixedArity = 3;
G__9382.cljs$lang$applyTo = (function (arglist__9384){
var a = cljs.core.first(arglist__9384);
arglist__9384 = cljs.core.next(arglist__9384);
var b = cljs.core.first(arglist__9384);
arglist__9384 = cljs.core.next(arglist__9384);
var c = cljs.core.first(arglist__9384);
var ds = cljs.core.rest(arglist__9384);
return G__9382__delegate(a,b,c,ds);
});
G__9382.cljs$core$IFn$_invoke$arity$variadic = G__9382__delegate;
return G__9382;
})()
;
G__9381 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9381__2.call(this,a,b);
case 3:
return G__9381__3.call(this,a,b,c);
default:
var G__9385 = null;
if (arguments.length > 3) {
var G__9386__i = 0, G__9386__a = new Array(arguments.length -  3);
while (G__9386__i < G__9386__a.length) {G__9386__a[G__9386__i] = arguments[G__9386__i + 3]; ++G__9386__i;}
G__9385 = new cljs.core.IndexedSeq(G__9386__a,0);
}
return G__9381__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9381.cljs$lang$maxFixedArity = 3;
G__9381.cljs$lang$applyTo = G__9381__4.cljs$lang$applyTo;
G__9381.cljs$core$IFn$_invoke$arity$2 = G__9381__2;
G__9381.cljs$core$IFn$_invoke$arity$3 = G__9381__3;
G__9381.cljs$core$IFn$_invoke$arity$variadic = G__9381__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9381;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__9417 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__9417) : cljs.core.volatile_BANG_.call(null,G__9417));
})();
return ((function (i){
return (function() {
var G__9447 = null;
var G__9447__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9447__1 = (function (result){
var G__9418 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9418) : rf.call(null,G__9418));
});
var G__9447__2 = (function (result,input){
var G__9419 = result;
var G__9420 = (function (){var G__9421 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__9422 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9421,G__9422) : f.call(null,G__9421,G__9422));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9419,G__9420) : rf.call(null,G__9419,G__9420));
});
G__9447 = function(result,input){
switch(arguments.length){
case 0:
return G__9447__0.call(this);
case 1:
return G__9447__1.call(this,result);
case 2:
return G__9447__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9447.cljs$core$IFn$_invoke$arity$0 = G__9447__0;
G__9447.cljs$core$IFn$_invoke$arity$1 = G__9447__1;
G__9447.cljs$core$IFn$_invoke$arity$2 = G__9447__2;
return G__9447;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___9448 = size;
var i_9449 = (0);
while(true){
if((i_9449 < n__4646__auto___9448)){
cljs.core.chunk_append(b,(function (){var G__9443 = (idx + i_9449);
var G__9444 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9449);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9443,G__9444) : f.call(null,G__9443,G__9444));
})());

var G__9450 = (i_9449 + (1));
i_9449 = G__9450;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9445 = idx;
var G__9446 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9445,G__9446) : f.call(null,G__9445,G__9446));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__9469 = null;
var G__9469__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9469__1 = (function (result){
var G__9463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9463) : rf.call(null,G__9463));
});
var G__9469__2 = (function (result,input){
var v = (function (){var G__9464 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9464) : f.call(null,G__9464));
})();
if((v == null)){
return result;
} else {
var G__9465 = result;
var G__9466 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9465,G__9466) : rf.call(null,G__9465,G__9466));
}
});
G__9469 = function(result,input){
switch(arguments.length){
case 0:
return G__9469__0.call(this);
case 1:
return G__9469__1.call(this,result);
case 2:
return G__9469__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9469.cljs$core$IFn$_invoke$arity$0 = G__9469__0;
G__9469.cljs$core$IFn$_invoke$arity$1 = G__9469__1;
G__9469.cljs$core$IFn$_invoke$arity$2 = G__9469__2;
return G__9469;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___9470 = size;
var i_9471 = (0);
while(true){
if((i_9471 < n__4646__auto___9470)){
var x_9472 = (function (){var G__9467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9471);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9467) : f.call(null,G__9467));
})();
if((x_9472 == null)){
} else {
cljs.core.chunk_append(b,x_9472);
}

var G__9473 = (i_9471 + (1));
i_9471 = G__9473;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9468 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9468) : f.call(null,G__9468));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__9474 = this$__$1;
return goog.getUid(G__9474);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__9475 = cljs.core.seq(self__.watches);
var chunk__9476 = null;
var count__9477 = (0);
var i__9478 = (0);
while(true){
if((i__9478 < count__9477)){
var vec__9479 = chunk__9476.cljs$core$IIndexed$_nth$arity$2(null,i__9478);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9479,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9479,(1),null);
var G__9480_9489 = key;
var G__9481_9490 = this$__$1;
var G__9482_9491 = oldval;
var G__9483_9492 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9480_9489,G__9481_9490,G__9482_9491,G__9483_9492) : f.call(null,G__9480_9489,G__9481_9490,G__9482_9491,G__9483_9492));

var G__9493 = seq__9475;
var G__9494 = chunk__9476;
var G__9495 = count__9477;
var G__9496 = (i__9478 + (1));
seq__9475 = G__9493;
chunk__9476 = G__9494;
count__9477 = G__9495;
i__9478 = G__9496;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9475);
if(temp__4126__auto__){
var seq__9475__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9475__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__9475__$1);
var G__9497 = cljs.core.chunk_rest(seq__9475__$1);
var G__9498 = c__4546__auto__;
var G__9499 = cljs.core.count(c__4546__auto__);
var G__9500 = (0);
seq__9475 = G__9497;
chunk__9476 = G__9498;
count__9477 = G__9499;
i__9478 = G__9500;
continue;
} else {
var vec__9484 = cljs.core.first(seq__9475__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9484,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9484,(1),null);
var G__9485_9501 = key;
var G__9486_9502 = this$__$1;
var G__9487_9503 = oldval;
var G__9488_9504 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9485_9501,G__9486_9502,G__9487_9503,G__9488_9504) : f.call(null,G__9485_9501,G__9486_9502,G__9487_9503,G__9488_9504));

var G__9505 = cljs.core.next(seq__9475__$1);
var G__9506 = null;
var G__9507 = (0);
var G__9508 = (0);
seq__9475 = G__9505;
chunk__9476 = G__9506;
count__9477 = G__9507;
i__9478 = G__9508;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__9512__delegate = function (x,p__9509){
var map__9511 = p__9509;
var map__9511__$1 = ((cljs.core.seq_QMARK_(map__9511))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9511):map__9511);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9511__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9511__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__9512 = function (x,var_args){
var p__9509 = null;
if (arguments.length > 1) {
var G__9513__i = 0, G__9513__a = new Array(arguments.length -  1);
while (G__9513__i < G__9513__a.length) {G__9513__a[G__9513__i] = arguments[G__9513__i + 1]; ++G__9513__i;}
  p__9509 = new cljs.core.IndexedSeq(G__9513__a,0);
} 
return G__9512__delegate.call(this,x,p__9509);};
G__9512.cljs$lang$maxFixedArity = 1;
G__9512.cljs$lang$applyTo = (function (arglist__9514){
var x = cljs.core.first(arglist__9514);
var p__9509 = cljs.core.rest(arglist__9514);
return G__9512__delegate(x,p__9509);
});
G__9512.cljs$core$IFn$_invoke$arity$variadic = G__9512__delegate;
return G__9512;
})()
;
atom = function(x,var_args){
var p__9509 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__9515 = null;
if (arguments.length > 1) {
var G__9516__i = 0, G__9516__a = new Array(arguments.length -  1);
while (G__9516__i < G__9516__a.length) {G__9516__a[G__9516__i] = arguments[G__9516__i + 1]; ++G__9516__i;}
G__9515 = new cljs.core.IndexedSeq(G__9516__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__9519 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9519) : validate.call(null,G__9519));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__9520 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9520) : cljs.core.pr_str.call(null,G__9520));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9527 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9527) : f.call(null,G__9527));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9528 = a.state;
var G__9529 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9528,G__9529) : f.call(null,G__9528,G__9529));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9530 = a.state;
var G__9531 = x;
var G__9532 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9530,G__9531,G__9532) : f.call(null,G__9530,G__9531,G__9532));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__9533__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__9533 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__9534__i = 0, G__9534__a = new Array(arguments.length -  4);
while (G__9534__i < G__9534__a.length) {G__9534__a[G__9534__i] = arguments[G__9534__i + 4]; ++G__9534__i;}
  more = new cljs.core.IndexedSeq(G__9534__a,0);
} 
return G__9533__delegate.call(this,a,f,x,y,more);};
G__9533.cljs$lang$maxFixedArity = 4;
G__9533.cljs$lang$applyTo = (function (arglist__9535){
var a = cljs.core.first(arglist__9535);
arglist__9535 = cljs.core.next(arglist__9535);
var f = cljs.core.first(arglist__9535);
arglist__9535 = cljs.core.next(arglist__9535);
var x = cljs.core.first(arglist__9535);
arglist__9535 = cljs.core.next(arglist__9535);
var y = cljs.core.first(arglist__9535);
var more = cljs.core.rest(arglist__9535);
return G__9533__delegate(a,f,x,y,more);
});
G__9533.cljs$core$IFn$_invoke$arity$variadic = G__9533__delegate;
return G__9533;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__9536 = null;
if (arguments.length > 4) {
var G__9537__i = 0, G__9537__a = new Array(arguments.length -  4);
while (G__9537__i < G__9537__a.length) {G__9537__a[G__9537__i] = arguments[G__9537__i + 4]; ++G__9537__i;}
G__9536 = new cljs.core.IndexedSeq(G__9537__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__9536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9604 = null;
var G__9604__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9604__1 = (function (result){
var G__9571 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9571) : rf.call(null,G__9571));
});
var G__9604__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__9572 = i;
var G__9573 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9572,G__9573) : f.call(null,G__9572,G__9573));
})();
if((v == null)){
return result;
} else {
var G__9574 = result;
var G__9575 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9574,G__9575) : rf.call(null,G__9574,G__9575));
}
});
G__9604 = function(result,input){
switch(arguments.length){
case 0:
return G__9604__0.call(this);
case 1:
return G__9604__1.call(this,result);
case 2:
return G__9604__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9604.cljs$core$IFn$_invoke$arity$0 = G__9604__0;
G__9604.cljs$core$IFn$_invoke$arity$1 = G__9604__1;
G__9604.cljs$core$IFn$_invoke$arity$2 = G__9604__2;
return G__9604;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___9605 = size;
var i_9606 = (0);
while(true){
if((i_9606 < n__4646__auto___9605)){
var x_9607 = (function (){var G__9600 = (idx + i_9606);
var G__9601 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9606);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9600,G__9601) : f.call(null,G__9600,G__9601));
})();
if((x_9607 == null)){
} else {
cljs.core.chunk_append(b,x_9607);
}

var G__9608 = (i_9606 + (1));
i_9606 = G__9608;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9602 = idx;
var G__9603 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9602,G__9603) : f.call(null,G__9602,G__9603));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9822 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9822) : p.call(null,G__9822));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9824 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9824) : p.call(null,G__9824));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__9825 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9825) : p.call(null,G__9825));
} else {
return and__3747__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9827 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9827) : p.call(null,G__9827));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9829 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9829) : p.call(null,G__9829));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__9830 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9830) : p.call(null,G__9830));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9999__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9999 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10000__i = 0, G__10000__a = new Array(arguments.length -  3);
while (G__10000__i < G__10000__a.length) {G__10000__a[G__10000__i] = arguments[G__10000__i + 3]; ++G__10000__i;}
  args = new cljs.core.IndexedSeq(G__10000__a,0);
} 
return G__9999__delegate.call(this,x,y,z,args);};
G__9999.cljs$lang$maxFixedArity = 3;
G__9999.cljs$lang$applyTo = (function (arglist__10001){
var x = cljs.core.first(arglist__10001);
arglist__10001 = cljs.core.next(arglist__10001);
var y = cljs.core.first(arglist__10001);
arglist__10001 = cljs.core.next(arglist__10001);
var z = cljs.core.first(arglist__10001);
var args = cljs.core.rest(arglist__10001);
return G__9999__delegate(x,y,z,args);
});
G__9999.cljs$core$IFn$_invoke$arity$variadic = G__9999__delegate;
return G__9999;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__10002 = null;
if (arguments.length > 3) {
var G__10003__i = 0, G__10003__a = new Array(arguments.length -  3);
while (G__10003__i < G__10003__a.length) {G__10003__a[G__10003__i] = arguments[G__10003__i + 3]; ++G__10003__i;}
G__10002 = new cljs.core.IndexedSeq(G__10003__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9862 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9862) : p1.call(null,G__9862));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__9863 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9863) : p2.call(null,G__9863));
} else {
return and__3747__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9865 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9865) : p1.call(null,G__9865));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9867 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9867) : p1.call(null,G__9867));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__9869 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9869) : p2.call(null,G__9869));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var G__9870 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9870) : p2.call(null,G__9870));
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9872 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9872) : p1.call(null,G__9872));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9874 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9874) : p1.call(null,G__9874));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__9876 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9876) : p1.call(null,G__9876));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__9878 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9878) : p2.call(null,G__9878));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__9880 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9880) : p2.call(null,G__9880));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__9881 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9881) : p2.call(null,G__9881));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__10004__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9609_SHARP_){
var and__3747__auto__ = (function (){var G__9886 = p1__9609_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9886) : p1.call(null,G__9886));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__9887 = p1__9609_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9887) : p2.call(null,G__9887));
} else {
return and__3747__auto__;
}
}),args)));
};
var G__10004 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10005__i = 0, G__10005__a = new Array(arguments.length -  3);
while (G__10005__i < G__10005__a.length) {G__10005__a[G__10005__i] = arguments[G__10005__i + 3]; ++G__10005__i;}
  args = new cljs.core.IndexedSeq(G__10005__a,0);
} 
return G__10004__delegate.call(this,x,y,z,args);};
G__10004.cljs$lang$maxFixedArity = 3;
G__10004.cljs$lang$applyTo = (function (arglist__10006){
var x = cljs.core.first(arglist__10006);
arglist__10006 = cljs.core.next(arglist__10006);
var y = cljs.core.first(arglist__10006);
arglist__10006 = cljs.core.next(arglist__10006);
var z = cljs.core.first(arglist__10006);
var args = cljs.core.rest(arglist__10006);
return G__10004__delegate(x,y,z,args);
});
G__10004.cljs$core$IFn$_invoke$arity$variadic = G__10004__delegate;
return G__10004;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__10007 = null;
if (arguments.length > 3) {
var G__10008__i = 0, G__10008__a = new Array(arguments.length -  3);
while (G__10008__i < G__10008__a.length) {G__10008__a[G__10008__i] = arguments[G__10008__i + 3]; ++G__10008__i;}
G__10007 = new cljs.core.IndexedSeq(G__10008__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9933 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9933) : p1.call(null,G__9933));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9935 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9935) : p2.call(null,G__9935));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__9936 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9936) : p3.call(null,G__9936));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9938 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9938) : p1.call(null,G__9938));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9940 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9940) : p2.call(null,G__9940));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__9942 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9942) : p3.call(null,G__9942));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__9944 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9944) : p1.call(null,G__9944));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__9946 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9946) : p2.call(null,G__9946));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__9947 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9947) : p3.call(null,G__9947));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__9949 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9949) : p1.call(null,G__9949));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9951 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9951) : p2.call(null,G__9951));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__9953 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9953) : p3.call(null,G__9953));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__9955 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9955) : p1.call(null,G__9955));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__9957 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9957) : p2.call(null,G__9957));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var and__3747__auto____$5 = (function (){var G__9959 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9959) : p3.call(null,G__9959));
})();
if(cljs.core.truth_(and__3747__auto____$5)){
var and__3747__auto____$6 = (function (){var G__9961 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9961) : p1.call(null,G__9961));
})();
if(cljs.core.truth_(and__3747__auto____$6)){
var and__3747__auto____$7 = (function (){var G__9963 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9963) : p2.call(null,G__9963));
})();
if(cljs.core.truth_(and__3747__auto____$7)){
var G__9964 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9964) : p3.call(null,G__9964));
} else {
return and__3747__auto____$7;
}
} else {
return and__3747__auto____$6;
}
} else {
return and__3747__auto____$5;
}
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__10009__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9610_SHARP_){
var and__3747__auto__ = (function (){var G__9971 = p1__9610_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9971) : p1.call(null,G__9971));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9973 = p1__9610_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9973) : p2.call(null,G__9973));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__9974 = p1__9610_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9974) : p3.call(null,G__9974));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}),args)));
};
var G__10009 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10010__i = 0, G__10010__a = new Array(arguments.length -  3);
while (G__10010__i < G__10010__a.length) {G__10010__a[G__10010__i] = arguments[G__10010__i + 3]; ++G__10010__i;}
  args = new cljs.core.IndexedSeq(G__10010__a,0);
} 
return G__10009__delegate.call(this,x,y,z,args);};
G__10009.cljs$lang$maxFixedArity = 3;
G__10009.cljs$lang$applyTo = (function (arglist__10011){
var x = cljs.core.first(arglist__10011);
arglist__10011 = cljs.core.next(arglist__10011);
var y = cljs.core.first(arglist__10011);
arglist__10011 = cljs.core.next(arglist__10011);
var z = cljs.core.first(arglist__10011);
var args = cljs.core.rest(arglist__10011);
return G__10009__delegate(x,y,z,args);
});
G__10009.cljs$core$IFn$_invoke$arity$variadic = G__10009__delegate;
return G__10009;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__10012 = null;
if (arguments.length > 3) {
var G__10013__i = 0, G__10013__a = new Array(arguments.length -  3);
while (G__10013__i < G__10013__a.length) {G__10013__a[G__10013__i] = arguments[G__10013__i + 3]; ++G__10013__i;}
G__10012 = new cljs.core.IndexedSeq(G__10013__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__10014__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9611_SHARP_){
var G__9990 = x;
return (p1__9611_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9611_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9990) : p1__9611_SHARP_.call(null,G__9990));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9612_SHARP_){
var and__3747__auto__ = (function (){var G__9992 = x;
return (p1__9612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9992) : p1__9612_SHARP_.call(null,G__9992));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__9993 = y;
return (p1__9612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9993) : p1__9612_SHARP_.call(null,G__9993));
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9613_SHARP_){
var and__3747__auto__ = (function (){var G__9995 = x;
return (p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9995) : p1__9613_SHARP_.call(null,G__9995));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__9997 = y;
return (p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9997) : p1__9613_SHARP_.call(null,G__9997));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__9998 = z;
return (p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9998) : p1__9613_SHARP_.call(null,G__9998));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__10015__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9614_SHARP_){
return cljs.core.every_QMARK_(p1__9614_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10015 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10016__i = 0, G__10016__a = new Array(arguments.length -  3);
while (G__10016__i < G__10016__a.length) {G__10016__a[G__10016__i] = arguments[G__10016__i + 3]; ++G__10016__i;}
  args = new cljs.core.IndexedSeq(G__10016__a,0);
} 
return G__10015__delegate.call(this,x,y,z,args);};
G__10015.cljs$lang$maxFixedArity = 3;
G__10015.cljs$lang$applyTo = (function (arglist__10017){
var x = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var y = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var z = cljs.core.first(arglist__10017);
var args = cljs.core.rest(arglist__10017);
return G__10015__delegate(x,y,z,args);
});
G__10015.cljs$core$IFn$_invoke$arity$variadic = G__10015__delegate;
return G__10015;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__10018 = null;
if (arguments.length > 3) {
var G__10019__i = 0, G__10019__a = new Array(arguments.length -  3);
while (G__10019__i < G__10019__a.length) {G__10019__a[G__10019__i] = arguments[G__10019__i + 3]; ++G__10019__i;}
G__10018 = new cljs.core.IndexedSeq(G__10019__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__10014 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10020__i = 0, G__10020__a = new Array(arguments.length -  3);
while (G__10020__i < G__10020__a.length) {G__10020__a[G__10020__i] = arguments[G__10020__i + 3]; ++G__10020__i;}
  ps = new cljs.core.IndexedSeq(G__10020__a,0);
} 
return G__10014__delegate.call(this,p1,p2,p3,ps);};
G__10014.cljs$lang$maxFixedArity = 3;
G__10014.cljs$lang$applyTo = (function (arglist__10021){
var p1 = cljs.core.first(arglist__10021);
arglist__10021 = cljs.core.next(arglist__10021);
var p2 = cljs.core.first(arglist__10021);
arglist__10021 = cljs.core.next(arglist__10021);
var p3 = cljs.core.first(arglist__10021);
var ps = cljs.core.rest(arglist__10021);
return G__10014__delegate(p1,p2,p3,ps);
});
G__10014.cljs$core$IFn$_invoke$arity$variadic = G__10014__delegate;
return G__10014;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__10022 = null;
if (arguments.length > 3) {
var G__10023__i = 0, G__10023__a = new Array(arguments.length -  3);
while (G__10023__i < G__10023__a.length) {G__10023__a[G__10023__i] = arguments[G__10023__i + 3]; ++G__10023__i;}
G__10022 = new cljs.core.IndexedSeq(G__10023__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10229 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10229) : p.call(null,G__10229));
});
var sp1__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__10231 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10231) : p.call(null,G__10231));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__10232 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10232) : p.call(null,G__10232));
}
});
var sp1__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__10234 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10234) : p.call(null,G__10234));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10236 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10236) : p.call(null,G__10236));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__10237 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10237) : p.call(null,G__10237));
}
}
});
var sp1__4 = (function() { 
var G__10398__delegate = function (x,y,z,args){
var or__3759__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10398 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10399__i = 0, G__10399__a = new Array(arguments.length -  3);
while (G__10399__i < G__10399__a.length) {G__10399__a[G__10399__i] = arguments[G__10399__i + 3]; ++G__10399__i;}
  args = new cljs.core.IndexedSeq(G__10399__a,0);
} 
return G__10398__delegate.call(this,x,y,z,args);};
G__10398.cljs$lang$maxFixedArity = 3;
G__10398.cljs$lang$applyTo = (function (arglist__10400){
var x = cljs.core.first(arglist__10400);
arglist__10400 = cljs.core.next(arglist__10400);
var y = cljs.core.first(arglist__10400);
arglist__10400 = cljs.core.next(arglist__10400);
var z = cljs.core.first(arglist__10400);
var args = cljs.core.rest(arglist__10400);
return G__10398__delegate(x,y,z,args);
});
G__10398.cljs$core$IFn$_invoke$arity$variadic = G__10398__delegate;
return G__10398;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__10401 = null;
if (arguments.length > 3) {
var G__10402__i = 0, G__10402__a = new Array(arguments.length -  3);
while (G__10402__i < G__10402__a.length) {G__10402__a[G__10402__i] = arguments[G__10402__i + 3]; ++G__10402__i;}
G__10401 = new cljs.core.IndexedSeq(G__10402__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3759__auto__ = (function (){var G__10269 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10269) : p1.call(null,G__10269));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__10270 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10270) : p2.call(null,G__10270));
}
});
var sp2__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__10272 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10272) : p1.call(null,G__10272));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10274 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10274) : p1.call(null,G__10274));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__10276 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10276) : p2.call(null,G__10276));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__10277 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10277) : p2.call(null,G__10277));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__10279 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10279) : p1.call(null,G__10279));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10281 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10281) : p1.call(null,G__10281));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__10283 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10283) : p1.call(null,G__10283));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__10285 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10285) : p2.call(null,G__10285));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__10287 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10287) : p2.call(null,G__10287));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__10288 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10288) : p2.call(null,G__10288));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__10403__delegate = function (x,y,z,args){
var or__3759__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__10024_SHARP_){
var or__3759__auto____$1 = (function (){var G__10290 = p1__10024_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10290) : p1.call(null,G__10290));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__10291 = p1__10024_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10291) : p2.call(null,G__10291));
}
});})(or__3759__auto__))
,args);
}
};
var G__10403 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10404__i = 0, G__10404__a = new Array(arguments.length -  3);
while (G__10404__i < G__10404__a.length) {G__10404__a[G__10404__i] = arguments[G__10404__i + 3]; ++G__10404__i;}
  args = new cljs.core.IndexedSeq(G__10404__a,0);
} 
return G__10403__delegate.call(this,x,y,z,args);};
G__10403.cljs$lang$maxFixedArity = 3;
G__10403.cljs$lang$applyTo = (function (arglist__10405){
var x = cljs.core.first(arglist__10405);
arglist__10405 = cljs.core.next(arglist__10405);
var y = cljs.core.first(arglist__10405);
arglist__10405 = cljs.core.next(arglist__10405);
var z = cljs.core.first(arglist__10405);
var args = cljs.core.rest(arglist__10405);
return G__10403__delegate(x,y,z,args);
});
G__10403.cljs$core$IFn$_invoke$arity$variadic = G__10403__delegate;
return G__10403;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__10406 = null;
if (arguments.length > 3) {
var G__10407__i = 0, G__10407__a = new Array(arguments.length -  3);
while (G__10407__i < G__10407__a.length) {G__10407__a[G__10407__i] = arguments[G__10407__i + 3]; ++G__10407__i;}
G__10406 = new cljs.core.IndexedSeq(G__10407__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3759__auto__ = (function (){var G__10337 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10337) : p1.call(null,G__10337));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10339 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10339) : p2.call(null,G__10339));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__10340 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10340) : p3.call(null,G__10340));
}
}
});
var sp3__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__10342 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10342) : p1.call(null,G__10342));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10344 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10344) : p2.call(null,G__10344));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__10346 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10346) : p3.call(null,G__10346));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__10348 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10348) : p1.call(null,G__10348));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__10350 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10350) : p2.call(null,G__10350));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__10351 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10351) : p3.call(null,G__10351));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__10353 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10353) : p1.call(null,G__10353));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10355 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10355) : p2.call(null,G__10355));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__10357 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10357) : p3.call(null,G__10357));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__10359 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10359) : p1.call(null,G__10359));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__10361 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10361) : p2.call(null,G__10361));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var or__3759__auto____$5 = (function (){var G__10363 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10363) : p3.call(null,G__10363));
})();
if(cljs.core.truth_(or__3759__auto____$5)){
return or__3759__auto____$5;
} else {
var or__3759__auto____$6 = (function (){var G__10365 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10365) : p1.call(null,G__10365));
})();
if(cljs.core.truth_(or__3759__auto____$6)){
return or__3759__auto____$6;
} else {
var or__3759__auto____$7 = (function (){var G__10367 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10367) : p2.call(null,G__10367));
})();
if(cljs.core.truth_(or__3759__auto____$7)){
return or__3759__auto____$7;
} else {
var G__10368 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10368) : p3.call(null,G__10368));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__10408__delegate = function (x,y,z,args){
var or__3759__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__10025_SHARP_){
var or__3759__auto____$1 = (function (){var G__10370 = p1__10025_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10370) : p1.call(null,G__10370));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__10372 = p1__10025_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10372) : p2.call(null,G__10372));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__10373 = p1__10025_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10373) : p3.call(null,G__10373));
}
}
});})(or__3759__auto__))
,args);
}
};
var G__10408 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10409__i = 0, G__10409__a = new Array(arguments.length -  3);
while (G__10409__i < G__10409__a.length) {G__10409__a[G__10409__i] = arguments[G__10409__i + 3]; ++G__10409__i;}
  args = new cljs.core.IndexedSeq(G__10409__a,0);
} 
return G__10408__delegate.call(this,x,y,z,args);};
G__10408.cljs$lang$maxFixedArity = 3;
G__10408.cljs$lang$applyTo = (function (arglist__10410){
var x = cljs.core.first(arglist__10410);
arglist__10410 = cljs.core.next(arglist__10410);
var y = cljs.core.first(arglist__10410);
arglist__10410 = cljs.core.next(arglist__10410);
var z = cljs.core.first(arglist__10410);
var args = cljs.core.rest(arglist__10410);
return G__10408__delegate(x,y,z,args);
});
G__10408.cljs$core$IFn$_invoke$arity$variadic = G__10408__delegate;
return G__10408;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__10411 = null;
if (arguments.length > 3) {
var G__10412__i = 0, G__10412__a = new Array(arguments.length -  3);
while (G__10412__i < G__10412__a.length) {G__10412__a[G__10412__i] = arguments[G__10412__i + 3]; ++G__10412__i;}
G__10411 = new cljs.core.IndexedSeq(G__10412__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__10413__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10026_SHARP_){
var G__10389 = x;
return (p1__10026_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10026_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10389) : p1__10026_SHARP_.call(null,G__10389));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10027_SHARP_){
var or__3759__auto__ = (function (){var G__10391 = x;
return (p1__10027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10391) : p1__10027_SHARP_.call(null,G__10391));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__10392 = y;
return (p1__10027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10392) : p1__10027_SHARP_.call(null,G__10392));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10028_SHARP_){
var or__3759__auto__ = (function (){var G__10394 = x;
return (p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10394) : p1__10028_SHARP_.call(null,G__10394));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__10396 = y;
return (p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10396) : p1__10028_SHARP_.call(null,G__10396));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__10397 = z;
return (p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10397) : p1__10028_SHARP_.call(null,G__10397));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__10414__delegate = function (x,y,z,args){
var or__3759__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__,ps__$1){
return (function (p1__10029_SHARP_){
return cljs.core.some(p1__10029_SHARP_,args);
});})(or__3759__auto__,ps__$1))
,ps__$1);
}
};
var G__10414 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10415__i = 0, G__10415__a = new Array(arguments.length -  3);
while (G__10415__i < G__10415__a.length) {G__10415__a[G__10415__i] = arguments[G__10415__i + 3]; ++G__10415__i;}
  args = new cljs.core.IndexedSeq(G__10415__a,0);
} 
return G__10414__delegate.call(this,x,y,z,args);};
G__10414.cljs$lang$maxFixedArity = 3;
G__10414.cljs$lang$applyTo = (function (arglist__10416){
var x = cljs.core.first(arglist__10416);
arglist__10416 = cljs.core.next(arglist__10416);
var y = cljs.core.first(arglist__10416);
arglist__10416 = cljs.core.next(arglist__10416);
var z = cljs.core.first(arglist__10416);
var args = cljs.core.rest(arglist__10416);
return G__10414__delegate(x,y,z,args);
});
G__10414.cljs$core$IFn$_invoke$arity$variadic = G__10414__delegate;
return G__10414;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__10417 = null;
if (arguments.length > 3) {
var G__10418__i = 0, G__10418__a = new Array(arguments.length -  3);
while (G__10418__i < G__10418__a.length) {G__10418__a[G__10418__i] = arguments[G__10418__i + 3]; ++G__10418__i;}
G__10417 = new cljs.core.IndexedSeq(G__10418__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__10413 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10419__i = 0, G__10419__a = new Array(arguments.length -  3);
while (G__10419__i < G__10419__a.length) {G__10419__a[G__10419__i] = arguments[G__10419__i + 3]; ++G__10419__i;}
  ps = new cljs.core.IndexedSeq(G__10419__a,0);
} 
return G__10413__delegate.call(this,p1,p2,p3,ps);};
G__10413.cljs$lang$maxFixedArity = 3;
G__10413.cljs$lang$applyTo = (function (arglist__10420){
var p1 = cljs.core.first(arglist__10420);
arglist__10420 = cljs.core.next(arglist__10420);
var p2 = cljs.core.first(arglist__10420);
arglist__10420 = cljs.core.next(arglist__10420);
var p3 = cljs.core.first(arglist__10420);
var ps = cljs.core.rest(arglist__10420);
return G__10413__delegate(p1,p2,p3,ps);
});
G__10413.cljs$core$IFn$_invoke$arity$variadic = G__10413__delegate;
return G__10413;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__10421 = null;
if (arguments.length > 3) {
var G__10422__i = 0, G__10422__a = new Array(arguments.length -  3);
while (G__10422__i < G__10422__a.length) {G__10422__a[G__10422__i] = arguments[G__10422__i + 3]; ++G__10422__i;}
G__10421 = new cljs.core.IndexedSeq(G__10422__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__10477 = null;
var G__10477__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10477__1 = (function (result){
var G__10463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10463) : rf.call(null,G__10463));
});
var G__10477__2 = (function (result,input){
var G__10464 = result;
var G__10465 = (function (){var G__10466 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10466) : f.call(null,G__10466));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10464,G__10465) : rf.call(null,G__10464,G__10465));
});
var G__10477__3 = (function() { 
var G__10478__delegate = function (result,input,inputs){
var G__10467 = result;
var G__10468 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10467,G__10468) : rf.call(null,G__10467,G__10468));
};
var G__10478 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__10479__i = 0, G__10479__a = new Array(arguments.length -  2);
while (G__10479__i < G__10479__a.length) {G__10479__a[G__10479__i] = arguments[G__10479__i + 2]; ++G__10479__i;}
  inputs = new cljs.core.IndexedSeq(G__10479__a,0);
} 
return G__10478__delegate.call(this,result,input,inputs);};
G__10478.cljs$lang$maxFixedArity = 2;
G__10478.cljs$lang$applyTo = (function (arglist__10480){
var result = cljs.core.first(arglist__10480);
arglist__10480 = cljs.core.next(arglist__10480);
var input = cljs.core.first(arglist__10480);
var inputs = cljs.core.rest(arglist__10480);
return G__10478__delegate(result,input,inputs);
});
G__10478.cljs$core$IFn$_invoke$arity$variadic = G__10478__delegate;
return G__10478;
})()
;
G__10477 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__10477__0.call(this);
case 1:
return G__10477__1.call(this,result);
case 2:
return G__10477__2.call(this,result,input);
default:
var G__10481 = null;
if (arguments.length > 2) {
var G__10482__i = 0, G__10482__a = new Array(arguments.length -  2);
while (G__10482__i < G__10482__a.length) {G__10482__a[G__10482__i] = arguments[G__10482__i + 2]; ++G__10482__i;}
G__10481 = new cljs.core.IndexedSeq(G__10482__a,0);
}
return G__10477__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__10481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10477.cljs$lang$maxFixedArity = 2;
G__10477.cljs$lang$applyTo = G__10477__3.cljs$lang$applyTo;
G__10477.cljs$core$IFn$_invoke$arity$0 = G__10477__0;
G__10477.cljs$core$IFn$_invoke$arity$1 = G__10477__1;
G__10477.cljs$core$IFn$_invoke$arity$2 = G__10477__2;
G__10477.cljs$core$IFn$_invoke$arity$variadic = G__10477__3.cljs$core$IFn$_invoke$arity$variadic;
return G__10477;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___10483 = size;
var i_10484 = (0);
while(true){
if((i_10484 < n__4646__auto___10483)){
cljs.core.chunk_append(b,(function (){var G__10469 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10484);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10469) : f.call(null,G__10469));
})());

var G__10485 = (i_10484 + (1));
i_10484 = G__10485;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10470 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10470) : f.call(null,G__10470));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__10471 = cljs.core.first(s1);
var G__10472 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10471,G__10472) : f.call(null,G__10471,G__10472));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__10473 = cljs.core.first(s1);
var G__10474 = cljs.core.first(s2);
var G__10475 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10473,G__10474,G__10475) : f.call(null,G__10473,G__10474,G__10475));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__10486__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__10423_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10423_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__10486 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10487__i = 0, G__10487__a = new Array(arguments.length -  4);
while (G__10487__i < G__10487__a.length) {G__10487__a[G__10487__i] = arguments[G__10487__i + 4]; ++G__10487__i;}
  colls = new cljs.core.IndexedSeq(G__10487__a,0);
} 
return G__10486__delegate.call(this,f,c1,c2,c3,colls);};
G__10486.cljs$lang$maxFixedArity = 4;
G__10486.cljs$lang$applyTo = (function (arglist__10488){
var f = cljs.core.first(arglist__10488);
arglist__10488 = cljs.core.next(arglist__10488);
var c1 = cljs.core.first(arglist__10488);
arglist__10488 = cljs.core.next(arglist__10488);
var c2 = cljs.core.first(arglist__10488);
arglist__10488 = cljs.core.next(arglist__10488);
var c3 = cljs.core.first(arglist__10488);
var colls = cljs.core.rest(arglist__10488);
return G__10486__delegate(f,c1,c2,c3,colls);
});
G__10486.cljs$core$IFn$_invoke$arity$variadic = G__10486__delegate;
return G__10486;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__10489 = null;
if (arguments.length > 4) {
var G__10490__i = 0, G__10490__a = new Array(arguments.length -  4);
while (G__10490__i < G__10490__a.length) {G__10490__a[G__10490__i] = arguments[G__10490__i + 4]; ++G__10490__i;}
G__10489 = new cljs.core.IndexedSeq(G__10490__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10499 = null;
var G__10499__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10499__1 = (function (result){
var G__10496 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10496) : rf.call(null,G__10496));
});
var G__10499__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__10497 = result;
var G__10498 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10497,G__10498) : rf.call(null,G__10497,G__10498));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__10499 = function(result,input){
switch(arguments.length){
case 0:
return G__10499__0.call(this);
case 1:
return G__10499__1.call(this,result);
case 2:
return G__10499__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10499.cljs$core$IFn$_invoke$arity$0 = G__10499__0;
G__10499.cljs$core$IFn$_invoke$arity$1 = G__10499__1;
G__10499.cljs$core$IFn$_invoke$arity$2 = G__10499__2;
return G__10499;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10506 = null;
var G__10506__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10506__1 = (function (result){
var G__10503 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10503) : rf.call(null,G__10503));
});
var G__10506__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__10504 = result;
var G__10505 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10504,G__10505) : rf.call(null,G__10504,G__10505));
}
});
G__10506 = function(result,input){
switch(arguments.length){
case 0:
return G__10506__0.call(this);
case 1:
return G__10506__1.call(this,result);
case 2:
return G__10506__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10506.cljs$core$IFn$_invoke$arity$0 = G__10506__0;
G__10506.cljs$core$IFn$_invoke$arity$1 = G__10506__1;
G__10506.cljs$core$IFn$_invoke$arity$2 = G__10506__2;
return G__10506;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__10507 = (n__$1 - (1));
var G__10508 = cljs.core.rest(s);
n__$1 = G__10507;
coll__$1 = G__10508;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__10511 = cljs.core.next(s);
var G__10512 = cljs.core.next(lead);
s = G__10511;
lead = G__10512;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__10525 = null;
var G__10525__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10525__1 = (function (result){
var G__10519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10519) : rf.call(null,G__10519));
});
var G__10525__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3747__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3747__auto__)){
var G__10520 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10520) : pred.call(null,G__10520));
} else {
return and__3747__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__10521 = result;
var G__10522 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10521,G__10522) : rf.call(null,G__10521,G__10522));
}
});
G__10525 = function(result,input){
switch(arguments.length){
case 0:
return G__10525__0.call(this);
case 1:
return G__10525__1.call(this,result);
case 2:
return G__10525__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10525.cljs$core$IFn$_invoke$arity$0 = G__10525__0;
G__10525.cljs$core$IFn$_invoke$arity$1 = G__10525__1;
G__10525.cljs$core$IFn$_invoke$arity$2 = G__10525__2;
return G__10525;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3747__auto__ = s;
if(and__3747__auto__){
var G__10524 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10524) : pred__$1.call(null,G__10524));
} else {
return and__3747__auto__;
}
})())){
var G__10526 = pred__$1;
var G__10527 = cljs.core.rest(s);
pred__$1 = G__10526;
coll__$1 = G__10527;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__10536 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10536) : f.call(null,G__10536));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__10539__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__10539 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__10540__i = 0, G__10540__a = new Array(arguments.length -  2);
while (G__10540__i < G__10540__a.length) {G__10540__a[G__10540__i] = arguments[G__10540__i + 2]; ++G__10540__i;}
  colls = new cljs.core.IndexedSeq(G__10540__a,0);
} 
return G__10539__delegate.call(this,c1,c2,colls);};
G__10539.cljs$lang$maxFixedArity = 2;
G__10539.cljs$lang$applyTo = (function (arglist__10541){
var c1 = cljs.core.first(arglist__10541);
arglist__10541 = cljs.core.next(arglist__10541);
var c2 = cljs.core.first(arglist__10541);
var colls = cljs.core.rest(arglist__10541);
return G__10539__delegate(c1,c2,colls);
});
G__10539.cljs$core$IFn$_invoke$arity$variadic = G__10539__delegate;
return G__10539;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__10542 = null;
if (arguments.length > 2) {
var G__10543__i = 0, G__10543__a = new Array(arguments.length -  2);
while (G__10543__i < G__10543__a.length) {G__10543__a[G__10543__i] = arguments[G__10543__i + 2]; ++G__10543__i;}
G__10542 = new cljs.core.IndexedSeq(G__10543__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__10542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__10558 = null;
var G__10558__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10558__1 = (function (result){
var G__10551 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10551) : rf.call(null,G__10551));
});
var G__10558__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__10552 = result;
var G__10553 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10552,G__10553) : rf.call(null,G__10552,G__10553));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__10554 = sepr;
var G__10555 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10554,G__10555) : rf.call(null,G__10554,G__10555));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__10556 = result;
var G__10557 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10556,G__10557) : rf.call(null,G__10556,G__10557));
}
});
G__10558 = function(result,input){
switch(arguments.length){
case 0:
return G__10558__0.call(this);
case 1:
return G__10558__1.call(this,result);
case 2:
return G__10558__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10558.cljs$core$IFn$_invoke$arity$0 = G__10558__0;
G__10558.cljs$core$IFn$_invoke$arity$1 = G__10558__1;
G__10558.cljs$core$IFn$_invoke$arity$2 = G__10558__2;
return G__10558;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__10567__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__10567 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__10568__i = 0, G__10568__a = new Array(arguments.length -  1);
while (G__10568__i < G__10568__a.length) {G__10568__a[G__10568__i] = arguments[G__10568__i + 1]; ++G__10568__i;}
  colls = new cljs.core.IndexedSeq(G__10568__a,0);
} 
return G__10567__delegate.call(this,f,colls);};
G__10567.cljs$lang$maxFixedArity = 1;
G__10567.cljs$lang$applyTo = (function (arglist__10569){
var f = cljs.core.first(arglist__10569);
var colls = cljs.core.rest(arglist__10569);
return G__10567__delegate(f,colls);
});
G__10567.cljs$core$IFn$_invoke$arity$variadic = G__10567__delegate;
return G__10567;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__10570 = null;
if (arguments.length > 1) {
var G__10571__i = 0, G__10571__a = new Array(arguments.length -  1);
while (G__10571__i < G__10571__a.length) {G__10571__a[G__10571__i] = arguments[G__10571__i + 1]; ++G__10571__i;}
G__10570 = new cljs.core.IndexedSeq(G__10571__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__10590 = null;
var G__10590__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10590__1 = (function (result){
var G__10584 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10584) : rf.call(null,G__10584));
});
var G__10590__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10585 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10585) : pred.call(null,G__10585));
})())){
var G__10586 = result;
var G__10587 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10586,G__10587) : rf.call(null,G__10586,G__10587));
} else {
return result;
}
});
G__10590 = function(result,input){
switch(arguments.length){
case 0:
return G__10590__0.call(this);
case 1:
return G__10590__1.call(this,result);
case 2:
return G__10590__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10590.cljs$core$IFn$_invoke$arity$0 = G__10590__0;
G__10590.cljs$core$IFn$_invoke$arity$1 = G__10590__1;
G__10590.cljs$core$IFn$_invoke$arity$2 = G__10590__2;
return G__10590;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___10591 = size;
var i_10592 = (0);
while(true){
if((i_10592 < n__4646__auto___10591)){
if(cljs.core.truth_((function (){var G__10588 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10592);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10588) : pred.call(null,G__10588));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10592));
} else {
}

var G__10593 = (i_10592 + (1));
i_10592 = G__10593;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__10589 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10589) : pred.call(null,G__10589));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__10600 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10600) : branch_QMARK_.call(null,G__10600));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__10601 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10601) : children.call(null,G__10601));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10602_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__10602_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10605 = to;
if(G__10605){
var bit__4433__auto__ = (G__10605.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__10605.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__10606 = to;
if(G__10606){
var bit__4433__auto__ = (G__10606.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__10606.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10608 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10608) : f.call(null,G__10608));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__10609__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10609 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10610__i = 0, G__10610__a = new Array(arguments.length -  4);
while (G__10610__i < G__10610__a.length) {G__10610__a[G__10610__i] = arguments[G__10610__i + 4]; ++G__10610__i;}
  colls = new cljs.core.IndexedSeq(G__10610__a,0);
} 
return G__10609__delegate.call(this,f,c1,c2,c3,colls);};
G__10609.cljs$lang$maxFixedArity = 4;
G__10609.cljs$lang$applyTo = (function (arglist__10611){
var f = cljs.core.first(arglist__10611);
arglist__10611 = cljs.core.next(arglist__10611);
var c1 = cljs.core.first(arglist__10611);
arglist__10611 = cljs.core.next(arglist__10611);
var c2 = cljs.core.first(arglist__10611);
arglist__10611 = cljs.core.next(arglist__10611);
var c3 = cljs.core.first(arglist__10611);
var colls = cljs.core.rest(arglist__10611);
return G__10609__delegate(f,c1,c2,c3,colls);
});
G__10609.cljs$core$IFn$_invoke$arity$variadic = G__10609__delegate;
return G__10609;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__10612 = null;
if (arguments.length > 4) {
var G__10613__i = 0, G__10613__a = new Array(arguments.length -  4);
while (G__10613__i < G__10613__a.length) {G__10613__a[G__10613__i] = arguments[G__10613__i + 4]; ++G__10613__i;}
G__10612 = new cljs.core.IndexedSeq(G__10613__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10615 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10615) : pred.call(null,G__10615));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10630 = m__$1;
if(G__10630){
var bit__4440__auto__ = (G__10630.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4440__auto__) || (G__10630.cljs$core$ILookup$)){
return true;
} else {
if((!G__10630.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10630);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10630);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10631 = sentinel;
var G__10632 = m__$2;
var G__10633 = cljs.core.next(ks__$1);
sentinel = G__10631;
m__$1 = G__10632;
ks__$1 = G__10633;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__10634,v){
var vec__10639 = p__10634;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10639,(0),null);
var ks = cljs.core.nthnext(vec__10639,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__10640,f){
var vec__10678 = p__10640;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10678,(0),null);
var ks = cljs.core.nthnext(vec__10678,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10679 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10679) : f.call(null,G__10679));
})());
}
});
var update_in__4 = (function (m,p__10641,f,a){
var vec__10680 = p__10641;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10680,(0),null);
var ks = cljs.core.nthnext(vec__10680,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10681 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10682 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10681,G__10682) : f.call(null,G__10681,G__10682));
})());
}
});
var update_in__5 = (function (m,p__10642,f,a,b){
var vec__10683 = p__10642;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10683,(0),null);
var ks = cljs.core.nthnext(vec__10683,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10684 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10685 = a;
var G__10686 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10684,G__10685,G__10686) : f.call(null,G__10684,G__10685,G__10686));
})());
}
});
var update_in__6 = (function (m,p__10643,f,a,b,c){
var vec__10687 = p__10643;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10687,(0),null);
var ks = cljs.core.nthnext(vec__10687,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10688 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10689 = a;
var G__10690 = b;
var G__10691 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10688,G__10689,G__10690,G__10691) : f.call(null,G__10688,G__10689,G__10690,G__10691));
})());
}
});
var update_in__7 = (function() { 
var G__10693__delegate = function (m,p__10644,f,a,b,c,args){
var vec__10692 = p__10644;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10692,(0),null);
var ks = cljs.core.nthnext(vec__10692,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10693 = function (m,p__10644,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10694__i = 0, G__10694__a = new Array(arguments.length -  6);
while (G__10694__i < G__10694__a.length) {G__10694__a[G__10694__i] = arguments[G__10694__i + 6]; ++G__10694__i;}
  args = new cljs.core.IndexedSeq(G__10694__a,0);
} 
return G__10693__delegate.call(this,m,p__10644,f,a,b,c,args);};
G__10693.cljs$lang$maxFixedArity = 6;
G__10693.cljs$lang$applyTo = (function (arglist__10695){
var m = cljs.core.first(arglist__10695);
arglist__10695 = cljs.core.next(arglist__10695);
var p__10644 = cljs.core.first(arglist__10695);
arglist__10695 = cljs.core.next(arglist__10695);
var f = cljs.core.first(arglist__10695);
arglist__10695 = cljs.core.next(arglist__10695);
var a = cljs.core.first(arglist__10695);
arglist__10695 = cljs.core.next(arglist__10695);
var b = cljs.core.first(arglist__10695);
arglist__10695 = cljs.core.next(arglist__10695);
var c = cljs.core.first(arglist__10695);
var args = cljs.core.rest(arglist__10695);
return G__10693__delegate(m,p__10644,f,a,b,c,args);
});
G__10693.cljs$core$IFn$_invoke$arity$variadic = G__10693__delegate;
return G__10693;
})()
;
update_in = function(m,p__10644,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__10644,f);
case 4:
return update_in__4.call(this,m,p__10644,f,a);
case 5:
return update_in__5.call(this,m,p__10644,f,a,b);
case 6:
return update_in__6.call(this,m,p__10644,f,a,b,c);
default:
var G__10696 = null;
if (arguments.length > 6) {
var G__10697__i = 0, G__10697__a = new Array(arguments.length -  6);
while (G__10697__i < G__10697__a.length) {G__10697__a[G__10697__i] = arguments[G__10697__i + 6]; ++G__10697__i;}
G__10696 = new cljs.core.IndexedSeq(G__10697__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10644,f,a,b,c, G__10696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10708 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10708) : f.call(null,G__10708));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10709 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10710 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10709,G__10710) : f.call(null,G__10709,G__10710));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10711 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10712 = x;
var G__10713 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10711,G__10712,G__10713) : f.call(null,G__10711,G__10712,G__10713));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10714 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10715 = x;
var G__10716 = y;
var G__10717 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10714,G__10715,G__10716,G__10717) : f.call(null,G__10714,G__10715,G__10716,G__10717));
})());
});
var update__7 = (function() { 
var G__10718__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10718 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10719__i = 0, G__10719__a = new Array(arguments.length -  6);
while (G__10719__i < G__10719__a.length) {G__10719__a[G__10719__i] = arguments[G__10719__i + 6]; ++G__10719__i;}
  more = new cljs.core.IndexedSeq(G__10719__a,0);
} 
return G__10718__delegate.call(this,m,k,f,x,y,z,more);};
G__10718.cljs$lang$maxFixedArity = 6;
G__10718.cljs$lang$applyTo = (function (arglist__10720){
var m = cljs.core.first(arglist__10720);
arglist__10720 = cljs.core.next(arglist__10720);
var k = cljs.core.first(arglist__10720);
arglist__10720 = cljs.core.next(arglist__10720);
var f = cljs.core.first(arglist__10720);
arglist__10720 = cljs.core.next(arglist__10720);
var x = cljs.core.first(arglist__10720);
arglist__10720 = cljs.core.next(arglist__10720);
var y = cljs.core.first(arglist__10720);
arglist__10720 = cljs.core.next(arglist__10720);
var z = cljs.core.first(arglist__10720);
var more = cljs.core.rest(arglist__10720);
return G__10718__delegate(m,k,f,x,y,z,more);
});
G__10718.cljs$core$IFn$_invoke$arity$variadic = G__10718__delegate;
return G__10718;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__10721 = null;
if (arguments.length > 6) {
var G__10722__i = 0, G__10722__a = new Array(arguments.length -  6);
while (G__10722__i < G__10722__a.length) {G__10722__a[G__10722__i] = arguments[G__10722__i + 6]; ++G__10722__i;}
G__10721 = new cljs.core.IndexedSeq(G__10722__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10723 = (ll - (5));
var G__10724 = r;
ll = G__10723;
ret = G__10724;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10729 = cljs.core.pv_aget(node,(0));
var G__10730 = (level - (5));
node = G__10729;
level = G__10730;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10731 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10732 = (level - (5));
node = G__10731;
level = G__10732;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10742 = init__$2;
var G__10743 = (j + i);
var G__10744 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10742,G__10743,G__10744) : f.call(null,G__10742,G__10743,G__10744));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10755 = (j + (1));
var G__10756 = init__$3;
j = G__10755;
init__$2 = G__10756;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10745 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10745) : cljs.core.deref.call(null,G__10745));
} else {
var G__10757 = (i + len);
var G__10758 = init__$2;
i = G__10757;
init__$1 = G__10758;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10746 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10746) : cljs.core.tv_editable_root.call(null,G__10746));
})(),(function (){var G__10747 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10747) : cljs.core.tv_editable_tail.call(null,G__10747));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10748 = init__$2;
var G__10749 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10748,G__10749) : f.call(null,G__10748,G__10749));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10759 = (j + (1));
var G__10760 = init__$3;
j = G__10759;
init__$2 = G__10760;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10750 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10750) : cljs.core.deref.call(null,G__10750));
} else {
var G__10761 = (i + len);
var G__10762 = init__$2;
i = G__10761;
init__$1 = G__10762;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10751 = coll__$1;
var G__10752 = cljs.core.first_array_for_longvec(coll__$1);
var G__10753 = (0);
var G__10754 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10751,G__10752,G__10753,G__10754) : cljs.core.chunked_seq.call(null,G__10751,G__10752,G__10753,G__10754));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4646__auto___10763 = len;
var i_10764 = (0);
while(true){
if((i_10764 < n__4646__auto___10763)){
(new_tail[i_10764] = (self__.tail[i_10764]));

var G__10765 = (i_10764 + (1));
i_10764 = G__10765;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10766 = null;
var G__10766__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10766__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10766 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10766__2.call(this,self__,k);
case 3:
return G__10766__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10766.cljs$core$IFn$_invoke$arity$2 = G__10766__2;
G__10766.cljs$core$IFn$_invoke$arity$3 = G__10766__3;
return G__10766;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10741){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10741)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10767 = (i + (1));
var G__10768 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10767;
out = G__10768;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10769__i = 0, G__10769__a = new Array(arguments.length -  0);
while (G__10769__i < G__10769__a.length) {G__10769__a[G__10769__i] = arguments[G__10769__i + 0]; ++G__10769__i;}
  args = new cljs.core.IndexedSeq(G__10769__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__10770){
var args = cljs.core.seq(arglist__10770);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10771 = self__.vec;
var G__10772 = self__.node;
var G__10773 = self__.i;
var G__10774 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10771,G__10772,G__10773,G__10774) : cljs.core.chunked_seq.call(null,G__10771,G__10772,G__10773,G__10774));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10775 = self__.vec;
var G__10776 = (self__.i + self__.off);
var G__10777 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10775,G__10776,G__10777) : cljs.core.subvec.call(null,G__10775,G__10776,G__10777));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10778 = self__.vec;
var G__10779 = (self__.i + self__.off);
var G__10780 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10778,G__10779,G__10780) : cljs.core.subvec.call(null,G__10778,G__10779,G__10780));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10781 = self__.vec;
var G__10782 = self__.node;
var G__10783 = self__.i;
var G__10784 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10781,G__10782,G__10783,G__10784) : cljs.core.chunked_seq.call(null,G__10781,G__10782,G__10783,G__10784));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10785 = self__.vec;
var G__10786 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10787 = end;
var G__10788 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10785,G__10786,G__10787,G__10788) : cljs.core.chunked_seq.call(null,G__10785,G__10786,G__10787,G__10788));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10789 = self__.vec;
var G__10790 = self__.node;
var G__10791 = self__.i;
var G__10792 = self__.off;
var G__10793 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10789,G__10790,G__10791,G__10792,G__10793) : cljs.core.chunked_seq.call(null,G__10789,G__10790,G__10791,G__10792,G__10793));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10794 = self__.vec;
var G__10795 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10796 = end;
var G__10797 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10794,G__10795,G__10796,G__10797) : cljs.core.chunked_seq.call(null,G__10794,G__10795,G__10796,G__10797));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10799 = self__.meta;
var G__10800 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10801 = self__.start;
var G__10802 = (function (){var x__4076__auto__ = self__.end;
var y__4077__auto__ = (v_pos + (1));
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})();
var G__10803 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10799,G__10800,G__10801,G__10802,G__10803) : cljs.core.build_subvec.call(null,G__10799,G__10800,G__10801,G__10802,G__10803));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10804 = self__.meta;
var G__10805 = self__.v;
var G__10806 = self__.start;
var G__10807 = (self__.end - (1));
var G__10808 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10804,G__10805,G__10806,G__10807,G__10808) : cljs.core.build_subvec.call(null,G__10804,G__10805,G__10806,G__10807,G__10808));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10810 = meta__$1;
var G__10811 = self__.v;
var G__10812 = self__.start;
var G__10813 = self__.end;
var G__10814 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10810,G__10811,G__10812,G__10813,G__10814) : cljs.core.build_subvec.call(null,G__10810,G__10811,G__10812,G__10813,G__10814));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10815 = self__.meta;
var G__10816 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10817 = self__.start;
var G__10818 = (self__.end + (1));
var G__10819 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10815,G__10816,G__10817,G__10818,G__10819) : cljs.core.build_subvec.call(null,G__10815,G__10816,G__10817,G__10818,G__10819));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10820 = null;
var G__10820__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10820__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10820 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10820__2.call(this,self__,k);
case 3:
return G__10820__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10820.cljs$core$IFn$_invoke$arity$2 = G__10820__2;
G__10820.cljs$core$IFn$_invoke$arity$3 = G__10820__3;
return G__10820;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10798){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10798)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10821 = meta;
var G__10822 = v.v;
var G__10823 = (v.start + start);
var G__10824 = (v.start + end);
var G__10825 = __hash;
meta = G__10821;
v = G__10822;
start = G__10823;
end = G__10824;
__hash = G__10825;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10832 = {};
return obj10832;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10840 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10841 = (level - (5));
node = G__10840;
level = G__10841;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10845 = null;
var G__10845__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10845__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10845 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10845__2.call(this,self__,k);
case 3:
return G__10845__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10845.cljs$core$IFn$_invoke$arity$2 = G__10845__2;
G__10845.cljs$core$IFn$_invoke$arity$3 = G__10845__3;
return G__10845;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10842){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10842)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3759__auto__ = self__.front;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = self__.rear;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10846 = (i + incr);
i = G__10846;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10847 = (i + (1));
var G__10848 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10847;
out = G__10848;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj10852 = {};
return obj10852;
})();
var l = ks.length;
var i_10853 = (0);
while(true){
if((i_10853 < l)){
var k_10854 = (ks[i_10853]);
(new_obj[k_10854] = (obj[k_10854]));

var G__10855 = (i_10853 + (1));
i_10853 = G__10855;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__10859 = k;
return goog.isString(G__10859);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10860 = init__$1;
var G__10861 = k;
var G__10862 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10860,G__10861,G__10862) : f.call(null,G__10860,G__10861,G__10862));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10863 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10863) : cljs.core.deref.call(null,G__10863));
} else {
var G__10869 = cljs.core.rest(keys__$1);
var G__10870 = init__$2;
keys__$1 = G__10869;
init__$1 = G__10870;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__10865 = k;
return goog.isString(G__10865);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10866 = k;
return goog.isString(G__10866);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__10868 = k;
return goog.isString(G__10868);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10856_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10856_SHARP_,(self__.strobj[p1__10856_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10871 = null;
var G__10871__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10871__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10871 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10871__2.call(this,self__,k);
case 3:
return G__10871__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10871.cljs$core$IFn$_invoke$arity$2 = G__10871__2;
G__10871.cljs$core$IFn$_invoke$arity$3 = G__10871__3;
return G__10871;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10857){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10857)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10873 = {};
return obj10873;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10874 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10874,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10874,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10875 = (i + (2));
i = G__10875;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10876 = (i + (2));
i = G__10876;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10877 = (i + (2));
i = G__10877;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10878 = (i + (2));
i = G__10878;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10879 = (i + (2));
i = G__10879;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3759__auto__ = (function (){var G__10883 = k;
return goog.isString(G__10883);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10884 = (0);
while(true){
if((i_10884 < l)){
(narr[i_10884] = (arr[i_10884]));

var G__10885 = (i_10884 + (1));
i_10884 = G__10885;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10887 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10887) : cljs.core.keys.call(null,G__10887));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10888 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10888) : cljs.core.vals.call(null,G__10888));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10889 = cljs.core.seq(coll);
var chunk__10890 = null;
var count__10891 = (0);
var i__10892 = (0);
while(true){
if((i__10892 < count__10891)){
var vec__10893 = chunk__10890.cljs$core$IIndexed$_nth$arity$2(null,i__10892);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10893,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10893,(1),null);
var G__10894_10907 = v;
var G__10895_10908 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10894_10907,G__10895_10908) : f.call(null,G__10894_10907,G__10895_10908));

var G__10909 = seq__10889;
var G__10910 = chunk__10890;
var G__10911 = count__10891;
var G__10912 = (i__10892 + (1));
seq__10889 = G__10909;
chunk__10890 = G__10910;
count__10891 = G__10911;
i__10892 = G__10912;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10889);
if(temp__4126__auto__){
var seq__10889__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10889__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10889__$1);
var G__10913 = cljs.core.chunk_rest(seq__10889__$1);
var G__10914 = c__4546__auto__;
var G__10915 = cljs.core.count(c__4546__auto__);
var G__10916 = (0);
seq__10889 = G__10913;
chunk__10890 = G__10914;
count__10891 = G__10915;
i__10892 = G__10916;
continue;
} else {
var vec__10896 = cljs.core.first(seq__10889__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10896,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10896,(1),null);
var G__10897_10917 = v;
var G__10898_10918 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10897_10917,G__10898_10918) : f.call(null,G__10897_10917,G__10898_10918));

var G__10919 = cljs.core.next(seq__10889__$1);
var G__10920 = null;
var G__10921 = (0);
var G__10922 = (0);
seq__10889 = G__10919;
chunk__10890 = G__10920;
count__10891 = G__10921;
i__10892 = G__10922;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10899 = init__$1;
var G__10900 = (self__.arr[i]);
var G__10901 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10899,G__10900,G__10901) : f.call(null,G__10899,G__10900,G__10901));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10902 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10902) : cljs.core.deref.call(null,G__10902));
} else {
var G__10923 = (i + (2));
var G__10924 = init__$2;
i = G__10923;
init__$1 = G__10924;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10903 = other;
if(G__10903){
var bit__4433__auto__ = (G__10903.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4433__auto__) || (G__10903.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10925 = (i + (2));
i = G__10925;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10905 = {};
return obj10905;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10926 = (s + (2));
var G__10927 = d;
s = G__10926;
d = G__10927;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10928 = (s + (2));
var G__10929 = (d + (2));
s = G__10928;
d = G__10929;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10906 = cljs.core.aclone(self__.arr);
(G__10906[(idx + (1))] = v);

return G__10906;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10930 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10931 = cljs.core.next(es);
ret = G__10930;
es = G__10931;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10932 = null;
var G__10932__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10932__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10932 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10932__2.call(this,self__,k);
case 3:
return G__10932__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10932.cljs$core$IFn$_invoke$arity$2 = G__10932__2;
G__10932.cljs$core$IFn$_invoke$arity$3 = G__10932__3;
return G__10932;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10886){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10886)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10933 = (i + (2));
var G__10934 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10933;
ret = G__10934;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10935_10943 = self__.arr;
G__10935_10943.pop();

G__10935_10943.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10936 = self__.len;
var G__10937 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10936,G__10937) : cljs.core.array__GT_transient_hash_map.call(null,G__10936,G__10937));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10938 = o;
if(G__10938){
var bit__4440__auto__ = (G__10938.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__10938.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10938);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10939 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10939) : cljs.core.key.call(null,G__10939));
})(),(function (){var G__10940 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10940) : cljs.core.val.call(null,G__10940));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10944 = cljs.core.next(es);
var G__10945 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10941 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10941) : cljs.core.key.call(null,G__10941));
})(),(function (){var G__10942 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10942) : cljs.core.val.call(null,G__10942));
})());
es = G__10944;
tcoll__$2 = G__10945;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10946 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10947 = (i + (2));
out = G__10946;
i = G__10947;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10950 = cljs.core.aclone(arr);
(G__10950[i] = a);

return G__10950;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10951 = cljs.core.aclone(arr);
(G__10951[i] = a);

(G__10951[j] = b);

return G__10951;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10956 = init__$1;
var G__10957 = k;
var G__10958 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10956,G__10957,G__10958) : f.call(null,G__10956,G__10957,G__10958));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10959 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10959) : cljs.core.deref.call(null,G__10959));
} else {
var G__10960 = (i + (2));
var G__10961 = init__$2;
i = G__10960;
init__$1 = G__10961;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10962 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10962) : cljs.core.create_inode_seq.call(null,G__10962));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10976 = (0);
var j_10977 = (0);
while(true){
if((i_10976 < (32))){
if((((self__.bitmap >>> i_10976) & (1)) === (0))){
var G__10978 = (i_10976 + (1));
var G__10979 = j_10977;
i_10976 = G__10978;
j_10977 = G__10979;
continue;
} else {
(nodes[i_10976] = ((!(((self__.arr[j_10977]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10977])),(self__.arr[j_10977]),(self__.arr[(j_10977 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10977 + (1))])));

var G__10980 = (i_10976 + (1));
var G__10981 = (j_10977 + (2));
i_10976 = G__10980;
j_10977 = G__10981;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10963 = edit__$1;
var G__10964 = (shift + (5));
var G__10965 = key_or_nil;
var G__10966 = val_or_node;
var G__10967 = hash;
var G__10968 = key;
var G__10969 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969) : cljs.core.create_node.call(null,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10982 = (0);
var j_10983 = (0);
while(true){
if((i_10982 < (32))){
if((((self__.bitmap >>> i_10982) & (1)) === (0))){
var G__10984 = (i_10982 + (1));
var G__10985 = j_10983;
i_10982 = G__10984;
j_10983 = G__10985;
continue;
} else {
(nodes[i_10982] = ((!(((self__.arr[j_10983]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10983])),(self__.arr[j_10983]),(self__.arr[(j_10983 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10983 + (1))])));

var G__10986 = (i_10982 + (1));
var G__10987 = (j_10983 + (2));
i_10982 = G__10986;
j_10983 = G__10987;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10970 = (shift + (5));
var G__10971 = key_or_nil;
var G__10972 = val_or_node;
var G__10973 = hash;
var G__10974 = key;
var G__10975 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10970,G__10971,G__10972,G__10973,G__10974,G__10975) : cljs.core.create_node.call(null,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10988 = (i + (1));
var G__10989 = (j + (2));
var G__10990 = (bitmap | ((1) << i));
i = G__10988;
j = G__10989;
bitmap = G__10990;
continue;
} else {
var G__10991 = (i + (1));
var G__10992 = j;
var G__10993 = bitmap;
i = G__10991;
j = G__10992;
bitmap = G__10993;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10994 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10994) : cljs.core.create_array_node_seq.call(null,G__10994));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10995 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10995) : cljs.core.deref.call(null,G__10995));
} else {
var G__10996 = (i + (1));
var G__10997 = init__$2;
i = G__10996;
init__$1 = G__10997;
continue;
}
} else {
var G__10998 = (i + (1));
var G__10999 = init__$1;
i = G__10998;
init__$1 = G__10999;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11000 = (i + (2));
i = G__11000;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11001 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11001) : cljs.core.create_inode_seq.call(null,G__11001));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11002 = self__.nodes;
var G__11003 = (self__.i + (2));
var G__11004 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11002,G__11003,G__11004) : cljs.core.create_inode_seq.call(null,G__11002,G__11003,G__11004));
} else {
var G__11005 = self__.nodes;
var G__11006 = self__.i;
var G__11007 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11005,G__11006,G__11007) : cljs.core.create_inode_seq.call(null,G__11005,G__11006,G__11007));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11011 = (j + (2));
j = G__11011;
continue;
}
} else {
var G__11012 = (j + (2));
j = G__11012;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11013 = null;
var G__11014 = self__.nodes;
var G__11015 = self__.i;
var G__11016 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11013,G__11014,G__11015,G__11016) : cljs.core.create_array_node_seq.call(null,G__11013,G__11014,G__11015,G__11016));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11021 = (j + (1));
j = G__11021;
continue;
}
} else {
var G__11022 = (j + (1));
j = G__11022;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11024 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11024) : cljs.core.keys.call(null,G__11024));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11025 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11025) : cljs.core.vals.call(null,G__11025));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11026 = cljs.core.seq(coll);
var chunk__11027 = null;
var count__11028 = (0);
var i__11029 = (0);
while(true){
if((i__11029 < count__11028)){
var vec__11030 = chunk__11027.cljs$core$IIndexed$_nth$arity$2(null,i__11029);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11030,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11030,(1),null);
var G__11031_11042 = v;
var G__11032_11043 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11031_11042,G__11032_11043) : f.call(null,G__11031_11042,G__11032_11043));

var G__11044 = seq__11026;
var G__11045 = chunk__11027;
var G__11046 = count__11028;
var G__11047 = (i__11029 + (1));
seq__11026 = G__11044;
chunk__11027 = G__11045;
count__11028 = G__11046;
i__11029 = G__11047;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11026);
if(temp__4126__auto__){
var seq__11026__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11026__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11026__$1);
var G__11048 = cljs.core.chunk_rest(seq__11026__$1);
var G__11049 = c__4546__auto__;
var G__11050 = cljs.core.count(c__4546__auto__);
var G__11051 = (0);
seq__11026 = G__11048;
chunk__11027 = G__11049;
count__11028 = G__11050;
i__11029 = G__11051;
continue;
} else {
var vec__11033 = cljs.core.first(seq__11026__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11033,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11033,(1),null);
var G__11034_11052 = v;
var G__11035_11053 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11034_11052,G__11035_11053) : f.call(null,G__11034_11052,G__11035_11053));

var G__11054 = cljs.core.next(seq__11026__$1);
var G__11055 = null;
var G__11056 = (0);
var G__11057 = (0);
seq__11026 = G__11054;
chunk__11027 = G__11055;
count__11028 = G__11056;
i__11029 = G__11057;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11036 = init;
var G__11037 = null;
var G__11038 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11036,G__11037,G__11038) : f.call(null,G__11036,G__11037,G__11038));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11039 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11039) : cljs.core.deref.call(null,G__11039));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11041 = {};
return obj11041;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11058 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11059 = cljs.core.next(es);
ret = G__11058;
es = G__11059;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11060 = null;
var G__11060__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11060__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11060 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11060__2.call(this,self__,k);
case 3:
return G__11060__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11060.cljs$core$IFn$_invoke$arity$2 = G__11060__2;
G__11060.cljs$core$IFn$_invoke$arity$3 = G__11060__3;
return G__11060;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11023){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11023)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11061 = (i + (2));
var G__11062 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11061;
ret = G__11062;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11063 = (i + (1));
var G__11064 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11063;
out = G__11064;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11065 = o;
if(G__11065){
var bit__4440__auto__ = (G__11065.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__11065.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11065.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11065);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11065);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11066 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11066) : cljs.core.key.call(null,G__11066));
})(),(function (){var G__11067 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11067) : cljs.core.val.call(null,G__11067));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11070 = cljs.core.next(es);
var G__11071 = tcoll__$1.assoc_BANG_((function (){var G__11068 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11068) : cljs.core.key.call(null,G__11068));
})(),(function (){var G__11069 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11069) : cljs.core.val.call(null,G__11069));
})());
es = G__11070;
tcoll__$1 = G__11071;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11072 = ((ascending_QMARK_)?t.left:t.right);
var G__11073 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11072;
stack__$1 = G__11073;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11086 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11086) : cljs.core.deref.call(null,G__11086));
} else {
var init__$2 = (function (){var G__11087 = init__$1;
var G__11088 = node.key;
var G__11089 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11087,G__11088,G__11089) : f.call(null,G__11087,G__11088,G__11089));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11090 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11090) : cljs.core.deref.call(null,G__11090));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11091 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11091) : cljs.core.deref.call(null,G__11091));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11093 = null;
var G__11093__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11093__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11093 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11093__2.call(this,self__,k);
case 3:
return G__11093__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11093.cljs$core$IFn$_invoke$arity$2 = G__11093__2;
G__11093.cljs$core$IFn$_invoke$arity$3 = G__11093__3;
return G__11093;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11092){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11092)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11095 = null;
var G__11095__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11095__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11095 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11095__2.call(this,self__,k);
case 3:
return G__11095__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11095.cljs$core$IFn$_invoke$arity$2 = G__11095__2;
G__11095.cljs$core$IFn$_invoke$arity$3 = G__11095__3;
return G__11095;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11094){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11094)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11108 = k;
var G__11109 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11108,G__11109) : comp.call(null,G__11108,G__11109));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11128 = k;
var G__11129 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11128,G__11129) : comp.call(null,G__11128,G__11129));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11140 = k;
var G__11141 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11140,G__11141) : comp.call(null,G__11140,G__11141));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11143 = cljs.core.seq(coll);
var chunk__11144 = null;
var count__11145 = (0);
var i__11146 = (0);
while(true){
if((i__11146 < count__11145)){
var vec__11147 = chunk__11144.cljs$core$IIndexed$_nth$arity$2(null,i__11146);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11147,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11147,(1),null);
var G__11148_11160 = v;
var G__11149_11161 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11148_11160,G__11149_11161) : f.call(null,G__11148_11160,G__11149_11161));

var G__11162 = seq__11143;
var G__11163 = chunk__11144;
var G__11164 = count__11145;
var G__11165 = (i__11146 + (1));
seq__11143 = G__11162;
chunk__11144 = G__11163;
count__11145 = G__11164;
i__11146 = G__11165;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11143);
if(temp__4126__auto__){
var seq__11143__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11143__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11143__$1);
var G__11166 = cljs.core.chunk_rest(seq__11143__$1);
var G__11167 = c__4546__auto__;
var G__11168 = cljs.core.count(c__4546__auto__);
var G__11169 = (0);
seq__11143 = G__11166;
chunk__11144 = G__11167;
count__11145 = G__11168;
i__11146 = G__11169;
continue;
} else {
var vec__11150 = cljs.core.first(seq__11143__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11150,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11150,(1),null);
var G__11151_11170 = v;
var G__11152_11171 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11151_11170,G__11152_11171) : f.call(null,G__11151_11170,G__11152_11171));

var G__11172 = cljs.core.next(seq__11143__$1);
var G__11173 = null;
var G__11174 = (0);
var G__11175 = (0);
seq__11143 = G__11172;
chunk__11144 = G__11173;
count__11145 = G__11174;
i__11146 = G__11175;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11153 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11153) : cljs.core.keys.call(null,G__11153));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11154 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11154) : cljs.core.vals.call(null,G__11154));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11155 = k;
var G__11156 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11155,G__11156) : self__.comp.call(null,G__11155,G__11156));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11176 = t.left;
t = G__11176;
continue;
} else {
var G__11177 = t.right;
t = G__11177;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11178 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11179 = cljs.core.next(es);
ret = G__11178;
es = G__11179;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11180 = null;
var G__11180__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11180__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11180 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11180__2.call(this,self__,k);
case 3:
return G__11180__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11180.cljs$core$IFn$_invoke$arity$2 = G__11180__2;
G__11180.cljs$core$IFn$_invoke$arity$3 = G__11180__3;
return G__11180;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11142){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11142)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11157 = k;
var G__11158 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11157,G__11158) : self__.comp.call(null,G__11157,G__11158));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11181 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11182 = t.left;
stack = G__11181;
t = G__11182;
continue;
} else {
var G__11183 = stack;
var G__11184 = t.right;
stack = G__11183;
t = G__11184;
continue;
}
} else {
if((c > (0))){
var G__11185 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11186 = t.right;
stack = G__11185;
t = G__11186;
continue;
} else {
var G__11187 = stack;
var G__11188 = t.left;
stack = G__11187;
t = G__11188;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11159 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11159) : cljs.core.key.call(null,G__11159));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11189 = cljs.core.nnext(in$);
var G__11190 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11189;
out = G__11190;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11191__i = 0, G__11191__a = new Array(arguments.length -  0);
while (G__11191__i < G__11191__a.length) {G__11191__a[G__11191__i] = arguments[G__11191__i + 0]; ++G__11191__i;}
  keyvals = new cljs.core.IndexedSeq(G__11191__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11192){
var keyvals = cljs.core.seq(arglist__11192);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11193__i = 0, G__11193__a = new Array(arguments.length -  0);
while (G__11193__i < G__11193__a.length) {G__11193__a[G__11193__i] = arguments[G__11193__i + 0]; ++G__11193__i;}
  keyvals = new cljs.core.IndexedSeq(G__11193__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11194){
var keyvals = cljs.core.seq(arglist__11194);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11198 = {};
return obj11198;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11199 = cljs.core.nnext(kvs);
kvs = G__11199;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11200__i = 0, G__11200__a = new Array(arguments.length -  0);
while (G__11200__i < G__11200__a.length) {G__11200__a[G__11200__i] = arguments[G__11200__i + 0]; ++G__11200__i;}
  keyvals = new cljs.core.IndexedSeq(G__11200__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11201){
var keyvals = cljs.core.seq(arglist__11201);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11202 = cljs.core.nnext(in$);
var G__11203 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11202;
out = G__11203;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11204__i = 0, G__11204__a = new Array(arguments.length -  0);
while (G__11204__i < G__11204__a.length) {G__11204__a[G__11204__i] = arguments[G__11204__i + 0]; ++G__11204__i;}
  keyvals = new cljs.core.IndexedSeq(G__11204__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11205){
var keyvals = cljs.core.seq(arglist__11205);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11206 = cljs.core.nnext(in$);
var G__11207 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11206;
out = G__11207;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11208__i = 0, G__11208__a = new Array(arguments.length -  1);
while (G__11208__i < G__11208__a.length) {G__11208__a[G__11208__i] = arguments[G__11208__i + 1]; ++G__11208__i;}
  keyvals = new cljs.core.IndexedSeq(G__11208__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11209){
var comparator = cljs.core.first(arglist__11209);
var keyvals = cljs.core.rest(arglist__11209);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11210 = self__.mseq;
if(G__11210){
var bit__4440__auto__ = (G__11210.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__11210.cljs$core$INext$)){
return true;
} else {
if((!G__11210.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11210);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11210);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11211 = self__.mseq;
if(G__11211){
var bit__4440__auto__ = (G__11211.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__11211.cljs$core$INext$)){
return true;
} else {
if((!G__11211.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11211);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11211);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11212 = self__.mseq;
if(G__11212){
var bit__4440__auto__ = (G__11212.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__11212.cljs$core$INext$)){
return true;
} else {
if((!G__11212.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11212);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11212);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11213 = self__.mseq;
if(G__11213){
var bit__4440__auto__ = (G__11213.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__11213.cljs$core$INext$)){
return true;
} else {
if((!G__11213.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11213);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11213);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11214_SHARP_,p2__11215_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = p1__11214_SHARP_;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11215_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11216__i = 0, G__11216__a = new Array(arguments.length -  0);
while (G__11216__i < G__11216__a.length) {G__11216__a[G__11216__i] = arguments[G__11216__i + 0]; ++G__11216__i;}
  maps = new cljs.core.IndexedSeq(G__11216__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11217){
var maps = cljs.core.seq(arglist__11217);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11220 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11221 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11220,G__11221) : f.call(null,G__11220,G__11221));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3759__auto__ = m1;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11222__i = 0, G__11222__a = new Array(arguments.length -  1);
while (G__11222__i < G__11222__a.length) {G__11222__a[G__11222__i] = arguments[G__11222__i + 1]; ++G__11222__i;}
  maps = new cljs.core.IndexedSeq(G__11222__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11223){
var f = cljs.core.first(arglist__11223);
var maps = cljs.core.rest(arglist__11223);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11224 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11225 = cljs.core.next(keys);
ret = G__11224;
keys = G__11225;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11228 = cljs.core.seq(coll);
var chunk__11229 = null;
var count__11230 = (0);
var i__11231 = (0);
while(true){
if((i__11231 < count__11230)){
var vec__11232 = chunk__11229.cljs$core$IIndexed$_nth$arity$2(null,i__11231);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11232,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11232,(1),null);
var G__11233_11238 = v;
var G__11234_11239 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11233_11238,G__11234_11239) : f.call(null,G__11233_11238,G__11234_11239));

var G__11240 = seq__11228;
var G__11241 = chunk__11229;
var G__11242 = count__11230;
var G__11243 = (i__11231 + (1));
seq__11228 = G__11240;
chunk__11229 = G__11241;
count__11230 = G__11242;
i__11231 = G__11243;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11228);
if(temp__4126__auto__){
var seq__11228__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11228__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11228__$1);
var G__11244 = cljs.core.chunk_rest(seq__11228__$1);
var G__11245 = c__4546__auto__;
var G__11246 = cljs.core.count(c__4546__auto__);
var G__11247 = (0);
seq__11228 = G__11244;
chunk__11229 = G__11245;
count__11230 = G__11246;
i__11231 = G__11247;
continue;
} else {
var vec__11235 = cljs.core.first(seq__11228__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11235,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11235,(1),null);
var G__11236_11248 = v;
var G__11237_11249 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11236_11248,G__11237_11249) : f.call(null,G__11236_11248,G__11237_11249));

var G__11250 = cljs.core.next(seq__11228__$1);
var G__11251 = null;
var G__11252 = (0);
var G__11253 = (0);
seq__11228 = G__11250;
chunk__11229 = G__11251;
count__11230 = G__11252;
i__11231 = G__11253;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11226_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11226_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11254 = null;
var G__11254__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11254__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11254 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11254__2.call(this,self__,k);
case 3:
return G__11254__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11254.cljs$core$IFn$_invoke$arity$2 = G__11254__2;
G__11254.cljs$core$IFn$_invoke$arity$3 = G__11254__3;
return G__11254;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11227){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11227)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11255 = (i + (1));
var G__11256 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11255;
out = G__11256;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11257 = (i + (1));
var G__11258 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11257;
out = G__11258;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11260 = null;
var G__11260__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11260__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11260 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11260__2.call(this,self__,k);
case 3:
return G__11260__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11260.cljs$core$IFn$_invoke$arity$2 = G__11260__2;
G__11260.cljs$core$IFn$_invoke$arity$3 = G__11260__3;
return G__11260;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11259){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11259)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11263 = cljs.core.seq(coll);
var chunk__11264 = null;
var count__11265 = (0);
var i__11266 = (0);
while(true){
if((i__11266 < count__11265)){
var vec__11267 = chunk__11264.cljs$core$IIndexed$_nth$arity$2(null,i__11266);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11267,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11267,(1),null);
var G__11268_11273 = v;
var G__11269_11274 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11268_11273,G__11269_11274) : f.call(null,G__11268_11273,G__11269_11274));

var G__11275 = seq__11263;
var G__11276 = chunk__11264;
var G__11277 = count__11265;
var G__11278 = (i__11266 + (1));
seq__11263 = G__11275;
chunk__11264 = G__11276;
count__11265 = G__11277;
i__11266 = G__11278;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11263);
if(temp__4126__auto__){
var seq__11263__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11263__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11263__$1);
var G__11279 = cljs.core.chunk_rest(seq__11263__$1);
var G__11280 = c__4546__auto__;
var G__11281 = cljs.core.count(c__4546__auto__);
var G__11282 = (0);
seq__11263 = G__11279;
chunk__11264 = G__11280;
count__11265 = G__11281;
i__11266 = G__11282;
continue;
} else {
var vec__11270 = cljs.core.first(seq__11263__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11270,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11270,(1),null);
var G__11271_11283 = v;
var G__11272_11284 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11271_11283,G__11272_11284) : f.call(null,G__11271_11283,G__11272_11284));

var G__11285 = cljs.core.next(seq__11263__$1);
var G__11286 = null;
var G__11287 = (0);
var G__11288 = (0);
seq__11263 = G__11285;
chunk__11264 = G__11286;
count__11265 = G__11287;
i__11266 = G__11288;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11261_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11261_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11289 = null;
var G__11289__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11289__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11289 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11289__2.call(this,self__,k);
case 3:
return G__11289__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11289.cljs$core$IFn$_invoke$arity$2 = G__11289__2;
G__11289.cljs$core$IFn$_invoke$arity$3 = G__11289__3;
return G__11289;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11262){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11262)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4640__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4640__auto__.length)){
var G__11290 = (i + (1));
var G__11291 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11290;
res = G__11291;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11292 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11293 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11292;
out = G__11293;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11294__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11294 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11295__i = 0, G__11295__a = new Array(arguments.length -  0);
while (G__11295__i < G__11295__a.length) {G__11295__a[G__11295__i] = arguments[G__11295__i + 0]; ++G__11295__i;}
  keys = new cljs.core.IndexedSeq(G__11295__a,0);
} 
return G__11294__delegate.call(this,keys);};
G__11294.cljs$lang$maxFixedArity = 0;
G__11294.cljs$lang$applyTo = (function (arglist__11296){
var keys = cljs.core.seq(arglist__11296);
return G__11294__delegate(keys);
});
G__11294.cljs$core$IFn$_invoke$arity$variadic = G__11294__delegate;
return G__11294;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11297 = null;
if (arguments.length > 0) {
var G__11298__i = 0, G__11298__a = new Array(arguments.length -  0);
while (G__11298__i < G__11298__a.length) {G__11298__a[G__11298__i] = arguments[G__11298__i + 0]; ++G__11298__i;}
G__11297 = new cljs.core.IndexedSeq(G__11298__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11299__i = 0, G__11299__a = new Array(arguments.length -  0);
while (G__11299__i < G__11299__a.length) {G__11299__a[G__11299__i] = arguments[G__11299__i + 0]; ++G__11299__i;}
  keys = new cljs.core.IndexedSeq(G__11299__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11300){
var keys = cljs.core.seq(arglist__11300);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11301__i = 0, G__11301__a = new Array(arguments.length -  1);
while (G__11301__i < G__11301__a.length) {G__11301__a[G__11301__i] = arguments[G__11301__i + 1]; ++G__11301__i;}
  keys = new cljs.core.IndexedSeq(G__11301__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11302){
var comparator = cljs.core.first(arglist__11302);
var keys = cljs.core.rest(arglist__11302);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11303_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11303_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11303_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11304_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11304_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11304_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11325 = null;
var G__11325__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11325__1 = (function (result){
var G__11315 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11315) : rf.call(null,G__11315));
});
var G__11325__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11316 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11316) : cljs.core.deref.call(null,G__11316));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11317 = result;
var G__11318 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11317,G__11318) : rf.call(null,G__11317,G__11318));
}
});
G__11325 = function(result,input){
switch(arguments.length){
case 0:
return G__11325__0.call(this);
case 1:
return G__11325__1.call(this,result);
case 2:
return G__11325__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11325.cljs$core$IFn$_invoke$arity$0 = G__11325__0;
G__11325.cljs$core$IFn$_invoke$arity$1 = G__11325__1;
G__11325.cljs$core$IFn$_invoke$arity$2 = G__11325__2;
return G__11325;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11323,seen__$1){
while(true){
var vec__11324 = p__11323;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11324,(0),null);
var xs__$1 = vec__11324;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11326 = cljs.core.rest(s);
var G__11327 = seen__$1;
p__11323 = G__11326;
seen__$1 = G__11327;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11328 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11329 = cljs.core.next(s__$1);
ret = G__11328;
s__$1 = G__11329;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__11331 = x;
if(G__11331){
var bit__4433__auto__ = (G__11331.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__11331.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11332 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11333 = cljs.core.next(ks);
var G__11334 = cljs.core.next(vs);
map = G__11332;
ks = G__11333;
vs = G__11334;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11345 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11345) : k.call(null,G__11345));
})() > (function (){var G__11346 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11346) : k.call(null,G__11346));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11347__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11335_SHARP_,p2__11336_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11335_SHARP_,p2__11336_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11347 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11348__i = 0, G__11348__a = new Array(arguments.length -  3);
while (G__11348__i < G__11348__a.length) {G__11348__a[G__11348__i] = arguments[G__11348__i + 3]; ++G__11348__i;}
  more = new cljs.core.IndexedSeq(G__11348__a,0);
} 
return G__11347__delegate.call(this,k,x,y,more);};
G__11347.cljs$lang$maxFixedArity = 3;
G__11347.cljs$lang$applyTo = (function (arglist__11349){
var k = cljs.core.first(arglist__11349);
arglist__11349 = cljs.core.next(arglist__11349);
var x = cljs.core.first(arglist__11349);
arglist__11349 = cljs.core.next(arglist__11349);
var y = cljs.core.first(arglist__11349);
var more = cljs.core.rest(arglist__11349);
return G__11347__delegate(k,x,y,more);
});
G__11347.cljs$core$IFn$_invoke$arity$variadic = G__11347__delegate;
return G__11347;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11350 = null;
if (arguments.length > 3) {
var G__11351__i = 0, G__11351__a = new Array(arguments.length -  3);
while (G__11351__i < G__11351__a.length) {G__11351__a[G__11351__i] = arguments[G__11351__i + 3]; ++G__11351__i;}
G__11350 = new cljs.core.IndexedSeq(G__11351__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__11362 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11362) : k.call(null,G__11362));
})() < (function (){var G__11363 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11363) : k.call(null,G__11363));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__11364__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11352_SHARP_,p2__11353_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11352_SHARP_,p2__11353_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11364 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11365__i = 0, G__11365__a = new Array(arguments.length -  3);
while (G__11365__i < G__11365__a.length) {G__11365__a[G__11365__i] = arguments[G__11365__i + 3]; ++G__11365__i;}
  more = new cljs.core.IndexedSeq(G__11365__a,0);
} 
return G__11364__delegate.call(this,k,x,y,more);};
G__11364.cljs$lang$maxFixedArity = 3;
G__11364.cljs$lang$applyTo = (function (arglist__11366){
var k = cljs.core.first(arglist__11366);
arglist__11366 = cljs.core.next(arglist__11366);
var x = cljs.core.first(arglist__11366);
arglist__11366 = cljs.core.next(arglist__11366);
var y = cljs.core.first(arglist__11366);
var more = cljs.core.rest(arglist__11366);
return G__11364__delegate(k,x,y,more);
});
G__11364.cljs$core$IFn$_invoke$arity$variadic = G__11364__delegate;
return G__11364;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__11367 = null;
if (arguments.length > 3) {
var G__11368__i = 0, G__11368__a = new Array(arguments.length -  3);
while (G__11368__i < G__11368__a.length) {G__11368__a[G__11368__i] = arguments[G__11368__i + 3]; ++G__11368__i;}
G__11367 = new cljs.core.IndexedSeq(G__11368__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11385 = null;
var G__11385__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11385__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11380 = result;
var G__11381 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11380,G__11381) : rf.call(null,G__11380,G__11381));
})());
})());
var G__11382 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11382) : rf.call(null,G__11382));
});
var G__11385__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11383 = result;
var G__11384 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11383,G__11384) : rf.call(null,G__11383,G__11384));
} else {
return result;
}
});
G__11385 = function(result,input){
switch(arguments.length){
case 0:
return G__11385__0.call(this);
case 1:
return G__11385__1.call(this,result);
case 2:
return G__11385__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11385.cljs$core$IFn$_invoke$arity$0 = G__11385__0;
G__11385.cljs$core$IFn$_invoke$arity$1 = G__11385__1;
G__11385.cljs$core$IFn$_invoke$arity$2 = G__11385__2;
return G__11385;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11398 = null;
var G__11398__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11398__1 = (function (result){
var G__11393 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11393) : rf.call(null,G__11393));
});
var G__11398__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11394 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11394) : pred.call(null,G__11394));
})())){
var G__11395 = result;
var G__11396 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11395,G__11396) : rf.call(null,G__11395,G__11396));
} else {
return cljs.core.reduced(result);
}
});
G__11398 = function(result,input){
switch(arguments.length){
case 0:
return G__11398__0.call(this);
case 1:
return G__11398__1.call(this,result);
case 2:
return G__11398__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11398.cljs$core$IFn$_invoke$arity$0 = G__11398__0;
G__11398.cljs$core$IFn$_invoke$arity$1 = G__11398__1;
G__11398.cljs$core$IFn$_invoke$arity$2 = G__11398__2;
return G__11398;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__11397 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11397) : pred.call(null,G__11397));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11403 = (function (){var G__11405 = cljs.core._entry_key(sc,e);
var G__11406 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11405,G__11406) : comp.call(null,G__11405,G__11406));
})();
var G__11404 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11403,G__11404) : test.call(null,G__11403,G__11404));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11410 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11410,(0),null);
var s = vec__11410;
if(cljs.core.truth_((function (){var G__11411 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11411) : include.call(null,G__11411));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11412 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11412,(0),null);
var s = vec__11412;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11416 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11416,(0),null);
var s = vec__11416;
if(cljs.core.truth_((function (){var G__11417 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11417) : include.call(null,G__11417));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11418 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11418,(0),null);
var s = vec__11418;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__11419 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11419) : Math.ceil.call(null,G__11419));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__11420 = ret;
var G__11421 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11420,G__11421) : f.call(null,G__11420,G__11421));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__11422 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11422) : cljs.core.deref.call(null,G__11422));
} else {
var G__11423 = (i + self__.step);
var G__11424 = ret__$1;
i = G__11423;
ret = G__11424;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__11442 = null;
var G__11442__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11442__1 = (function (result){
var G__11439 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11439) : rf.call(null,G__11439));
});
var G__11442__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__11440 = result;
var G__11441 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11440,G__11441) : rf.call(null,G__11440,G__11441));
} else {
return result;
}
});
G__11442 = function(result,input){
switch(arguments.length){
case 0:
return G__11442__0.call(this);
case 1:
return G__11442__1.call(this,result);
case 2:
return G__11442__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11442.cljs$core$IFn$_invoke$arity$0 = G__11442__0;
G__11442.cljs$core$IFn$_invoke$arity$1 = G__11442__1;
G__11442.cljs$core$IFn$_invoke$arity$2 = G__11442__2;
return G__11442;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__11464 = null;
var G__11464__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11464__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11455 = result;
var G__11456 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11455,G__11456) : rf.call(null,G__11455,G__11456));
})());
})());
var G__11457 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11457) : rf.call(null,G__11457));
});
var G__11464__2 = (function (result,input){
var pval = (function (){var G__11458 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11458) : cljs.core.deref.call(null,G__11458));
})();
var val = (function (){var G__11459 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11459) : f.call(null,G__11459));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__11460 = result;
var G__11461 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11460,G__11461) : rf.call(null,G__11460,G__11461));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__11464 = function(result,input){
switch(arguments.length){
case 0:
return G__11464__0.call(this);
case 1:
return G__11464__1.call(this,result);
case 2:
return G__11464__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11464.cljs$core$IFn$_invoke$arity$0 = G__11464__0;
G__11464.cljs$core$IFn$_invoke$arity$1 = G__11464__1;
G__11464.cljs$core$IFn$_invoke$arity$2 = G__11464__2;
return G__11464;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__11462 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11462) : f.call(null,G__11462));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__11443_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__11463 = p1__11443_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11463) : f.call(null,G__11463));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__11473 = init;
var G__11474 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11473,G__11474) : f.call(null,G__11473,G__11474));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__11569 = null;
var G__11569__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__11569__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11527 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11527) : f.call(null,G__11527));
})()],null));
});
var G__11569__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11528 = x;
var G__11529 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11528,G__11529) : f.call(null,G__11528,G__11529));
})()],null));
});
var G__11569__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11530 = x;
var G__11531 = y;
var G__11532 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11530,G__11531,G__11532) : f.call(null,G__11530,G__11531,G__11532));
})()],null));
});
var G__11569__4 = (function() { 
var G__11570__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__11570 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11571__i = 0, G__11571__a = new Array(arguments.length -  3);
while (G__11571__i < G__11571__a.length) {G__11571__a[G__11571__i] = arguments[G__11571__i + 3]; ++G__11571__i;}
  args = new cljs.core.IndexedSeq(G__11571__a,0);
} 
return G__11570__delegate.call(this,x,y,z,args);};
G__11570.cljs$lang$maxFixedArity = 3;
G__11570.cljs$lang$applyTo = (function (arglist__11572){
var x = cljs.core.first(arglist__11572);
arglist__11572 = cljs.core.next(arglist__11572);
var y = cljs.core.first(arglist__11572);
arglist__11572 = cljs.core.next(arglist__11572);
var z = cljs.core.first(arglist__11572);
var args = cljs.core.rest(arglist__11572);
return G__11570__delegate(x,y,z,args);
});
G__11570.cljs$core$IFn$_invoke$arity$variadic = G__11570__delegate;
return G__11570;
})()
;
G__11569 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11569__0.call(this);
case 1:
return G__11569__1.call(this,x);
case 2:
return G__11569__2.call(this,x,y);
case 3:
return G__11569__3.call(this,x,y,z);
default:
var G__11573 = null;
if (arguments.length > 3) {
var G__11574__i = 0, G__11574__a = new Array(arguments.length -  3);
while (G__11574__i < G__11574__a.length) {G__11574__a[G__11574__i] = arguments[G__11574__i + 3]; ++G__11574__i;}
G__11573 = new cljs.core.IndexedSeq(G__11574__a,0);
}
return G__11569__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11569.cljs$lang$maxFixedArity = 3;
G__11569.cljs$lang$applyTo = G__11569__4.cljs$lang$applyTo;
G__11569.cljs$core$IFn$_invoke$arity$0 = G__11569__0;
G__11569.cljs$core$IFn$_invoke$arity$1 = G__11569__1;
G__11569.cljs$core$IFn$_invoke$arity$2 = G__11569__2;
G__11569.cljs$core$IFn$_invoke$arity$3 = G__11569__3;
G__11569.cljs$core$IFn$_invoke$arity$variadic = G__11569__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11569;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__11575 = null;
var G__11575__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__11575__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11533 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11533) : f.call(null,G__11533));
})(),(function (){var G__11534 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11534) : g.call(null,G__11534));
})()],null));
});
var G__11575__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11535 = x;
var G__11536 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11535,G__11536) : f.call(null,G__11535,G__11536));
})(),(function (){var G__11537 = x;
var G__11538 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11537,G__11538) : g.call(null,G__11537,G__11538));
})()],null));
});
var G__11575__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11539 = x;
var G__11540 = y;
var G__11541 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11539,G__11540,G__11541) : f.call(null,G__11539,G__11540,G__11541));
})(),(function (){var G__11542 = x;
var G__11543 = y;
var G__11544 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11542,G__11543,G__11544) : g.call(null,G__11542,G__11543,G__11544));
})()],null));
});
var G__11575__4 = (function() { 
var G__11576__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__11576 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11577__i = 0, G__11577__a = new Array(arguments.length -  3);
while (G__11577__i < G__11577__a.length) {G__11577__a[G__11577__i] = arguments[G__11577__i + 3]; ++G__11577__i;}
  args = new cljs.core.IndexedSeq(G__11577__a,0);
} 
return G__11576__delegate.call(this,x,y,z,args);};
G__11576.cljs$lang$maxFixedArity = 3;
G__11576.cljs$lang$applyTo = (function (arglist__11578){
var x = cljs.core.first(arglist__11578);
arglist__11578 = cljs.core.next(arglist__11578);
var y = cljs.core.first(arglist__11578);
arglist__11578 = cljs.core.next(arglist__11578);
var z = cljs.core.first(arglist__11578);
var args = cljs.core.rest(arglist__11578);
return G__11576__delegate(x,y,z,args);
});
G__11576.cljs$core$IFn$_invoke$arity$variadic = G__11576__delegate;
return G__11576;
})()
;
G__11575 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11575__0.call(this);
case 1:
return G__11575__1.call(this,x);
case 2:
return G__11575__2.call(this,x,y);
case 3:
return G__11575__3.call(this,x,y,z);
default:
var G__11579 = null;
if (arguments.length > 3) {
var G__11580__i = 0, G__11580__a = new Array(arguments.length -  3);
while (G__11580__i < G__11580__a.length) {G__11580__a[G__11580__i] = arguments[G__11580__i + 3]; ++G__11580__i;}
G__11579 = new cljs.core.IndexedSeq(G__11580__a,0);
}
return G__11575__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11575.cljs$lang$maxFixedArity = 3;
G__11575.cljs$lang$applyTo = G__11575__4.cljs$lang$applyTo;
G__11575.cljs$core$IFn$_invoke$arity$0 = G__11575__0;
G__11575.cljs$core$IFn$_invoke$arity$1 = G__11575__1;
G__11575.cljs$core$IFn$_invoke$arity$2 = G__11575__2;
G__11575.cljs$core$IFn$_invoke$arity$3 = G__11575__3;
G__11575.cljs$core$IFn$_invoke$arity$variadic = G__11575__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11575;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__11581 = null;
var G__11581__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__11581__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11545 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11545) : f.call(null,G__11545));
})(),(function (){var G__11546 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11546) : g.call(null,G__11546));
})(),(function (){var G__11547 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11547) : h.call(null,G__11547));
})()],null));
});
var G__11581__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11548 = x;
var G__11549 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11548,G__11549) : f.call(null,G__11548,G__11549));
})(),(function (){var G__11550 = x;
var G__11551 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11550,G__11551) : g.call(null,G__11550,G__11551));
})(),(function (){var G__11552 = x;
var G__11553 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11552,G__11553) : h.call(null,G__11552,G__11553));
})()],null));
});
var G__11581__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11554 = x;
var G__11555 = y;
var G__11556 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11554,G__11555,G__11556) : f.call(null,G__11554,G__11555,G__11556));
})(),(function (){var G__11557 = x;
var G__11558 = y;
var G__11559 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11557,G__11558,G__11559) : g.call(null,G__11557,G__11558,G__11559));
})(),(function (){var G__11560 = x;
var G__11561 = y;
var G__11562 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11560,G__11561,G__11562) : h.call(null,G__11560,G__11561,G__11562));
})()],null));
});
var G__11581__4 = (function() { 
var G__11582__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__11582 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11583__i = 0, G__11583__a = new Array(arguments.length -  3);
while (G__11583__i < G__11583__a.length) {G__11583__a[G__11583__i] = arguments[G__11583__i + 3]; ++G__11583__i;}
  args = new cljs.core.IndexedSeq(G__11583__a,0);
} 
return G__11582__delegate.call(this,x,y,z,args);};
G__11582.cljs$lang$maxFixedArity = 3;
G__11582.cljs$lang$applyTo = (function (arglist__11584){
var x = cljs.core.first(arglist__11584);
arglist__11584 = cljs.core.next(arglist__11584);
var y = cljs.core.first(arglist__11584);
arglist__11584 = cljs.core.next(arglist__11584);
var z = cljs.core.first(arglist__11584);
var args = cljs.core.rest(arglist__11584);
return G__11582__delegate(x,y,z,args);
});
G__11582.cljs$core$IFn$_invoke$arity$variadic = G__11582__delegate;
return G__11582;
})()
;
G__11581 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11581__0.call(this);
case 1:
return G__11581__1.call(this,x);
case 2:
return G__11581__2.call(this,x,y);
case 3:
return G__11581__3.call(this,x,y,z);
default:
var G__11585 = null;
if (arguments.length > 3) {
var G__11586__i = 0, G__11586__a = new Array(arguments.length -  3);
while (G__11586__i < G__11586__a.length) {G__11586__a[G__11586__i] = arguments[G__11586__i + 3]; ++G__11586__i;}
G__11585 = new cljs.core.IndexedSeq(G__11586__a,0);
}
return G__11581__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11581.cljs$lang$maxFixedArity = 3;
G__11581.cljs$lang$applyTo = G__11581__4.cljs$lang$applyTo;
G__11581.cljs$core$IFn$_invoke$arity$0 = G__11581__0;
G__11581.cljs$core$IFn$_invoke$arity$1 = G__11581__1;
G__11581.cljs$core$IFn$_invoke$arity$2 = G__11581__2;
G__11581.cljs$core$IFn$_invoke$arity$3 = G__11581__3;
G__11581.cljs$core$IFn$_invoke$arity$variadic = G__11581__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11581;
})()
});
var juxt__4 = (function() { 
var G__11587__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__11588 = null;
var G__11588__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11475_SHARP_,p2__11476_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11475_SHARP_,(function (){return (p2__11476_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11476_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11476_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11588__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11477_SHARP_,p2__11478_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11477_SHARP_,(function (){var G__11563 = x;
return (p2__11478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11563) : p2__11478_SHARP_.call(null,G__11563));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11588__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11479_SHARP_,p2__11480_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11479_SHARP_,(function (){var G__11564 = x;
var G__11565 = y;
return (p2__11480_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11480_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11564,G__11565) : p2__11480_SHARP_.call(null,G__11564,G__11565));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11588__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11481_SHARP_,p2__11482_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11481_SHARP_,(function (){var G__11566 = x;
var G__11567 = y;
var G__11568 = z;
return (p2__11482_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11482_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11566,G__11567,G__11568) : p2__11482_SHARP_.call(null,G__11566,G__11567,G__11568));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11588__4 = (function() { 
var G__11589__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11483_SHARP_,p2__11484_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11483_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11484_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__11589 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11590__i = 0, G__11590__a = new Array(arguments.length -  3);
while (G__11590__i < G__11590__a.length) {G__11590__a[G__11590__i] = arguments[G__11590__i + 3]; ++G__11590__i;}
  args = new cljs.core.IndexedSeq(G__11590__a,0);
} 
return G__11589__delegate.call(this,x,y,z,args);};
G__11589.cljs$lang$maxFixedArity = 3;
G__11589.cljs$lang$applyTo = (function (arglist__11591){
var x = cljs.core.first(arglist__11591);
arglist__11591 = cljs.core.next(arglist__11591);
var y = cljs.core.first(arglist__11591);
arglist__11591 = cljs.core.next(arglist__11591);
var z = cljs.core.first(arglist__11591);
var args = cljs.core.rest(arglist__11591);
return G__11589__delegate(x,y,z,args);
});
G__11589.cljs$core$IFn$_invoke$arity$variadic = G__11589__delegate;
return G__11589;
})()
;
G__11588 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11588__0.call(this);
case 1:
return G__11588__1.call(this,x);
case 2:
return G__11588__2.call(this,x,y);
case 3:
return G__11588__3.call(this,x,y,z);
default:
var G__11592 = null;
if (arguments.length > 3) {
var G__11593__i = 0, G__11593__a = new Array(arguments.length -  3);
while (G__11593__i < G__11593__a.length) {G__11593__a[G__11593__i] = arguments[G__11593__i + 3]; ++G__11593__i;}
G__11592 = new cljs.core.IndexedSeq(G__11593__a,0);
}
return G__11588__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11588.cljs$lang$maxFixedArity = 3;
G__11588.cljs$lang$applyTo = G__11588__4.cljs$lang$applyTo;
G__11588.cljs$core$IFn$_invoke$arity$0 = G__11588__0;
G__11588.cljs$core$IFn$_invoke$arity$1 = G__11588__1;
G__11588.cljs$core$IFn$_invoke$arity$2 = G__11588__2;
G__11588.cljs$core$IFn$_invoke$arity$3 = G__11588__3;
G__11588.cljs$core$IFn$_invoke$arity$variadic = G__11588__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11588;
})()
;})(fs__$1))
};
var G__11587 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11594__i = 0, G__11594__a = new Array(arguments.length -  3);
while (G__11594__i < G__11594__a.length) {G__11594__a[G__11594__i] = arguments[G__11594__i + 3]; ++G__11594__i;}
  fs = new cljs.core.IndexedSeq(G__11594__a,0);
} 
return G__11587__delegate.call(this,f,g,h,fs);};
G__11587.cljs$lang$maxFixedArity = 3;
G__11587.cljs$lang$applyTo = (function (arglist__11595){
var f = cljs.core.first(arglist__11595);
arglist__11595 = cljs.core.next(arglist__11595);
var g = cljs.core.first(arglist__11595);
arglist__11595 = cljs.core.next(arglist__11595);
var h = cljs.core.first(arglist__11595);
var fs = cljs.core.rest(arglist__11595);
return G__11587__delegate(f,g,h,fs);
});
G__11587.cljs$core$IFn$_invoke$arity$variadic = G__11587__delegate;
return G__11587;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__11596 = null;
if (arguments.length > 3) {
var G__11597__i = 0, G__11597__a = new Array(arguments.length -  3);
while (G__11597__i < G__11597__a.length) {G__11597__a[G__11597__i] = arguments[G__11597__i + 3]; ++G__11597__i;}
G__11596 = new cljs.core.IndexedSeq(G__11597__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__11596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__11598 = cljs.core.next(coll);
coll = G__11598;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__11599 = (n - (1));
var G__11600 = cljs.core.next(coll);
n = G__11599;
coll = G__11600;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11604 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11604,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11604,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11604,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11612 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__11613_11619 = cljs.core.first(coll);
var G__11614_11620 = writer;
var G__11615_11621 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11613_11619,G__11614_11620,G__11615_11621) : print_one.call(null,G__11613_11619,G__11614_11620,G__11615_11621));
} else {
}

var coll_11622__$1 = cljs.core.next(coll);
var n_11623 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11622__$1) && (((n_11623 == null)) || (!((n_11623 === (0)))))){
cljs.core._write(writer,sep);

var G__11616_11624 = cljs.core.first(coll_11622__$1);
var G__11617_11625 = writer;
var G__11618_11626 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11616_11624,G__11617_11625,G__11618_11626) : print_one.call(null,G__11616_11624,G__11617_11625,G__11618_11626));

var G__11627 = cljs.core.next(coll_11622__$1);
var G__11628 = (n_11623 - (1));
coll_11622__$1 = G__11627;
n_11623 = G__11628;
continue;
} else {
if((cljs.core.seq(coll_11622__$1)) && ((n_11623 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11612;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__11633 = cljs.core.seq(ss);
var chunk__11634 = null;
var count__11635 = (0);
var i__11636 = (0);
while(true){
if((i__11636 < count__11635)){
var s = chunk__11634.cljs$core$IIndexed$_nth$arity$2(null,i__11636);
cljs.core._write(writer,s);

var G__11637 = seq__11633;
var G__11638 = chunk__11634;
var G__11639 = count__11635;
var G__11640 = (i__11636 + (1));
seq__11633 = G__11637;
chunk__11634 = G__11638;
count__11635 = G__11639;
i__11636 = G__11640;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11633);
if(temp__4126__auto__){
var seq__11633__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11633__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11633__$1);
var G__11641 = cljs.core.chunk_rest(seq__11633__$1);
var G__11642 = c__4546__auto__;
var G__11643 = cljs.core.count(c__4546__auto__);
var G__11644 = (0);
seq__11633 = G__11641;
chunk__11634 = G__11642;
count__11635 = G__11643;
i__11636 = G__11644;
continue;
} else {
var s = cljs.core.first(seq__11633__$1);
cljs.core._write(writer,s);

var G__11645 = cljs.core.next(seq__11633__$1);
var G__11646 = null;
var G__11647 = (0);
var G__11648 = (0);
seq__11633 = G__11645;
chunk__11634 = G__11646;
count__11635 = G__11647;
i__11636 = G__11648;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11649__i = 0, G__11649__a = new Array(arguments.length -  1);
while (G__11649__i < G__11649__a.length) {G__11649__a[G__11649__i] = arguments[G__11649__i + 1]; ++G__11649__i;}
  ss = new cljs.core.IndexedSeq(G__11649__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__11650){
var writer = cljs.core.first(arglist__11650);
var ss = cljs.core.rest(arglist__11650);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11652 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11652;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11655 = "[\\\\\"\b\f\n\r\t]";
var G__11656 = "g";
return RegExp(G__11655,G__11656);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__11670 = obj;
if(G__11670){
var bit__4440__auto__ = (G__11670.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__11670.cljs$core$IMeta$)){
return true;
} else {
if((!G__11670.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11670);
}
})();
if(and__3747__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11671 = obj;
if(G__11671){
var bit__4433__auto__ = (G__11671.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4433__auto__) || (G__11671.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11672 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11673 = pr_writer;
var G__11674 = writer;
var G__11675 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11672,G__11673,G__11674,G__11675) : cljs.core.print_map.call(null,G__11672,G__11673,G__11674,G__11675));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11676 = obj;
return goog.isString(G__11676);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11678 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11678;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11677 = obj;
if(G__11677){
var bit__4440__auto__ = (G__11677.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4440__auto__) || (G__11677.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11677.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11677);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11677);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11683 = cljs.core.seq(cljs.core.next(objs));
var chunk__11684 = null;
var count__11685 = (0);
var i__11686 = (0);
while(true){
if((i__11686 < count__11685)){
var obj = chunk__11684.cljs$core$IIndexed$_nth$arity$2(null,i__11686);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11687 = seq__11683;
var G__11688 = chunk__11684;
var G__11689 = count__11685;
var G__11690 = (i__11686 + (1));
seq__11683 = G__11687;
chunk__11684 = G__11688;
count__11685 = G__11689;
i__11686 = G__11690;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11683);
if(temp__4126__auto__){
var seq__11683__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11683__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__11683__$1);
var G__11691 = cljs.core.chunk_rest(seq__11683__$1);
var G__11692 = c__4546__auto__;
var G__11693 = cljs.core.count(c__4546__auto__);
var G__11694 = (0);
seq__11683 = G__11691;
chunk__11684 = G__11692;
count__11685 = G__11693;
i__11686 = G__11694;
continue;
} else {
var obj = cljs.core.first(seq__11683__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11695 = cljs.core.next(seq__11683__$1);
var G__11696 = null;
var G__11697 = (0);
var G__11698 = (0);
seq__11683 = G__11695;
chunk__11684 = G__11696;
count__11685 = G__11697;
i__11686 = G__11698;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11699__i = 0, G__11699__a = new Array(arguments.length -  0);
while (G__11699__i < G__11699__a.length) {G__11699__a[G__11699__i] = arguments[G__11699__i + 0]; ++G__11699__i;}
  objs = new cljs.core.IndexedSeq(G__11699__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__11700){
var objs = cljs.core.seq(arglist__11700);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11701__i = 0, G__11701__a = new Array(arguments.length -  0);
while (G__11701__i < G__11701__a.length) {G__11701__a[G__11701__i] = arguments[G__11701__i + 0]; ++G__11701__i;}
  objs = new cljs.core.IndexedSeq(G__11701__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__11702){
var objs = cljs.core.seq(arglist__11702);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11703__i = 0, G__11703__a = new Array(arguments.length -  0);
while (G__11703__i < G__11703__a.length) {G__11703__a[G__11703__i] = arguments[G__11703__i + 0]; ++G__11703__i;}
  objs = new cljs.core.IndexedSeq(G__11703__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__11704){
var objs = cljs.core.seq(arglist__11704);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11705__i = 0, G__11705__a = new Array(arguments.length -  0);
while (G__11705__i < G__11705__a.length) {G__11705__a[G__11705__i] = arguments[G__11705__i + 0]; ++G__11705__i;}
  objs = new cljs.core.IndexedSeq(G__11705__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__11706){
var objs = cljs.core.seq(arglist__11706);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11707__i = 0, G__11707__a = new Array(arguments.length -  0);
while (G__11707__i < G__11707__a.length) {G__11707__a[G__11707__i] = arguments[G__11707__i + 0]; ++G__11707__i;}
  objs = new cljs.core.IndexedSeq(G__11707__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__11708){
var objs = cljs.core.seq(arglist__11708);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11709__i = 0, G__11709__a = new Array(arguments.length -  0);
while (G__11709__i < G__11709__a.length) {G__11709__a[G__11709__i] = arguments[G__11709__i + 0]; ++G__11709__i;}
  objs = new cljs.core.IndexedSeq(G__11709__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__11710){
var objs = cljs.core.seq(arglist__11710);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11711__i = 0, G__11711__a = new Array(arguments.length -  0);
while (G__11711__i < G__11711__a.length) {G__11711__a[G__11711__i] = arguments[G__11711__i + 0]; ++G__11711__i;}
  objs = new cljs.core.IndexedSeq(G__11711__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__11712){
var objs = cljs.core.seq(arglist__11712);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11713__i = 0, G__11713__a = new Array(arguments.length -  0);
while (G__11713__i < G__11713__a.length) {G__11713__a[G__11713__i] = arguments[G__11713__i + 0]; ++G__11713__i;}
  objs = new cljs.core.IndexedSeq(G__11713__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__11714){
var objs = cljs.core.seq(arglist__11714);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11721_11727 = cljs.core.key(e);
var G__11722_11728 = w;
var G__11723_11729 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11721_11727,G__11722_11728,G__11723_11729) : print_one.call(null,G__11721_11727,G__11722_11728,G__11723_11729));

cljs.core._write(w," ");

var G__11724 = cljs.core.val(e);
var G__11725 = w;
var G__11726 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11724,G__11725,G__11726) : print_one.call(null,G__11724,G__11725,G__11726));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11730__i = 0, G__11730__a = new Array(arguments.length -  2);
while (G__11730__i < G__11730__a.length) {G__11730__a[G__11730__i] = arguments[G__11730__i + 2]; ++G__11730__i;}
  args = new cljs.core.IndexedSeq(G__11730__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11731){
var iref = cljs.core.first(arglist__11731);
arglist__11731 = cljs.core.next(arglist__11731);
var f = cljs.core.first(arglist__11731);
var args = cljs.core.rest(arglist__11731);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11734 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11734) : cljs.core.atom.call(null,G__11734));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11736 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11736) : cljs.core.deref.call(null,G__11736));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__11737_SHARP_,p2__11738_SHARP_){
var ret = (function (){var G__11741 = p1__11737_SHARP_;
var G__11742 = p2__11738_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11741,G__11742) : rf.call(null,G__11741,G__11742));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11745 = null;
var G__11745__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11745__1 = (function (result){
var G__11744 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11744) : rf.call(null,G__11744));
});
var G__11745__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11745 = function(result,input){
switch(arguments.length){
case 0:
return G__11745__0.call(this);
case 1:
return G__11745__1.call(this,result);
case 2:
return G__11745__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11745.cljs$core$IFn$_invoke$arity$0 = G__11745__0;
G__11745.cljs$core$IFn$_invoke$arity$1 = G__11745__1;
G__11745.cljs$core$IFn$_invoke$arity$2 = G__11745__2;
return G__11745;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11754 = null;
var G__11754__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11754__1 = (function (result){
var G__11750 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11750) : rf.call(null,G__11750));
});
var G__11754__2 = (function (result,input){
var prior = (function (){var G__11751 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11751) : cljs.core.deref.call(null,G__11751));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11752 = result;
var G__11753 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11752,G__11753) : rf.call(null,G__11752,G__11753));
}
});
G__11754 = function(result,input){
switch(arguments.length){
case 0:
return G__11754__0.call(this);
case 1:
return G__11754__1.call(this,result);
case 2:
return G__11754__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11754.cljs$core$IFn$_invoke$arity$0 = G__11754__0;
G__11754.cljs$core$IFn$_invoke$arity$1 = G__11754__1;
G__11754.cljs$core$IFn$_invoke$arity$2 = G__11754__2;
return G__11754;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11756_SHARP_,p2__11755_SHARP_){
var G__11758 = p2__11755_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11758) : proc.call(null,G__11758));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11760 = {};
return obj11760;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._clj__GT_js[(function (){var G__11764 = x__4403__auto__;
return goog.typeOf(G__11764);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._key__GT_js[(function (){var G__11768 = x__4403__auto__;
return goog.typeOf(G__11768);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__11771 = k;
if(G__11771){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__11771.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11771.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11771);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11771);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11772 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11772) : cljs.core.clj__GT_js.call(null,G__11772));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11788 = x;
if(G__11788){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__11788.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11788.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11788);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11790 = {};
return obj11790;
})();
var seq__11791_11801 = cljs.core.seq(x);
var chunk__11792_11802 = null;
var count__11793_11803 = (0);
var i__11794_11804 = (0);
while(true){
if((i__11794_11804 < count__11793_11803)){
var vec__11795_11805 = chunk__11792_11802.cljs$core$IIndexed$_nth$arity$2(null,i__11794_11804);
var k_11806 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11795_11805,(0),null);
var v_11807 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11795_11805,(1),null);
(m[cljs.core.key__GT_js(k_11806)] = clj__GT_js(v_11807));

var G__11808 = seq__11791_11801;
var G__11809 = chunk__11792_11802;
var G__11810 = count__11793_11803;
var G__11811 = (i__11794_11804 + (1));
seq__11791_11801 = G__11808;
chunk__11792_11802 = G__11809;
count__11793_11803 = G__11810;
i__11794_11804 = G__11811;
continue;
} else {
var temp__4126__auto___11812 = cljs.core.seq(seq__11791_11801);
if(temp__4126__auto___11812){
var seq__11791_11813__$1 = temp__4126__auto___11812;
if(cljs.core.chunked_seq_QMARK_(seq__11791_11813__$1)){
var c__4546__auto___11814 = cljs.core.chunk_first(seq__11791_11813__$1);
var G__11815 = cljs.core.chunk_rest(seq__11791_11813__$1);
var G__11816 = c__4546__auto___11814;
var G__11817 = cljs.core.count(c__4546__auto___11814);
var G__11818 = (0);
seq__11791_11801 = G__11815;
chunk__11792_11802 = G__11816;
count__11793_11803 = G__11817;
i__11794_11804 = G__11818;
continue;
} else {
var vec__11796_11819 = cljs.core.first(seq__11791_11813__$1);
var k_11820 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11796_11819,(0),null);
var v_11821 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11796_11819,(1),null);
(m[cljs.core.key__GT_js(k_11820)] = clj__GT_js(v_11821));

var G__11822 = cljs.core.next(seq__11791_11813__$1);
var G__11823 = null;
var G__11824 = (0);
var G__11825 = (0);
seq__11791_11801 = G__11822;
chunk__11792_11802 = G__11823;
count__11793_11803 = G__11824;
i__11794_11804 = G__11825;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11797_11826 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__11798_11827 = null;
var count__11799_11828 = (0);
var i__11800_11829 = (0);
while(true){
if((i__11800_11829 < count__11799_11828)){
var x_11830__$1 = chunk__11798_11827.cljs$core$IIndexed$_nth$arity$2(null,i__11800_11829);
arr.push(x_11830__$1);

var G__11831 = seq__11797_11826;
var G__11832 = chunk__11798_11827;
var G__11833 = count__11799_11828;
var G__11834 = (i__11800_11829 + (1));
seq__11797_11826 = G__11831;
chunk__11798_11827 = G__11832;
count__11799_11828 = G__11833;
i__11800_11829 = G__11834;
continue;
} else {
var temp__4126__auto___11835 = cljs.core.seq(seq__11797_11826);
if(temp__4126__auto___11835){
var seq__11797_11836__$1 = temp__4126__auto___11835;
if(cljs.core.chunked_seq_QMARK_(seq__11797_11836__$1)){
var c__4546__auto___11837 = cljs.core.chunk_first(seq__11797_11836__$1);
var G__11838 = cljs.core.chunk_rest(seq__11797_11836__$1);
var G__11839 = c__4546__auto___11837;
var G__11840 = cljs.core.count(c__4546__auto___11837);
var G__11841 = (0);
seq__11797_11826 = G__11838;
chunk__11798_11827 = G__11839;
count__11799_11828 = G__11840;
i__11800_11829 = G__11841;
continue;
} else {
var x_11842__$1 = cljs.core.first(seq__11797_11836__$1);
arr.push(x_11842__$1);

var G__11843 = cljs.core.next(seq__11797_11836__$1);
var G__11844 = null;
var G__11845 = (0);
var G__11846 = (0);
seq__11797_11826 = G__11843;
chunk__11798_11827 = G__11844;
count__11799_11828 = G__11845;
i__11800_11829 = G__11846;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11848 = {};
return obj11848;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._js__GT_clj[(function (){var G__11852 = x__4403__auto__;
return goog.typeOf(G__11852);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__11909__delegate = function (x,opts){
var map__11882 = opts;
var map__11882__$1 = ((cljs.core.seq_QMARK_(map__11882))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11882):map__11882);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11882__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11882,map__11882__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__11898 = x__$1;
if(G__11898){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__11898.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11898.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11898);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11898);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4515__auto__ = ((function (map__11882,map__11882__$1,keywordize_keys,keyfn){
return (function iter__11899(s__11900){
return (new cljs.core.LazySeq(null,((function (map__11882,map__11882__$1,keywordize_keys,keyfn){
return (function (){
var s__11900__$1 = s__11900;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11900__$1);
if(temp__4126__auto__){
var s__11900__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11900__$2)){
var c__4513__auto__ = cljs.core.chunk_first(s__11900__$2);
var size__4514__auto__ = cljs.core.count(c__4513__auto__);
var b__11902 = cljs.core.chunk_buffer(size__4514__auto__);
if((function (){var i__11901 = (0);
while(true){
if((i__11901 < size__4514__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4513__auto__,i__11901);
cljs.core.chunk_append(b__11902,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11907 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11907) : keyfn.call(null,G__11907));
})(),thisfn((x__$1[k]))], null));

var G__11910 = (i__11901 + (1));
i__11901 = G__11910;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11902),iter__11899(cljs.core.chunk_rest(s__11900__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11902),null);
}
} else {
var k = cljs.core.first(s__11900__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11908 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11908) : keyfn.call(null,G__11908));
})(),thisfn((x__$1[k]))], null),iter__11899(cljs.core.rest(s__11900__$2)));
}
} else {
return null;
}
break;
}
});})(map__11882,map__11882__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11882,map__11882__$1,keywordize_keys,keyfn))
;
return iter__4515__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11882,map__11882__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11909 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11911__i = 0, G__11911__a = new Array(arguments.length -  1);
while (G__11911__i < G__11911__a.length) {G__11911__a[G__11911__i] = arguments[G__11911__i + 1]; ++G__11911__i;}
  opts = new cljs.core.IndexedSeq(G__11911__a,0);
} 
return G__11909__delegate.call(this,x,opts);};
G__11909.cljs$lang$maxFixedArity = 1;
G__11909.cljs$lang$applyTo = (function (arglist__11912){
var x = cljs.core.first(arglist__11912);
var opts = cljs.core.rest(arglist__11912);
return G__11909__delegate(x,opts);
});
G__11909.cljs$core$IFn$_invoke$arity$variadic = G__11909__delegate;
return G__11909;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__11913 = null;
if (arguments.length > 1) {
var G__11914__i = 0, G__11914__a = new Array(arguments.length -  1);
while (G__11914__i < G__11914__a.length) {G__11914__a[G__11914__i] = arguments[G__11914__i + 1]; ++G__11914__i;}
G__11913 = new cljs.core.IndexedSeq(G__11914__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__11917 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11917) : cljs.core.atom.call(null,G__11917));
})();
return ((function (mem){
return (function() { 
var G__11919__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11918 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11918) : cljs.core.deref.call(null,G__11918));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11919 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11920__i = 0, G__11920__a = new Array(arguments.length -  0);
while (G__11920__i < G__11920__a.length) {G__11920__a[G__11920__i] = arguments[G__11920__i + 0]; ++G__11920__i;}
  args = new cljs.core.IndexedSeq(G__11920__a,0);
} 
return G__11919__delegate.call(this,args);};
G__11919.cljs$lang$maxFixedArity = 0;
G__11919.cljs$lang$applyTo = (function (arglist__11921){
var args = cljs.core.seq(arglist__11921);
return G__11919__delegate(args);
});
G__11919.cljs$core$IFn$_invoke$arity$variadic = G__11919__delegate;
return G__11919;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11923 = ret;
f = G__11923;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__11924__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11924 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11925__i = 0, G__11925__a = new Array(arguments.length -  1);
while (G__11925__i < G__11925__a.length) {G__11925__a[G__11925__i] = arguments[G__11925__i + 1]; ++G__11925__i;}
  args = new cljs.core.IndexedSeq(G__11925__a,0);
} 
return G__11924__delegate.call(this,f,args);};
G__11924.cljs$lang$maxFixedArity = 1;
G__11924.cljs$lang$applyTo = (function (arglist__11926){
var f = cljs.core.first(arglist__11926);
var args = cljs.core.rest(arglist__11926);
return G__11924__delegate(f,args);
});
G__11924.cljs$core$IFn$_invoke$arity$variadic = G__11924__delegate;
return G__11924;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__11927 = null;
if (arguments.length > 1) {
var G__11928__i = 0, G__11928__a = new Array(arguments.length -  1);
while (G__11928__i < G__11928__a.length) {G__11928__a[G__11928__i] = arguments[G__11928__i + 1]; ++G__11928__i;}
G__11927 = new cljs.core.IndexedSeq(G__11928__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__11931 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11931) : Math.floor.call(null,G__11931));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11933 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11933) : f.call(null,G__11933));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11935 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11935) : cljs.core.atom.call(null,G__11935));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11936__i = 0, G__11936__a = new Array(arguments.length -  1);
while (G__11936__i < G__11936__a.length) {G__11936__a[G__11936__i] = arguments[G__11936__i + 1]; ++G__11936__i;}
  args = new cljs.core.IndexedSeq(G__11936__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11937){
var f = cljs.core.first(arglist__11937);
var args = cljs.core.rest(arglist__11937);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12002 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12002) : cljs.core.deref.call(null,G__12002));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3759__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
var and__3747__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3747__auto__){
var and__3747__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3747__auto____$1){
var and__3747__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3747__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12027 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12025 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12025) : child.call(null,G__12025));
})(),(function (){var G__12026 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12026) : parent.call(null,G__12026));
})());
var G__12028 = (i + (1));
ret = G__12027;
i = G__12028;
continue;
}
break;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12032 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12032) : cljs.core.deref.call(null,G__12032));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12036 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12036) : cljs.core.deref.call(null,G__12036));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12040 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12040) : cljs.core.deref.call(null,G__12040));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12049 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12049) : targets.call(null,G__12049));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12050 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12050) : sources.call(null,G__12050));
})()));
});})(tp,td,ta))
;
var or__3759__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12054 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12054) : tp.call(null,G__12054));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12055 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12055) : ta.call(null,G__12055));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12056 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12056) : ta.call(null,G__12056));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12063 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12063) : parentMap.call(null,G__12063));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12064 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12064) : parentMap.call(null,G__12064));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12057_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12057_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12057_SHARP_),cljs.core.second(p1__12057_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12065 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12065) : parentMap.call(null,G__12065));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12058_SHARP_,p2__12059_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12058_SHARP_,p2__12059_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12068 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12068) : cljs.core.deref.call(null,G__12068));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12069 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12069) : cljs.core.deref.call(null,G__12069));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12085 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12085) : cljs.core.deref.call(null,G__12085));
})().call(null,x);
var or__3759__auto__ = (cljs.core.truth_((function (){var and__3747__auto__ = xprefs;
if(cljs.core.truth_(and__3747__auto__)){
var G__12087 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12087) : xprefs.call(null,G__12087));
} else {
return and__3747__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12088 = cljs.core.rest(ps);
ps = G__12088;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12089 = cljs.core.rest(ps);
ps = G__12089;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3759__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12103){
var vec__12104 = p__12103;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12104,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12104,(1),null);
var e = vec__12104;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12105 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12105) : cljs.core.deref.call(null,G__12105));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3759__auto__ = (be == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12106 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12106) : cljs.core.deref.call(null,G__12106));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12107 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12107) : cljs.core.deref.call(null,G__12107));
})(),(function (){var G__12108 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12108) : cljs.core.deref.call(null,G__12108));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12110 = {};
return obj12110;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._reset[(function (){var G__12114 = x__4403__auto__;
return goog.typeOf(G__12114);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._add_method[(function (){var G__12118 = x__4403__auto__;
return goog.typeOf(G__12118);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._remove_method[(function (){var G__12122 = x__4403__auto__;
return goog.typeOf(G__12122);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefer_method[(function (){var G__12126 = x__4403__auto__;
return goog.typeOf(G__12126);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._get_method[(function (){var G__12130 = x__4403__auto__;
return goog.typeOf(G__12130);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._get_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._methods[(function (){var G__12134 = x__4403__auto__;
return goog.typeOf(G__12134);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._methods["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefers[(function (){var G__12138 = x__4403__auto__;
return goog.typeOf(G__12138);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefers["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12140 = this$__$1;
return goog.getUid(G__12140);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12141 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12141) : cljs.core.deref.call(null,G__12141));
})(),(function (){var G__12142 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12142) : cljs.core.deref.call(null,G__12142));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12143 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12143) : cljs.core.deref.call(null,G__12143));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12144 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12144) : cljs.core.deref.call(null,G__12144));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12145 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12145) : cljs.core.deref.call(null,G__12145));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12146 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12146) : cljs.core.deref.call(null,G__12146));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12987 = null;
var G__12987__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12987__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12147 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12147) : self__.dispatch_fn.call(null,G__12147));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12148 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12148) : target_fn.call(null,G__12148));
});
var G__12987__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12149 = a;
var G__12150 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12149,G__12150) : self__.dispatch_fn.call(null,G__12149,G__12150));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12151 = a;
var G__12152 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12151,G__12152) : target_fn.call(null,G__12151,G__12152));
});
var G__12987__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12153 = a;
var G__12154 = b;
var G__12155 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12153,G__12154,G__12155) : self__.dispatch_fn.call(null,G__12153,G__12154,G__12155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12156 = a;
var G__12157 = b;
var G__12158 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12156,G__12157,G__12158) : target_fn.call(null,G__12156,G__12157,G__12158));
});
var G__12987__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12159 = a;
var G__12160 = b;
var G__12161 = c;
var G__12162 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12159,G__12160,G__12161,G__12162) : self__.dispatch_fn.call(null,G__12159,G__12160,G__12161,G__12162));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12163 = a;
var G__12164 = b;
var G__12165 = c;
var G__12166 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12163,G__12164,G__12165,G__12166) : target_fn.call(null,G__12163,G__12164,G__12165,G__12166));
});
var G__12987__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12167 = a;
var G__12168 = b;
var G__12169 = c;
var G__12170 = d;
var G__12171 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12167,G__12168,G__12169,G__12170,G__12171) : self__.dispatch_fn.call(null,G__12167,G__12168,G__12169,G__12170,G__12171));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12172 = a;
var G__12173 = b;
var G__12174 = c;
var G__12175 = d;
var G__12176 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12172,G__12173,G__12174,G__12175,G__12176) : target_fn.call(null,G__12172,G__12173,G__12174,G__12175,G__12176));
});
var G__12987__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12177 = a;
var G__12178 = b;
var G__12179 = c;
var G__12180 = d;
var G__12181 = e;
var G__12182 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12177,G__12178,G__12179,G__12180,G__12181,G__12182) : self__.dispatch_fn.call(null,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12183 = a;
var G__12184 = b;
var G__12185 = c;
var G__12186 = d;
var G__12187 = e;
var G__12188 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12183,G__12184,G__12185,G__12186,G__12187,G__12188) : target_fn.call(null,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188));
});
var G__12987__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12189 = a;
var G__12190 = b;
var G__12191 = c;
var G__12192 = d;
var G__12193 = e;
var G__12194 = f;
var G__12195 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195) : self__.dispatch_fn.call(null,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12196 = a;
var G__12197 = b;
var G__12198 = c;
var G__12199 = d;
var G__12200 = e;
var G__12201 = f;
var G__12202 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202) : target_fn.call(null,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202));
});
var G__12987__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12203 = a;
var G__12204 = b;
var G__12205 = c;
var G__12206 = d;
var G__12207 = e;
var G__12208 = f;
var G__12209 = g;
var G__12210 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210) : self__.dispatch_fn.call(null,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12211 = a;
var G__12212 = b;
var G__12213 = c;
var G__12214 = d;
var G__12215 = e;
var G__12216 = f;
var G__12217 = g;
var G__12218 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218) : target_fn.call(null,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218));
});
var G__12987__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12219 = a;
var G__12220 = b;
var G__12221 = c;
var G__12222 = d;
var G__12223 = e;
var G__12224 = f;
var G__12225 = g;
var G__12226 = h;
var G__12227 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227) : self__.dispatch_fn.call(null,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12228 = a;
var G__12229 = b;
var G__12230 = c;
var G__12231 = d;
var G__12232 = e;
var G__12233 = f;
var G__12234 = g;
var G__12235 = h;
var G__12236 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236) : target_fn.call(null,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236));
});
var G__12987__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12237 = a;
var G__12238 = b;
var G__12239 = c;
var G__12240 = d;
var G__12241 = e;
var G__12242 = f;
var G__12243 = g;
var G__12244 = h;
var G__12245 = i;
var G__12246 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246) : self__.dispatch_fn.call(null,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12247 = a;
var G__12248 = b;
var G__12249 = c;
var G__12250 = d;
var G__12251 = e;
var G__12252 = f;
var G__12253 = g;
var G__12254 = h;
var G__12255 = i;
var G__12256 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256) : target_fn.call(null,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256));
});
var G__12987__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12257 = a;
var G__12258 = b;
var G__12259 = c;
var G__12260 = d;
var G__12261 = e;
var G__12262 = f;
var G__12263 = g;
var G__12264 = h;
var G__12265 = i;
var G__12266 = j;
var G__12267 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267) : self__.dispatch_fn.call(null,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12268 = a;
var G__12269 = b;
var G__12270 = c;
var G__12271 = d;
var G__12272 = e;
var G__12273 = f;
var G__12274 = g;
var G__12275 = h;
var G__12276 = i;
var G__12277 = j;
var G__12278 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278) : target_fn.call(null,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278));
});
var G__12987__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12279 = a;
var G__12280 = b;
var G__12281 = c;
var G__12282 = d;
var G__12283 = e;
var G__12284 = f;
var G__12285 = g;
var G__12286 = h;
var G__12287 = i;
var G__12288 = j;
var G__12289 = k;
var G__12290 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290) : self__.dispatch_fn.call(null,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12291 = a;
var G__12292 = b;
var G__12293 = c;
var G__12294 = d;
var G__12295 = e;
var G__12296 = f;
var G__12297 = g;
var G__12298 = h;
var G__12299 = i;
var G__12300 = j;
var G__12301 = k;
var G__12302 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302) : target_fn.call(null,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302));
});
var G__12987__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12303 = a;
var G__12304 = b;
var G__12305 = c;
var G__12306 = d;
var G__12307 = e;
var G__12308 = f;
var G__12309 = g;
var G__12310 = h;
var G__12311 = i;
var G__12312 = j;
var G__12313 = k;
var G__12314 = l;
var G__12315 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315) : self__.dispatch_fn.call(null,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12316 = a;
var G__12317 = b;
var G__12318 = c;
var G__12319 = d;
var G__12320 = e;
var G__12321 = f;
var G__12322 = g;
var G__12323 = h;
var G__12324 = i;
var G__12325 = j;
var G__12326 = k;
var G__12327 = l;
var G__12328 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328) : target_fn.call(null,G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328));
});
var G__12987__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12329 = a;
var G__12330 = b;
var G__12331 = c;
var G__12332 = d;
var G__12333 = e;
var G__12334 = f;
var G__12335 = g;
var G__12336 = h;
var G__12337 = i;
var G__12338 = j;
var G__12339 = k;
var G__12340 = l;
var G__12341 = m;
var G__12342 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342) : self__.dispatch_fn.call(null,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12343 = a;
var G__12344 = b;
var G__12345 = c;
var G__12346 = d;
var G__12347 = e;
var G__12348 = f;
var G__12349 = g;
var G__12350 = h;
var G__12351 = i;
var G__12352 = j;
var G__12353 = k;
var G__12354 = l;
var G__12355 = m;
var G__12356 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356) : target_fn.call(null,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356));
});
var G__12987__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12357 = a;
var G__12358 = b;
var G__12359 = c;
var G__12360 = d;
var G__12361 = e;
var G__12362 = f;
var G__12363 = g;
var G__12364 = h;
var G__12365 = i;
var G__12366 = j;
var G__12367 = k;
var G__12368 = l;
var G__12369 = m;
var G__12370 = n;
var G__12371 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371) : self__.dispatch_fn.call(null,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12372 = a;
var G__12373 = b;
var G__12374 = c;
var G__12375 = d;
var G__12376 = e;
var G__12377 = f;
var G__12378 = g;
var G__12379 = h;
var G__12380 = i;
var G__12381 = j;
var G__12382 = k;
var G__12383 = l;
var G__12384 = m;
var G__12385 = n;
var G__12386 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386) : target_fn.call(null,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386));
});
var G__12987__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12387 = a;
var G__12388 = b;
var G__12389 = c;
var G__12390 = d;
var G__12391 = e;
var G__12392 = f;
var G__12393 = g;
var G__12394 = h;
var G__12395 = i;
var G__12396 = j;
var G__12397 = k;
var G__12398 = l;
var G__12399 = m;
var G__12400 = n;
var G__12401 = o;
var G__12402 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402) : self__.dispatch_fn.call(null,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12403 = a;
var G__12404 = b;
var G__12405 = c;
var G__12406 = d;
var G__12407 = e;
var G__12408 = f;
var G__12409 = g;
var G__12410 = h;
var G__12411 = i;
var G__12412 = j;
var G__12413 = k;
var G__12414 = l;
var G__12415 = m;
var G__12416 = n;
var G__12417 = o;
var G__12418 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416,G__12417,G__12418) : target_fn.call(null,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416,G__12417,G__12418));
});
var G__12987__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12419 = a;
var G__12420 = b;
var G__12421 = c;
var G__12422 = d;
var G__12423 = e;
var G__12424 = f;
var G__12425 = g;
var G__12426 = h;
var G__12427 = i;
var G__12428 = j;
var G__12429 = k;
var G__12430 = l;
var G__12431 = m;
var G__12432 = n;
var G__12433 = o;
var G__12434 = p;
var G__12435 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435) : self__.dispatch_fn.call(null,G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12436 = a;
var G__12437 = b;
var G__12438 = c;
var G__12439 = d;
var G__12440 = e;
var G__12441 = f;
var G__12442 = g;
var G__12443 = h;
var G__12444 = i;
var G__12445 = j;
var G__12446 = k;
var G__12447 = l;
var G__12448 = m;
var G__12449 = n;
var G__12450 = o;
var G__12451 = p;
var G__12452 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12436,G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452) : target_fn.call(null,G__12436,G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452));
});
var G__12987__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12453 = a;
var G__12454 = b;
var G__12455 = c;
var G__12456 = d;
var G__12457 = e;
var G__12458 = f;
var G__12459 = g;
var G__12460 = h;
var G__12461 = i;
var G__12462 = j;
var G__12463 = k;
var G__12464 = l;
var G__12465 = m;
var G__12466 = n;
var G__12467 = o;
var G__12468 = p;
var G__12469 = q;
var G__12470 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12453,G__12454,G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470) : self__.dispatch_fn.call(null,G__12453,G__12454,G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12471 = a;
var G__12472 = b;
var G__12473 = c;
var G__12474 = d;
var G__12475 = e;
var G__12476 = f;
var G__12477 = g;
var G__12478 = h;
var G__12479 = i;
var G__12480 = j;
var G__12481 = k;
var G__12482 = l;
var G__12483 = m;
var G__12484 = n;
var G__12485 = o;
var G__12486 = p;
var G__12487 = q;
var G__12488 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488) : target_fn.call(null,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488));
});
var G__12987__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12489 = a;
var G__12490 = b;
var G__12491 = c;
var G__12492 = d;
var G__12493 = e;
var G__12494 = f;
var G__12495 = g;
var G__12496 = h;
var G__12497 = i;
var G__12498 = j;
var G__12499 = k;
var G__12500 = l;
var G__12501 = m;
var G__12502 = n;
var G__12503 = o;
var G__12504 = p;
var G__12505 = q;
var G__12506 = r;
var G__12507 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507) : self__.dispatch_fn.call(null,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12508 = a;
var G__12509 = b;
var G__12510 = c;
var G__12511 = d;
var G__12512 = e;
var G__12513 = f;
var G__12514 = g;
var G__12515 = h;
var G__12516 = i;
var G__12517 = j;
var G__12518 = k;
var G__12519 = l;
var G__12520 = m;
var G__12521 = n;
var G__12522 = o;
var G__12523 = p;
var G__12524 = q;
var G__12525 = r;
var G__12526 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526) : target_fn.call(null,G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526));
});
var G__12987__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12527 = a;
var G__12528 = b;
var G__12529 = c;
var G__12530 = d;
var G__12531 = e;
var G__12532 = f;
var G__12533 = g;
var G__12534 = h;
var G__12535 = i;
var G__12536 = j;
var G__12537 = k;
var G__12538 = l;
var G__12539 = m;
var G__12540 = n;
var G__12541 = o;
var G__12542 = p;
var G__12543 = q;
var G__12544 = r;
var G__12545 = s;
var G__12546 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546) : self__.dispatch_fn.call(null,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12547 = a;
var G__12548 = b;
var G__12549 = c;
var G__12550 = d;
var G__12551 = e;
var G__12552 = f;
var G__12553 = g;
var G__12554 = h;
var G__12555 = i;
var G__12556 = j;
var G__12557 = k;
var G__12558 = l;
var G__12559 = m;
var G__12560 = n;
var G__12561 = o;
var G__12562 = p;
var G__12563 = q;
var G__12564 = r;
var G__12565 = s;
var G__12566 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566) : target_fn.call(null,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566));
});
var G__12987__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12987 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12987__1.call(this,self__);
case 2:
return G__12987__2.call(this,self__,a);
case 3:
return G__12987__3.call(this,self__,a,b);
case 4:
return G__12987__4.call(this,self__,a,b,c);
case 5:
return G__12987__5.call(this,self__,a,b,c,d);
case 6:
return G__12987__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12987__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12987__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12987__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12987__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12987__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12987__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12987__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12987__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12987__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12987__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12987__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12987__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12987__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12987__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12987__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12987__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12987.cljs$core$IFn$_invoke$arity$1 = G__12987__1;
G__12987.cljs$core$IFn$_invoke$arity$2 = G__12987__2;
G__12987.cljs$core$IFn$_invoke$arity$3 = G__12987__3;
G__12987.cljs$core$IFn$_invoke$arity$4 = G__12987__4;
G__12987.cljs$core$IFn$_invoke$arity$5 = G__12987__5;
G__12987.cljs$core$IFn$_invoke$arity$6 = G__12987__6;
G__12987.cljs$core$IFn$_invoke$arity$7 = G__12987__7;
G__12987.cljs$core$IFn$_invoke$arity$8 = G__12987__8;
G__12987.cljs$core$IFn$_invoke$arity$9 = G__12987__9;
G__12987.cljs$core$IFn$_invoke$arity$10 = G__12987__10;
G__12987.cljs$core$IFn$_invoke$arity$11 = G__12987__11;
G__12987.cljs$core$IFn$_invoke$arity$12 = G__12987__12;
G__12987.cljs$core$IFn$_invoke$arity$13 = G__12987__13;
G__12987.cljs$core$IFn$_invoke$arity$14 = G__12987__14;
G__12987.cljs$core$IFn$_invoke$arity$15 = G__12987__15;
G__12987.cljs$core$IFn$_invoke$arity$16 = G__12987__16;
G__12987.cljs$core$IFn$_invoke$arity$17 = G__12987__17;
G__12987.cljs$core$IFn$_invoke$arity$18 = G__12987__18;
G__12987.cljs$core$IFn$_invoke$arity$19 = G__12987__19;
G__12987.cljs$core$IFn$_invoke$arity$20 = G__12987__20;
G__12987.cljs$core$IFn$_invoke$arity$21 = G__12987__21;
G__12987.cljs$core$IFn$_invoke$arity$22 = G__12987__22;
return G__12987;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12139){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12139)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12567 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12567) : self__.dispatch_fn.call(null,G__12567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12568 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12568) : target_fn.call(null,G__12568));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12569 = a;
var G__12570 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12569,G__12570) : self__.dispatch_fn.call(null,G__12569,G__12570));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12571 = a;
var G__12572 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12571,G__12572) : target_fn.call(null,G__12571,G__12572));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12573 = a;
var G__12574 = b;
var G__12575 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12573,G__12574,G__12575) : self__.dispatch_fn.call(null,G__12573,G__12574,G__12575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12576 = a;
var G__12577 = b;
var G__12578 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12576,G__12577,G__12578) : target_fn.call(null,G__12576,G__12577,G__12578));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12579 = a;
var G__12580 = b;
var G__12581 = c;
var G__12582 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12579,G__12580,G__12581,G__12582) : self__.dispatch_fn.call(null,G__12579,G__12580,G__12581,G__12582));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12583 = a;
var G__12584 = b;
var G__12585 = c;
var G__12586 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12583,G__12584,G__12585,G__12586) : target_fn.call(null,G__12583,G__12584,G__12585,G__12586));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12587 = a;
var G__12588 = b;
var G__12589 = c;
var G__12590 = d;
var G__12591 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12587,G__12588,G__12589,G__12590,G__12591) : self__.dispatch_fn.call(null,G__12587,G__12588,G__12589,G__12590,G__12591));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12592 = a;
var G__12593 = b;
var G__12594 = c;
var G__12595 = d;
var G__12596 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12592,G__12593,G__12594,G__12595,G__12596) : target_fn.call(null,G__12592,G__12593,G__12594,G__12595,G__12596));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12597 = a;
var G__12598 = b;
var G__12599 = c;
var G__12600 = d;
var G__12601 = e;
var G__12602 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12597,G__12598,G__12599,G__12600,G__12601,G__12602) : self__.dispatch_fn.call(null,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12603 = a;
var G__12604 = b;
var G__12605 = c;
var G__12606 = d;
var G__12607 = e;
var G__12608 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12603,G__12604,G__12605,G__12606,G__12607,G__12608) : target_fn.call(null,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12609 = a;
var G__12610 = b;
var G__12611 = c;
var G__12612 = d;
var G__12613 = e;
var G__12614 = f;
var G__12615 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615) : self__.dispatch_fn.call(null,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12616 = a;
var G__12617 = b;
var G__12618 = c;
var G__12619 = d;
var G__12620 = e;
var G__12621 = f;
var G__12622 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622) : target_fn.call(null,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12623 = a;
var G__12624 = b;
var G__12625 = c;
var G__12626 = d;
var G__12627 = e;
var G__12628 = f;
var G__12629 = g;
var G__12630 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630) : self__.dispatch_fn.call(null,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12631 = a;
var G__12632 = b;
var G__12633 = c;
var G__12634 = d;
var G__12635 = e;
var G__12636 = f;
var G__12637 = g;
var G__12638 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638) : target_fn.call(null,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637,G__12638));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12639 = a;
var G__12640 = b;
var G__12641 = c;
var G__12642 = d;
var G__12643 = e;
var G__12644 = f;
var G__12645 = g;
var G__12646 = h;
var G__12647 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647) : self__.dispatch_fn.call(null,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12648 = a;
var G__12649 = b;
var G__12650 = c;
var G__12651 = d;
var G__12652 = e;
var G__12653 = f;
var G__12654 = g;
var G__12655 = h;
var G__12656 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656) : target_fn.call(null,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12657 = a;
var G__12658 = b;
var G__12659 = c;
var G__12660 = d;
var G__12661 = e;
var G__12662 = f;
var G__12663 = g;
var G__12664 = h;
var G__12665 = i;
var G__12666 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666) : self__.dispatch_fn.call(null,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12667 = a;
var G__12668 = b;
var G__12669 = c;
var G__12670 = d;
var G__12671 = e;
var G__12672 = f;
var G__12673 = g;
var G__12674 = h;
var G__12675 = i;
var G__12676 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676) : target_fn.call(null,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675,G__12676));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12677 = a;
var G__12678 = b;
var G__12679 = c;
var G__12680 = d;
var G__12681 = e;
var G__12682 = f;
var G__12683 = g;
var G__12684 = h;
var G__12685 = i;
var G__12686 = j;
var G__12687 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687) : self__.dispatch_fn.call(null,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12688 = a;
var G__12689 = b;
var G__12690 = c;
var G__12691 = d;
var G__12692 = e;
var G__12693 = f;
var G__12694 = g;
var G__12695 = h;
var G__12696 = i;
var G__12697 = j;
var G__12698 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698) : target_fn.call(null,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12699 = a;
var G__12700 = b;
var G__12701 = c;
var G__12702 = d;
var G__12703 = e;
var G__12704 = f;
var G__12705 = g;
var G__12706 = h;
var G__12707 = i;
var G__12708 = j;
var G__12709 = k;
var G__12710 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710) : self__.dispatch_fn.call(null,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12711 = a;
var G__12712 = b;
var G__12713 = c;
var G__12714 = d;
var G__12715 = e;
var G__12716 = f;
var G__12717 = g;
var G__12718 = h;
var G__12719 = i;
var G__12720 = j;
var G__12721 = k;
var G__12722 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722) : target_fn.call(null,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12723 = a;
var G__12724 = b;
var G__12725 = c;
var G__12726 = d;
var G__12727 = e;
var G__12728 = f;
var G__12729 = g;
var G__12730 = h;
var G__12731 = i;
var G__12732 = j;
var G__12733 = k;
var G__12734 = l;
var G__12735 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735) : self__.dispatch_fn.call(null,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12736 = a;
var G__12737 = b;
var G__12738 = c;
var G__12739 = d;
var G__12740 = e;
var G__12741 = f;
var G__12742 = g;
var G__12743 = h;
var G__12744 = i;
var G__12745 = j;
var G__12746 = k;
var G__12747 = l;
var G__12748 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12736,G__12737,G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748) : target_fn.call(null,G__12736,G__12737,G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12749 = a;
var G__12750 = b;
var G__12751 = c;
var G__12752 = d;
var G__12753 = e;
var G__12754 = f;
var G__12755 = g;
var G__12756 = h;
var G__12757 = i;
var G__12758 = j;
var G__12759 = k;
var G__12760 = l;
var G__12761 = m;
var G__12762 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762) : self__.dispatch_fn.call(null,G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12763 = a;
var G__12764 = b;
var G__12765 = c;
var G__12766 = d;
var G__12767 = e;
var G__12768 = f;
var G__12769 = g;
var G__12770 = h;
var G__12771 = i;
var G__12772 = j;
var G__12773 = k;
var G__12774 = l;
var G__12775 = m;
var G__12776 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776) : target_fn.call(null,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12777 = a;
var G__12778 = b;
var G__12779 = c;
var G__12780 = d;
var G__12781 = e;
var G__12782 = f;
var G__12783 = g;
var G__12784 = h;
var G__12785 = i;
var G__12786 = j;
var G__12787 = k;
var G__12788 = l;
var G__12789 = m;
var G__12790 = n;
var G__12791 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791) : self__.dispatch_fn.call(null,G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12792 = a;
var G__12793 = b;
var G__12794 = c;
var G__12795 = d;
var G__12796 = e;
var G__12797 = f;
var G__12798 = g;
var G__12799 = h;
var G__12800 = i;
var G__12801 = j;
var G__12802 = k;
var G__12803 = l;
var G__12804 = m;
var G__12805 = n;
var G__12806 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806) : target_fn.call(null,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12807 = a;
var G__12808 = b;
var G__12809 = c;
var G__12810 = d;
var G__12811 = e;
var G__12812 = f;
var G__12813 = g;
var G__12814 = h;
var G__12815 = i;
var G__12816 = j;
var G__12817 = k;
var G__12818 = l;
var G__12819 = m;
var G__12820 = n;
var G__12821 = o;
var G__12822 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822) : self__.dispatch_fn.call(null,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12823 = a;
var G__12824 = b;
var G__12825 = c;
var G__12826 = d;
var G__12827 = e;
var G__12828 = f;
var G__12829 = g;
var G__12830 = h;
var G__12831 = i;
var G__12832 = j;
var G__12833 = k;
var G__12834 = l;
var G__12835 = m;
var G__12836 = n;
var G__12837 = o;
var G__12838 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838) : target_fn.call(null,G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12839 = a;
var G__12840 = b;
var G__12841 = c;
var G__12842 = d;
var G__12843 = e;
var G__12844 = f;
var G__12845 = g;
var G__12846 = h;
var G__12847 = i;
var G__12848 = j;
var G__12849 = k;
var G__12850 = l;
var G__12851 = m;
var G__12852 = n;
var G__12853 = o;
var G__12854 = p;
var G__12855 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855) : self__.dispatch_fn.call(null,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12856 = a;
var G__12857 = b;
var G__12858 = c;
var G__12859 = d;
var G__12860 = e;
var G__12861 = f;
var G__12862 = g;
var G__12863 = h;
var G__12864 = i;
var G__12865 = j;
var G__12866 = k;
var G__12867 = l;
var G__12868 = m;
var G__12869 = n;
var G__12870 = o;
var G__12871 = p;
var G__12872 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872) : target_fn.call(null,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12873 = a;
var G__12874 = b;
var G__12875 = c;
var G__12876 = d;
var G__12877 = e;
var G__12878 = f;
var G__12879 = g;
var G__12880 = h;
var G__12881 = i;
var G__12882 = j;
var G__12883 = k;
var G__12884 = l;
var G__12885 = m;
var G__12886 = n;
var G__12887 = o;
var G__12888 = p;
var G__12889 = q;
var G__12890 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890) : self__.dispatch_fn.call(null,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12891 = a;
var G__12892 = b;
var G__12893 = c;
var G__12894 = d;
var G__12895 = e;
var G__12896 = f;
var G__12897 = g;
var G__12898 = h;
var G__12899 = i;
var G__12900 = j;
var G__12901 = k;
var G__12902 = l;
var G__12903 = m;
var G__12904 = n;
var G__12905 = o;
var G__12906 = p;
var G__12907 = q;
var G__12908 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908) : target_fn.call(null,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12909 = a;
var G__12910 = b;
var G__12911 = c;
var G__12912 = d;
var G__12913 = e;
var G__12914 = f;
var G__12915 = g;
var G__12916 = h;
var G__12917 = i;
var G__12918 = j;
var G__12919 = k;
var G__12920 = l;
var G__12921 = m;
var G__12922 = n;
var G__12923 = o;
var G__12924 = p;
var G__12925 = q;
var G__12926 = r;
var G__12927 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927) : self__.dispatch_fn.call(null,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12928 = a;
var G__12929 = b;
var G__12930 = c;
var G__12931 = d;
var G__12932 = e;
var G__12933 = f;
var G__12934 = g;
var G__12935 = h;
var G__12936 = i;
var G__12937 = j;
var G__12938 = k;
var G__12939 = l;
var G__12940 = m;
var G__12941 = n;
var G__12942 = o;
var G__12943 = p;
var G__12944 = q;
var G__12945 = r;
var G__12946 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946) : target_fn.call(null,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12947 = a;
var G__12948 = b;
var G__12949 = c;
var G__12950 = d;
var G__12951 = e;
var G__12952 = f;
var G__12953 = g;
var G__12954 = h;
var G__12955 = i;
var G__12956 = j;
var G__12957 = k;
var G__12958 = l;
var G__12959 = m;
var G__12960 = n;
var G__12961 = o;
var G__12962 = p;
var G__12963 = q;
var G__12964 = r;
var G__12965 = s;
var G__12966 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966) : self__.dispatch_fn.call(null,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12967 = a;
var G__12968 = b;
var G__12969 = c;
var G__12970 = d;
var G__12971 = e;
var G__12972 = f;
var G__12973 = g;
var G__12974 = h;
var G__12975 = i;
var G__12976 = j;
var G__12977 = k;
var G__12978 = l;
var G__12979 = m;
var G__12980 = n;
var G__12981 = o;
var G__12982 = p;
var G__12983 = q;
var G__12984 = r;
var G__12985 = s;
var G__12986 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986) : target_fn.call(null,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12988 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12988);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__12993 = msg;
return Error(G__12993);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12998 = x;
var G__12999 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12998,G__12999) : pred.call(null,G__12998,G__12999));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13000 = y;
var G__13001 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13000,G__13001) : pred.call(null,G__13000,G__13001));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map